Activity a CORE
Activity b IDLE
Activity c WORK
Activity d PLAY
Activity e REST
Activity f MEET
Activity g PANIC
Activity h RAID
Activity i PRE_RAID
Activity j HIDE
Activity k FLIGHT
Activity l CELEBRATE
Activity m ADMIRE_ITEM
Activity n AVOID
Activity o RIDE
Advancement a parent
Advancement b display
Advancement c rewards
Advancement d key
Advancement e criteria
Advancement f ()Ljava/util/Map; getCriteria
Advancement f requirements
Advancement g children
Advancement h ()LMinecraftKey; getName
Advancement h chatComponent
AdvancementDataPlayer a (LAdvancement;Ljava/lang/String;)Z grantCriteria
AdvancementDataPlayer b (LAdvancement;)LAdvancementProgress; getProgress
AdvancementDataPlayer b (LAdvancement;Ljava/lang/String;)Z revokeCritera
AdvancementDataPlayer g data
AdvancementDataPlayer k player
AdvancementDataWorld a ()Ljava/util/Collection; getAdvancements
AdvancementDataWorld b DESERIALIZER
AdvancementDataWorld c REGISTRY
AdvancementFrameType a TASK
AdvancementFrameType b CHALLENGE
AdvancementFrameType c GOAL
AdvancementProgress a ()Z isDone
AdvancementProgress c (Ljava/lang/String;)LCriterionProgress; getCriterionProgress
AdvancementProgress e ()Ljava/lang/Iterable; getRemainingCriteria
AdvancementProgress f ()Ljava/lang/Iterable; getAwardedCriteria
AdvancementRequirements a AND
AdvancementRequirements b OR
Advancements b advancements
ArgumentAnchor$Anchor a FEET
ArgumentAnchor$Anchor b EYES
ArgumentBlock a ()Ljava/util/Map; getStateMap
ArgumentBlock b ()LIBlockData; getBlockData
ArgumentEntity b ()LArgumentEntity; multipleEntities
ArgumentParserSelector T checkPermissions
ArgumentParserSelector b ()V parseSelector
ArgumentParserSelector t ()LEntitySelector; parse
AttributeBase a ()D getDefault
AttributeBase c ()Ljava/lang/String; getName
AttributeMapBase a ()Ljava/util/Set; getAttributes
AttributeModifiable a ()LAttributeBase; getAttribute
AttributeModifiable a (D)V setValue
AttributeModifiable b ()D getBaseValue
AttributeModifiable c ()Ljava/util/Set; getModifiers
AttributeModifiable c (LAttributeModifier;)V addModifier
AttributeModifiable d (LAttributeModifier;)V removeModifier
AttributeModifiable f ()D getValue
AttributeModifier a ()Ljava/util/UUID; getUniqueId
AttributeModifier b ()Ljava/lang/String; getName
AttributeModifier c ()LAttributeModifier$Operation; getOperation
AttributeModifier d ()D getAmount
AttributeModifier e ()LNBTTagCompound; save
AttributeModifier$Operation a ADDITION
AttributeModifier$Operation b MULTIPLY_BASE
AttributeModifier$Operation c MULTIPLY_TOTAL
AttributeRanged b maximum
AxisAlignedBB a minX
AxisAlignedBB b minY
AxisAlignedBB c (DDD)LAxisAlignedBB; grow
AxisAlignedBB c minZ
AxisAlignedBB d maxX
AxisAlignedBB e maxY
AxisAlignedBB f maxZ
AxisAlignedBB h (D)LAxisAlignedBB; shrink
BaseBlockPosition a (DDDZ)D distanceSquared
BaseBlockPosition b (LEnumDirection;I)LBaseBlockPosition; shift
BaseBlockPosition e ZERO
BaseBlockPosition m (I)LBaseBlockPosition; down
BaseBlockPosition n ()LBaseBlockPosition; down
BaseBlockPosition n (I)LBaseBlockPosition; up
BaseBlockPosition o ()LBaseBlockPosition; up
BaseBlockPosition u ()I getX
BaseBlockPosition v ()I getY
BaseBlockPosition w ()I getZ
Behavior$Status a STOPPED
Behavior$Status b RUNNING
BehaviorController a (LMemoryModuleType;)Z hasMemory
BehaviorController a (LMemoryModuleType;Ljava/lang/Object;)V setMemory
BehaviorController a (LMemoryModuleType;Ljava/util/Optional;)V setMemory
BehaviorController a (LSchedule;)V setSchedule
BehaviorController b ()LSchedule; getSchedule
BehaviorController b (LMemoryModuleType;)V removeMemory
BehaviorController c (LMemoryModuleType;)Ljava/util/Optional; getMemory
BehaviorController c memories
BehaviorController d sensors
BehaviorController f schedule
BehaviorCrossbowAttack$BowState a UNCHARGED
BehaviorCrossbowAttack$BowState b CHARGING
BehaviorCrossbowAttack$BowState c CHARGED
BehaviorCrossbowAttack$BowState d READY_TO_ATTACK
BehaviorFarm b farmBlock
BehaviorGate$Execution a RUN_ONE
BehaviorGate$Execution b TRY_ALL
BehaviorGate$Order a ORDERED
BehaviorGate$Order b SHUFFLED
BehaviorWork a (LWorldServer;LEntityVillager;)V doWork
BiomeBase a (LBlockPosition;)F getAdjustedTemperature
BiomeBase i ()F getHumidity
BiomeBase$Geography a NONE
BiomeBase$Geography b TAIGA
BiomeBase$Geography c EXTREME_HILLS
BiomeBase$Geography d JUNGLE
BiomeBase$Geography e MESA
BiomeBase$Geography f PLAINS
BiomeBase$Geography g SAVANNA
BiomeBase$Geography h ICY
BiomeBase$Geography i THEEND
BiomeBase$Geography j BEACH
BiomeBase$Geography k FOREST
BiomeBase$Geography l OCEAN
BiomeBase$Geography m DESERT
BiomeBase$Geography n RIVER
BiomeBase$Geography o SWAMP
BiomeBase$Geography p MUSHROOM
BiomeBase$Geography q NETHER
BiomeBase$Precipitation a NONE
BiomeBase$Precipitation b RAIN
BiomeBase$Precipitation c SNOW
BiomeBase$TemperatureModifier a NONE
BiomeBase$TemperatureModifier b FROZEN
BiomeDecoratorGroups A SEAGRASS_DEEP_WARM
BiomeDecoratorGroups B SEA_PICKLE
BiomeDecoratorGroups C ICE_SPIKE
BiomeDecoratorGroups D ICE_PATCH
BiomeDecoratorGroups E FOREST_ROCK
BiomeDecoratorGroups F SEAGRASS_SIMPLE
BiomeDecoratorGroups G ICEBERG_PACKED
BiomeDecoratorGroups H ICEBERG_BLUE
BiomeDecoratorGroups I KELP_COLD
BiomeDecoratorGroups J KELP_WARM
BiomeDecoratorGroups K BLUE_ICE
BiomeDecoratorGroups L BAMBOO_LIGHT
BiomeDecoratorGroups M BAMBOO
BiomeDecoratorGroups N VINES
BiomeDecoratorGroups O LAKE_WATER
BiomeDecoratorGroups P LAKE_LAVA
BiomeDecoratorGroups Q DISK_CLAY
BiomeDecoratorGroups R DISK_GRAVEL
BiomeDecoratorGroups S DISK_SAND
BiomeDecoratorGroups T FREEZE_TOP_LAYER
BiomeDecoratorGroups U BONUS_CHEST
BiomeDecoratorGroups V VOID_START_PLATFORM
BiomeDecoratorGroups W MONSTER_ROOM
BiomeDecoratorGroups X DESERT_WELL
BiomeDecoratorGroups Y FOSSIL
BiomeDecoratorGroups Z SPRING_LAVA_DOUBLE
BiomeDecoratorGroups a END_SPIKE
BiomeDecoratorGroups aA PATCH_GRASS_TAIGA
BiomeDecoratorGroups aB PATCH_GRASS_JUNGLE
BiomeDecoratorGroups aC PATCH_DEAD_BUSH_2
BiomeDecoratorGroups aD PATCH_DEAD_BUSH
BiomeDecoratorGroups aE PATCH_DEAD_BUSH_BADLANDS
BiomeDecoratorGroups aF PATCH_MELON
BiomeDecoratorGroups aG PATCH_BERRY_SPARSE
BiomeDecoratorGroups aH PATCH_BERRY_DECORATED
BiomeDecoratorGroups aI PATCH_WATERLILLY
BiomeDecoratorGroups aJ PATCH_TALL_GRASS_2
BiomeDecoratorGroups aK PATCH_TALL_GRASS
BiomeDecoratorGroups aL PATCH_LARGE_FERN
BiomeDecoratorGroups aM PATCH_CACTUS
BiomeDecoratorGroups aN PATCH_CACTUS_DESERT
BiomeDecoratorGroups aO PATCH_CACTUS_DECORATED
BiomeDecoratorGroups aP PATCH_SUGAR_CANE_SWAMP
BiomeDecoratorGroups aQ PATCH_SUGAR_CANE_DESERT
BiomeDecoratorGroups aR PATCH_SUGAR_CANE_BADLANDS
BiomeDecoratorGroups aS PATCH_SUGAR_CANE
BiomeDecoratorGroups aT BROWN_MUSHROOM_NETHER
BiomeDecoratorGroups aU RED_MUSHROOM_NETHER
BiomeDecoratorGroups aV BROWN_MUSHROOM_NORMAL
BiomeDecoratorGroups aW RED_MUSHROOM_NORMAL
BiomeDecoratorGroups aX BROWN_MUSHROOM_TAIGA
BiomeDecoratorGroups aY RED_MUSHROOM_TAIGA
BiomeDecoratorGroups aZ BROWN_MUSHROOM_GIANT
BiomeDecoratorGroups aa SPRING_LAVA
BiomeDecoratorGroups ab SPRING_DELTA
BiomeDecoratorGroups ac SPRING_CLOSED
BiomeDecoratorGroups ad SPRING_CLOSED_DOUBLE
BiomeDecoratorGroups ae SPRING_OPEN
BiomeDecoratorGroups af SPRING_WATER
BiomeDecoratorGroups ag PILE_HAY
BiomeDecoratorGroups ah PILE_MELON
BiomeDecoratorGroups ai PILE_SNOW
BiomeDecoratorGroups aj PILE_ICE
BiomeDecoratorGroups ak PILE_PUMPKIN
BiomeDecoratorGroups al PATCH_FIRE
BiomeDecoratorGroups am PATCH_SOUL_FIRE
BiomeDecoratorGroups an PATCH_BROWN_MUSHROOM
BiomeDecoratorGroups ao PATCH_RED_MUSHROOM
BiomeDecoratorGroups ap PATCH_CRIMSON_ROOTS
BiomeDecoratorGroups aq PATCH_SUNFLOWER
BiomeDecoratorGroups ar PATCH_PUMPKIN
BiomeDecoratorGroups as PATCH_TAIGA_GRASS
BiomeDecoratorGroups at PATCH_BERRY_BUSH
BiomeDecoratorGroups au PATCH_GRASS_PLAIN
BiomeDecoratorGroups av PATCH_GRASS_FOREST
BiomeDecoratorGroups aw PATCH_GRASS_BADLANDS
BiomeDecoratorGroups ax PATCH_GRASS_SAVANNA
BiomeDecoratorGroups ay PATCH_GRASS_NORMAL
BiomeDecoratorGroups az PATCH_GRASS_TAIGA_2
BiomeDecoratorGroups b END_GATEWAY
BiomeDecoratorGroups bB ORE_INFESTED
BiomeDecoratorGroups bC ORE_EMERALD
BiomeDecoratorGroups bD ORE_DEBRIS_LARGE
BiomeDecoratorGroups bE ORE_DEBRIS_SMALL
BiomeDecoratorGroups bL CRIMSON_FUNGI
BiomeDecoratorGroups bM CRIMSON_FUNGI_PLANTED
BiomeDecoratorGroups bN WARPED_FUNGI
BiomeDecoratorGroups bO WARPED_FUNGI_PLANTED
BiomeDecoratorGroups bP HUGE_BROWN_MUSHROOM
BiomeDecoratorGroups bQ HUGE_RED_MUSHROOM
BiomeDecoratorGroups bR OAK
BiomeDecoratorGroups bS DARK_OAK
BiomeDecoratorGroups bT BIRCH
BiomeDecoratorGroups bU ACACIA
BiomeDecoratorGroups bV SPRUCE
BiomeDecoratorGroups bW PINE
BiomeDecoratorGroups bX JUNGLE_TREE
BiomeDecoratorGroups bY FANCY_OAK
BiomeDecoratorGroups bZ JUNGLE_TREE_NO_VINE
BiomeDecoratorGroups ba RED_MUSHROOM_GIANT
BiomeDecoratorGroups bb BROWN_MUSHROOM_SWAMP
BiomeDecoratorGroups bc RED_MUSHROOM_SWAMP
BiomeDecoratorGroups bd ORE_MAGMA
BiomeDecoratorGroups be ORE_SOUL_SAND
BiomeDecoratorGroups bf ORE_GOLD_DELTAS
BiomeDecoratorGroups bg ORE_QUARTZ_DELTAS
BiomeDecoratorGroups bh ORE_GOLD_NETHER
BiomeDecoratorGroups bi ORE_QUARTZ_NETHER
BiomeDecoratorGroups bj ORE_GRAVEL_NETHER
BiomeDecoratorGroups bk ORE_BLACKSTONE
BiomeDecoratorGroups bl ORE_DIRT
BiomeDecoratorGroups bm ORE_GRAVEL
BiomeDecoratorGroups bn ORE_GRANITE
BiomeDecoratorGroups bo ORE_DIORITE
BiomeDecoratorGroups bp ORE_ANDESITE
BiomeDecoratorGroups bu ORE_GOLD_EXTRA
BiomeDecoratorGroups bv ORE_GOLD
BiomeDecoratorGroups bw ORE_REDSTONE
BiomeDecoratorGroups by ORE_DIAMOND
BiomeDecoratorGroups bz ORE_LAPIS
BiomeDecoratorGroups c END_GATEWAY_DELAYED
BiomeDecoratorGroups cA DARK_FOREST_VEGETATION_RED
BiomeDecoratorGroups cB WARM_OCEAN_VEGETATION
BiomeDecoratorGroups cC FOREST_FLOWER_TREES
BiomeDecoratorGroups cD TAIGA_VEGETATION
BiomeDecoratorGroups cE TREES_SHATTERED_SAVANNA
BiomeDecoratorGroups cF TREES_SAVANNA
BiomeDecoratorGroups cG BIRCH_TALL
BiomeDecoratorGroups cH TREES_BIRCH
BiomeDecoratorGroups cI TREES_MOUNTAIN_EDGE
BiomeDecoratorGroups cJ TREES_MOUNTAIN
BiomeDecoratorGroups cK TREES_WATER
BiomeDecoratorGroups cL BIRCH_OTHER
BiomeDecoratorGroups cM PLAIN_VEGETATION
BiomeDecoratorGroups cN TREES_JUNGLE_EDGE
BiomeDecoratorGroups cO TREES_GIANT_SPRUCE
BiomeDecoratorGroups cP TREES_GIANT
BiomeDecoratorGroups cQ TREES_JUNGLE
BiomeDecoratorGroups cR BAMBOO_VEGETATION
BiomeDecoratorGroups cS MUSHROOM_FIELD_VEGETATION
BiomeDecoratorGroups ca MEGA_JUNGLE_TREE
BiomeDecoratorGroups cb MEGA_SPRUCE
BiomeDecoratorGroups cc MEGA_PINE
BiomeDecoratorGroups cd SUPER_BIRCH_BEES_0002
BiomeDecoratorGroups ce SWAMP_TREE
BiomeDecoratorGroups cf JUNGLE_BUSH
BiomeDecoratorGroups cg OAK_BEES_0002
BiomeDecoratorGroups ch OAK_BEES_002
BiomeDecoratorGroups ci OAK_BEES_005
BiomeDecoratorGroups cj BIRCH_BEES_0002
BiomeDecoratorGroups ck BIRCH_BEES_002
BiomeDecoratorGroups cl BIRCH_BEES_005
BiomeDecoratorGroups cm FANCY_OAK_BEES_0002
BiomeDecoratorGroups cn FANCY_OAK_BEES_002
BiomeDecoratorGroups co FANCY_OAK_BEES_005
BiomeDecoratorGroups cp OAK_BADLANDS
BiomeDecoratorGroups cq SPRUCE_SNOWY
BiomeDecoratorGroups cr FLOWER_WARM
BiomeDecoratorGroups cs FLOWER_DEFAULT
BiomeDecoratorGroups ct FLOWER_FOREST
BiomeDecoratorGroups cu FLOWER_SWAMP
BiomeDecoratorGroups cv FLOWER_PLAIN
BiomeDecoratorGroups cw FLOWER_PLAIN_DECORATED
BiomeDecoratorGroups cx FOREST_FLOWER_VEGETATION_COMMON
BiomeDecoratorGroups cy FOREST_FLOWER_VEGETATION
BiomeDecoratorGroups cz DARK_FOREST_VEGETATION_BROWN
BiomeDecoratorGroups d CHORUS_PLANT
BiomeDecoratorGroups e END_ISLAND
BiomeDecoratorGroups f END_ISLAND_DECORATED
BiomeDecoratorGroups g DELTA
BiomeDecoratorGroups h SMALL_BASALT_COLUMNS
BiomeDecoratorGroups i LARGE_BASALT_COLUMNS
BiomeDecoratorGroups j BASALT_BLOBS
BiomeDecoratorGroups k BLACKSTONE_BLOBS
BiomeDecoratorGroups l GLOWSTONE_EXTRA
BiomeDecoratorGroups m GLOWSTONE
BiomeDecoratorGroups n CRIMSON_FOREST_VEGETATION
BiomeDecoratorGroups o WARPED_FOREST_VEGETATION
BiomeDecoratorGroups p NETHER_SPROUTS
BiomeDecoratorGroups q TWISTING_VINES
BiomeDecoratorGroups r WEEPING_VINES
BiomeDecoratorGroups s BASALT_PILLAR
BiomeDecoratorGroups t SEAGRASS_COLD
BiomeDecoratorGroups u SEAGRASS_DEEP_COLD
BiomeDecoratorGroups v SEAGRASS_NORMAL
BiomeDecoratorGroups w SEAGRASS_RIVER
BiomeDecoratorGroups x SEAGRASS_DEEP
BiomeDecoratorGroups y SEAGRASS_SWAMP
BiomeDecoratorGroups z SEAGRASS_WARM
BiomeFog$GrassColor a NONE
BiomeFog$GrassColor b DARK_FOREST
BiomeFog$GrassColor c SWAMP
BiomeManager$Provider b (III)LBiomeBase; getBiome
BiomeStorage e registry
Biomes A SNOWY_BEACH
Biomes B BIRCH_FOREST
Biomes C BIRCH_FOREST_HILLS
Biomes D DARK_FOREST
Biomes E SNOWY_TAIGA
Biomes F SNOWY_TAIGA_HILLS
Biomes G GIANT_TREE_TAIGA
Biomes H GIANT_TREE_TAIGA_HILLS
Biomes I WOODED_MOUNTAINS
Biomes J SAVANNA
Biomes K SAVANNA_PLATEAU
Biomes L BADLANDS
Biomes M WOODED_BADLANDS_PLATEAU
Biomes N BADLANDS_PLATEAU
Biomes O SMALL_END_ISLANDS
Biomes P END_MIDLANDS
Biomes Q END_HIGHLANDS
Biomes R END_BARRENS
Biomes S WARM_OCEAN
Biomes T LUKEWARM_OCEAN
Biomes U COLD_OCEAN
Biomes V DEEP_WARM_OCEAN
Biomes W DEEP_LUKEWARM_OCEAN
Biomes X DEEP_COLD_OCEAN
Biomes Y DEEP_FROZEN_OCEAN
Biomes Z THE_VOID
Biomes a OCEAN
Biomes aA BASALT_DELTAS
Biomes aa SUNFLOWER_PLAINS
Biomes ab DESERT_LAKES
Biomes ac GRAVELLY_MOUNTAINS
Biomes ad FLOWER_FOREST
Biomes ae TAIGA_MOUNTAINS
Biomes af SWAMP_HILLS
Biomes ag ICE_SPIKES
Biomes ah MODIFIED_JUNGLE
Biomes ai MODIFIED_JUNGLE_EDGE
Biomes aj TALL_BIRCH_FOREST
Biomes ak TALL_BIRCH_HILLS
Biomes al DARK_FOREST_HILLS
Biomes am SNOWY_TAIGA_MOUNTAINS
Biomes an GIANT_SPRUCE_TAIGA
Biomes ao GIANT_SPRUCE_TAIGA_HILLS
Biomes ap MODIFIED_GRAVELLY_MOUNTAINS
Biomes aq SHATTERED_SAVANNA
Biomes ar SHATTERED_SAVANNA_PLATEAU
Biomes as ERODED_BADLANDS
Biomes at MODIFIED_WOODED_BADLANDS_PLATEAU
Biomes au MODIFIED_BADLANDS_PLATEAU
Biomes av BAMBOO_JUNGLE
Biomes aw BAMBOO_JUNGLE_HILLS
Biomes ax SOUL_SAND_VALLEY
Biomes ay CRIMSON_FOREST
Biomes az WARPED_FOREST
Biomes b PLAINS
Biomes c DESERT
Biomes d MOUNTAINS
Biomes e FOREST
Biomes f TAIGA
Biomes g SWAMP
Biomes h RIVER
Biomes i NETHER_WASTES
Biomes j THE_END
Biomes k FROZEN_OCEAN
Biomes l FROZEN_RIVER
Biomes m SNOWY_TUNDRA
Biomes n SNOWY_MOUNTAINS
Biomes o MUSHROOM_FIELDS
Biomes p MUSHROOM_FIELD_SHORE
Biomes q BEACH
Biomes r DESERT_HILLS
Biomes s WOODED_HILLS
Biomes t TAIGA_HILLS
Biomes u MOUNTAIN_EDGE
Biomes v JUNGLE
Biomes w JUNGLE_HILLS
Biomes x JUNGLE_EDGE
Biomes y DEEP_OCEAN
Biomes z STONE_SHORE
Block a (I)LIBlockData; getByCombinedId
Block a (LBlockActionContext;)LIBlockData; getPlacedState
Block a (LGeneratorAccess;LBlockPosition;LIBlockData;)V postBreak
Block a (LIBlockData;LWorld;LBlockPosition;LTileEntity;LEntity;LItemStack;)V dropItems
Block a (LIBlockData;LWorldServer;LBlockPosition;LTileEntity;LEntity;LItemStack;)Ljava/util/List; getDrops
Block a (LItem;)LBlock; asBlock
Block a (LWorld;LBlockPosition;LEntity;)V stepOn
Block a (LWorld;LBlockPosition;LEntity;F)V fallOn
Block a (LWorld;LBlockPosition;LExplosion;)V wasExploded
Block a (LWorld;LBlockPosition;LIBlockData;LEntityLiving;LItemStack;)V postPlace
Block a (LWorldServer;LBlockPosition;I)V dropExperience
Block b blockData
Block c name
Block c_ (LIBlockData;)Z isTicking
Block f ()F getDurability
Block i ()F getFrictionFactor
Block i (LIBlockData;)I getCombinedId
Block j ()F getSpeedFactor
Block l ()F getJumpFactor
Block l (LIBlockData;)LSoundEffectType; getStepSound
Block m ()LBlockStateList; getStates
Block m REGISTRY_ID
Block n ()LIBlockData; getBlockData
Block n blockStateList
BlockAccessAir a INSTANCE
BlockAnvil a FACING
BlockAttachable u FACE
BlockBanner a ROTATION
BlockBannerAbstract b ()LEnumColor; getColor
BlockBarrel b OPEN
BlockBase a (LIBlockData;LEntityHuman;LIBlockAccess;LBlockPosition;)F getDamage
BlockBase a (LIBlockData;LEnumDirection;LIBlockData;LGeneratorAccess;LBlockPosition;LBlockPosition;)LIBlockData; updateState
BlockBase a (LIBlockData;LIWorldReader;LBlockPosition;)Z canPlace
BlockBase a (LIBlockData;LWorld;LBlockPosition;LBlock;LBlockPosition;Z)V doPhysics
BlockBase a (LIBlockData;LWorld;LBlockPosition;LEntityHuman;)V attack
BlockBase a (LIBlockData;LWorld;LBlockPosition;LEntityHuman;LEnumHand;LMovingObjectPositionBlock;)LEnumInteractionResult; interact
BlockBase a (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V remove
BlockBase a (LIBlockData;LWorldServer;LBlockPosition;LItemStack;)V dropNaturally
BlockBase a_ (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V tickAlways
BlockBase as material
BlockBase au durability
BlockBase aw stepSound
BlockBase ax frictionFactor
BlockBase ay speedFactor
BlockBase az jumpFactor
BlockBase b (LIBlockData;)Z isComplexRedstone
BlockBase b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getInventory
BlockBase b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockBase b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V tick
BlockBase c (LIBlockData;)LEnumPistonReaction; getPushReaction
BlockBase d_ (LIBlockData;)Z isPowerSource
BlockBase k ()LItem; getItem
BlockBase$BlockData a (LEntityHuman;LIBlockAccess;LBlockPosition;)F getDamage
BlockBase$BlockData a (LEnumDirection;LIBlockData;LGeneratorAccess;LBlockPosition;LBlockPosition;)LIBlockData; updateState
BlockBase$BlockData a (LIWorldReader;LBlockPosition;)Z canPlace
BlockBase$BlockData a (LWorld;LBlockPosition;LBlock;LBlockPosition;Z)V doPhysics
BlockBase$BlockData a (LWorld;LBlockPosition;LEntityHuman;)V attack
BlockBase$BlockData a (LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockBase$BlockData a (LWorld;LEntityHuman;LEnumHand;LMovingObjectPositionBlock;)LEnumInteractionResult; interact
BlockBase$BlockData a (LWorldServer;LBlockPosition;LItemStack;)V dropNaturally
BlockBase$BlockData b ()LBlock; getBlock
BlockBase$BlockData b (LWorld;LBlockPosition;LIBlockData;Z)V remove
BlockBase$BlockData c ()LMaterial; getMaterial
BlockBase$BlockData g ()Z isAir
BlockBase$BlockData g (LIBlockAccess;LBlockPosition;)Z isOccluding
BlockBase$BlockData i ()Z isPowerSource
BlockBase$BlockData i strength
BlockBase$BlockData j ()Z isComplexRedstone
BlockBase$BlockData j (LIBlockAccess;LBlockPosition;)LVoxelShape; getShape
BlockBase$BlockData k ()LEnumPistonReaction; getPushReaction
BlockBase$BlockData k (LIBlockAccess;LBlockPosition;)LVoxelShape; getCollisionShape
BlockBase$BlockData n ()LFluid; getFluid
BlockBase$BlockData o ()Z isTicking
BlockBase$BlockData p ()LSoundEffectType; getStepSound
BlockBase$BlockData r ()Z isRequiresSpecialTool
BlockBase$EnumRandomOffset a NONE
BlockBase$EnumRandomOffset b XZ
BlockBase$EnumRandomOffset c XYZ
BlockBed a PART
BlockBed b OCCUPIED
BlockBed o color
BlockBrewingStand a HAS_BOTTLE
BlockButtonAbstract a POWERED
BlockCactus a AGE
BlockCake a BITES
BlockCampfire b LIT
BlockCarpet b color
BlockChest a (LBlockChest;LIBlockData;LWorld;LBlockPosition;Z)LIInventory; getInventory
BlockChest b FACING
BlockChorusFlower a AGE
BlockCobbleWall a UP
BlockCocoa a AGE
BlockComposter$ContainerOutput a blockData
BlockComposter$ContainerOutput b generatorAccess
BlockComposter$ContainerOutput c blockPosition
BlockComposter$ContainerOutput d emptied
BlockConcretePowder b (LIBlockAccess;LBlockPosition;LIBlockData;)Z canHarden
BlockCrops b (I)LIBlockData; setAge
BlockCrops b AGE
BlockCrops h (LIBlockData;)Z isRipe
BlockDaylightDetector a POWER
BlockDiodeAbstract m (LIBlockData;)Z isDiode
BlockDirectional a FACING
BlockDispenser a (LWorldServer;LBlockPosition;)V dispense
BlockDispenser a FACING
BlockDispenser b TRIGGERED
BlockDispenser c REGISTRY
BlockDoor a FACING
BlockDoor b OPEN
BlockDoor c HINGE
BlockDoor d POWERED
BlockDoor e HALF
BlockEnderChest b FACING
BlockEnderPortalFrame a FACING
BlockEnderPortalFrame b EYE
BlockFacingHorizontal aq FACING
BlockFalling h (LIBlockData;)Z canFallThrough
BlockFenceGate a OPEN
BlockFenceGate b POWERED
BlockFenceGate c IN_WALL
BlockFire a (LWorld;LBlockPosition;ILjava/util/Random;I)V trySpread
BlockFire b (LIBlockAccess;LBlockPosition;)LIBlockData; getPlacedState
BlockFire b AGE
BlockFire c NORTH
BlockFire d (LIBlockAccess;LBlockPosition;)Z canBurn
BlockFire d EAST
BlockFire e SOUTH
BlockFire f WEST
BlockFire g UPPER
BlockFire m (LIBlockData;)I getBurnChance
BlockFire n (LIBlockData;)I getFlameChance
BlockFire r flameChances
BlockFire s burnChances
BlockFloorSign d ROTATION
BlockFluids a (LGeneratorAccess;LBlockPosition;)V fizz
BlockFluids a LEVEL
BlockFurnace a FACING
BlockFurnace b LIT
BlockHopper a FACING
BlockHopper b ENABLED
BlockIce d (LIBlockData;LWorld;LBlockPosition;)V melt
BlockJukeBox a (LWorld;LBlockPosition;)V dropRecord
BlockJukeBox a HAS_RECORD
BlockLadder a FACING
BlockLeaves a DISTANCE
BlockLeaves b PERSISTENT
BlockLectern a (LWorld;LBlockPosition;LIBlockData;Z)V setHasBook
BlockLever a POWERED
BlockMinecartDetector d SHAPE
BlockMinecartDetector e POWERED
BlockMinecartTrack d SHAPE
BlockNetherWart a AGE
BlockNote a (LWorld;LBlockPosition;)V play
BlockNote a INSTRUMENT
BlockNote b POWERED
BlockNote c NOTE
BlockPiston b EXTENDED
BlockPiston i sticky
BlockPistonExtension b TYPE
BlockPistonExtension c SHORT
BlockPortal a AXIS
BlockPortalShape b ()V createPortal
BlockPortalShape f position
BlockPortalShape g height
BlockPortalShape h width
BlockPosition a ()J asLong
BlockPosition a (LEnumDirection;)LBlockPosition; shift
BlockPosition b ZERO
BlockPosition d ()LBlockPosition; north
BlockPosition d (I)LBlockPosition; north
BlockPosition d (J)LBlockPosition; fromLong
BlockPosition e ()LBlockPosition; south
BlockPosition e (I)LBlockPosition; south
BlockPosition f ()LBlockPosition; west
BlockPosition f (I)LBlockPosition; west
BlockPosition g ()LBlockPosition; east
BlockPosition g (I)LBlockPosition; east
BlockPosition h ()LBlockPosition; immutableCopy
BlockPoweredRail d SHAPE
BlockPoweredRail e POWERED
BlockPressurePlateAbstract g (LIBlockData;)I getPower
BlockPressurePlateBinary d POWERED
BlockPressurePlateBinary$EnumMobType a EVERYTHING
BlockPressurePlateBinary$EnumMobType b MOBS
BlockPressurePlateWeighted d POWER
BlockPressurePlateWeighted e weight
BlockPropertyAttachPosition a FLOOR
BlockPropertyAttachPosition b WALL
BlockPropertyAttachPosition c CEILING
BlockPropertyBambooSize a NONE
BlockPropertyBambooSize b SMALL
BlockPropertyBambooSize c LARGE
BlockPropertyBedPart a HEAD
BlockPropertyBedPart b FOOT
BlockPropertyBellAttach a FLOOR
BlockPropertyBellAttach b CEILING
BlockPropertyBellAttach c SINGLE_WALL
BlockPropertyBellAttach d DOUBLE_WALL
BlockPropertyChestType a SINGLE
BlockPropertyChestType b LEFT
BlockPropertyChestType c RIGHT
BlockPropertyComparatorMode a COMPARE
BlockPropertyComparatorMode b SUBTRACT
BlockPropertyDoorHinge a LEFT
BlockPropertyDoorHinge b RIGHT
BlockPropertyDoubleBlockHalf a UPPER
BlockPropertyDoubleBlockHalf b LOWER
BlockPropertyHalf a TOP
BlockPropertyHalf b BOTTOM
BlockPropertyInstrument a HARP
BlockPropertyInstrument b BASEDRUM
BlockPropertyInstrument c SNARE
BlockPropertyInstrument d HAT
BlockPropertyInstrument e BASS
BlockPropertyInstrument f FLUTE
BlockPropertyInstrument g BELL
BlockPropertyInstrument h GUITAR
BlockPropertyInstrument i CHIME
BlockPropertyInstrument j XYLOPHONE
BlockPropertyInstrument k IRON_XYLOPHONE
BlockPropertyInstrument l COW_BELL
BlockPropertyInstrument m DIDGERIDOO
BlockPropertyInstrument n BIT
BlockPropertyInstrument o BANJO
BlockPropertyInstrument p PLING
BlockPropertyJigsawOrientation a DOWN_EAST
BlockPropertyJigsawOrientation b DOWN_NORTH
BlockPropertyJigsawOrientation c DOWN_SOUTH
BlockPropertyJigsawOrientation d DOWN_WEST
BlockPropertyJigsawOrientation e UP_EAST
BlockPropertyJigsawOrientation f UP_NORTH
BlockPropertyJigsawOrientation g UP_SOUTH
BlockPropertyJigsawOrientation h UP_WEST
BlockPropertyJigsawOrientation i WEST_UP
BlockPropertyJigsawOrientation j EAST_UP
BlockPropertyJigsawOrientation k NORTH_UP
BlockPropertyJigsawOrientation l SOUTH_UP
BlockPropertyPistonType a DEFAULT
BlockPropertyPistonType b STICKY
BlockPropertyRedstoneSide a UP
BlockPropertyRedstoneSide b SIDE
BlockPropertyRedstoneSide c NONE
BlockPropertySlabType a TOP
BlockPropertySlabType b BOTTOM
BlockPropertySlabType c DOUBLE
BlockPropertyStairsShape a STRAIGHT
BlockPropertyStairsShape b INNER_LEFT
BlockPropertyStairsShape c INNER_RIGHT
BlockPropertyStairsShape d OUTER_LEFT
BlockPropertyStairsShape e OUTER_RIGHT
BlockPropertyStructureMode a SAVE
BlockPropertyStructureMode b LOAD
BlockPropertyStructureMode c CORNER
BlockPropertyStructureMode d DATA
BlockPropertyTrackPosition a NORTH_SOUTH
BlockPropertyTrackPosition b EAST_WEST
BlockPropertyTrackPosition c ASCENDING_EAST
BlockPropertyTrackPosition d ASCENDING_WEST
BlockPropertyTrackPosition e ASCENDING_NORTH
BlockPropertyTrackPosition f ASCENDING_SOUTH
BlockPropertyTrackPosition g SOUTH_EAST
BlockPropertyTrackPosition h SOUTH_WEST
BlockPropertyTrackPosition i NORTH_WEST
BlockPropertyTrackPosition j NORTH_EAST
BlockPropertyWallHeight a NONE
BlockPropertyWallHeight b LOW
BlockPropertyWallHeight c TALL
BlockPumpkinCarved e ()LShapeDetector; getSnowmanShape
BlockPumpkinCarved t ()LShapeDetector; getIronGolemShape
BlockRedstoneComparator a MODE
BlockRedstoneOre a (LWorld;LBlockPosition;)V playEffect
BlockRedstoneOre d (LIBlockData;LWorld;LBlockPosition;)V interact
BlockRedstoneTorch a LIT
BlockRedstoneWire a NORTH
BlockRedstoneWire b EAST
BlockRedstoneWire c SOUTH
BlockRedstoneWire d WEST
BlockRedstoneWire e POWER
BlockReed a AGE
BlockRepeater a LOCKED
BlockRepeater d DELAY
BlockRotatable e AXIS
BlockSapling a (LWorldServer;LBlockPosition;LIBlockData;Ljava/util/Random;)V grow
BlockSapling a STAGE
BlockShulkerBox c color
BlockSkull$Type a SKELETON
BlockSkull$Type b WITHER_SKELETON
BlockSkull$Type c PLAYER
BlockSkull$Type d ZOMBIE
BlockSkull$Type e CREEPER
BlockSkull$Type f DRAGON
BlockSnow a LAYERS
BlockSoil a MOISTURE
BlockSoil d (LIBlockData;LWorld;LBlockPosition;)V fade
BlockStainedGlass a color
BlockStainedGlassPane i color
BlockStairs a FACING
BlockStairs b HALF
BlockStairs c SHAPE
BlockStateBoolean a (Ljava/lang/String;)LBlockStateBoolean; of
BlockStateDirection a (Ljava/lang/String;)LBlockStateDirection; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;)LBlockStateEnum; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)LBlockStateEnum; of
BlockStateInteger a (Ljava/lang/String;II)LBlockStateInteger; of
BlockStateList b ()LIBlockDataHolder; getBlockData
BlockStateList c ()Ljava/lang/Object; getBlock
BlockStem a AGE
BlockStem c blockFruit
BlockTall a NORTH
BlockTall b EAST
BlockTall c SOUTH
BlockTall d WEST
BlockTallPlant a HALF
BlockTrapdoor a OPEN
BlockTrapdoor b HALF
BlockTripwire a POWERED
BlockTripwire b ATTACHED
BlockTripwire c DISARMED
BlockTripwire d NORTH
BlockTripwire e EAST
BlockTripwire f SOUTH
BlockTripwire g WEST
BlockTripwireHook a FACING
BlockTripwireHook b POWERED
BlockTripwireHook c ATTACHED
BlockUtil$Rectangle a origin
BlockUtil$Rectangle b side1
BlockUtil$Rectangle c side2
BlockVine a (LEnumDirection;)LBlockStateBoolean; getDirection
BlockVine a UP
BlockVine b NORTH
BlockVine c EAST
BlockVine d SOUTH
BlockVine e WEST
BlockVine o (LIBlockData;)Z canSpread
BlockWallSign d FACING
Blocks A WATER
Blocks B LAVA
Blocks C SAND
Blocks D RED_SAND
Blocks E GRAVEL
Blocks F GOLD_ORE
Blocks G IRON_ORE
Blocks H COAL_ORE
Blocks I NETHER_GOLD_ORE
Blocks J OAK_LOG
Blocks K SPRUCE_LOG
Blocks L BIRCH_LOG
Blocks M JUNGLE_LOG
Blocks N ACACIA_LOG
Blocks O DARK_OAK_LOG
Blocks P STRIPPED_SPRUCE_LOG
Blocks Q STRIPPED_BIRCH_LOG
Blocks R STRIPPED_JUNGLE_LOG
Blocks S STRIPPED_ACACIA_LOG
Blocks T STRIPPED_DARK_OAK_LOG
Blocks U STRIPPED_OAK_LOG
Blocks V OAK_WOOD
Blocks W SPRUCE_WOOD
Blocks X BIRCH_WOOD
Blocks Y JUNGLE_WOOD
Blocks Z ACACIA_WOOD
Blocks a AIR
Blocks aA ORANGE_BED
Blocks aB MAGENTA_BED
Blocks aC LIGHT_BLUE_BED
Blocks aD YELLOW_BED
Blocks aE LIME_BED
Blocks aF PINK_BED
Blocks aG GRAY_BED
Blocks aH LIGHT_GRAY_BED
Blocks aI CYAN_BED
Blocks aJ PURPLE_BED
Blocks aK BLUE_BED
Blocks aL BROWN_BED
Blocks aM GREEN_BED
Blocks aN RED_BED
Blocks aO BLACK_BED
Blocks aP POWERED_RAIL
Blocks aQ DETECTOR_RAIL
Blocks aR STICKY_PISTON
Blocks aS COBWEB
Blocks aT GRASS
Blocks aU FERN
Blocks aV DEAD_BUSH
Blocks aW SEAGRASS
Blocks aX TALL_SEAGRASS
Blocks aY PISTON
Blocks aZ PISTON_HEAD
Blocks aa DARK_OAK_WOOD
Blocks ab STRIPPED_OAK_WOOD
Blocks ac STRIPPED_SPRUCE_WOOD
Blocks ad STRIPPED_BIRCH_WOOD
Blocks ae STRIPPED_JUNGLE_WOOD
Blocks af STRIPPED_ACACIA_WOOD
Blocks ag STRIPPED_DARK_OAK_WOOD
Blocks ah OAK_LEAVES
Blocks ai SPRUCE_LEAVES
Blocks aj BIRCH_LEAVES
Blocks ak JUNGLE_LEAVES
Blocks al ACACIA_LEAVES
Blocks am DARK_OAK_LEAVES
Blocks ap SPONGE
Blocks aq WET_SPONGE
Blocks ar GLASS
Blocks as LAPIS_ORE
Blocks at LAPIS_BLOCK
Blocks au DISPENSER
Blocks av SANDSTONE
Blocks aw CHISELED_SANDSTONE
Blocks ax CUT_SANDSTONE
Blocks ay NOTE_BLOCK
Blocks az WHITE_BED
Blocks b STONE
Blocks bA OXEYE_DAISY
Blocks bB CORNFLOWER
Blocks bC WITHER_ROSE
Blocks bD LILY_OF_THE_VALLEY
Blocks bE BROWN_MUSHROOM
Blocks bF RED_MUSHROOM
Blocks bG GOLD_BLOCK
Blocks bH IRON_BLOCK
Blocks bI BRICKS
Blocks bJ TNT
Blocks bK BOOKSHELF
Blocks bL MOSSY_COBBLESTONE
Blocks bM OBSIDIAN
Blocks bN TORCH
Blocks bO WALL_TORCH
Blocks bP FIRE
Blocks bQ SOUL_FIRE
Blocks bR SPAWNER
Blocks bS OAK_STAIRS
Blocks bT CHEST
Blocks bU REDSTONE_WIRE
Blocks bV DIAMOND_ORE
Blocks bW DIAMOND_BLOCK
Blocks bX CRAFTING_TABLE
Blocks bY WHEAT
Blocks bZ FARMLAND
Blocks ba WHITE_WOOL
Blocks bb ORANGE_WOOL
Blocks bc MAGENTA_WOOL
Blocks bd LIGHT_BLUE_WOOL
Blocks be YELLOW_WOOL
Blocks bf LIME_WOOL
Blocks bg PINK_WOOL
Blocks bh GRAY_WOOL
Blocks bi LIGHT_GRAY_WOOL
Blocks bj CYAN_WOOL
Blocks bk PURPLE_WOOL
Blocks bl BLUE_WOOL
Blocks bm BROWN_WOOL
Blocks bn GREEN_WOOL
Blocks bo RED_WOOL
Blocks bp BLACK_WOOL
Blocks bq MOVING_PISTON
Blocks br DANDELION
Blocks bs POPPY
Blocks bt BLUE_ORCHID
Blocks bu ALLIUM
Blocks bv AZURE_BLUET
Blocks bw RED_TULIP
Blocks bx ORANGE_TULIP
Blocks by WHITE_TULIP
Blocks bz PINK_TULIP
Blocks c GRANITE
Blocks cA REDSTONE_ORE
Blocks cB REDSTONE_TORCH
Blocks cC REDSTONE_WALL_TORCH
Blocks cD STONE_BUTTON
Blocks cE SNOW
Blocks cF ICE
Blocks cG SNOW_BLOCK
Blocks cH CACTUS
Blocks cI CLAY
Blocks cJ SUGAR_CANE
Blocks cK JUKEBOX
Blocks cL OAK_FENCE
Blocks cM PUMPKIN
Blocks cN NETHERRACK
Blocks cO SOUL_SAND
Blocks cP SOUL_SOIL
Blocks cQ BASALT
Blocks cS SOUL_TORCH
Blocks cT SOUL_WALL_TORCH
Blocks cU GLOWSTONE
Blocks cV NETHER_PORTAL
Blocks cW CARVED_PUMPKIN
Blocks cX JACK_O_LANTERN
Blocks cY CAKE
Blocks cZ REPEATER
Blocks ca FURNACE
Blocks cb OAK_SIGN
Blocks cc SPRUCE_SIGN
Blocks cd BIRCH_SIGN
Blocks ce ACACIA_SIGN
Blocks cf JUNGLE_SIGN
Blocks cg DARK_OAK_SIGN
Blocks ch OAK_DOOR
Blocks ci LADDER
Blocks cj RAIL
Blocks ck COBBLESTONE_STAIRS
Blocks cl OAK_WALL_SIGN
Blocks cm SPRUCE_WALL_SIGN
Blocks cn BIRCH_WALL_SIGN
Blocks co ACACIA_WALL_SIGN
Blocks cp JUNGLE_WALL_SIGN
Blocks cq DARK_OAK_WALL_SIGN
Blocks cr LEVER
Blocks cs STONE_PRESSURE_PLATE
Blocks ct IRON_DOOR
Blocks cu OAK_PRESSURE_PLATE
Blocks cv SPRUCE_PRESSURE_PLATE
Blocks cw BIRCH_PRESSURE_PLATE
Blocks cx JUNGLE_PRESSURE_PLATE
Blocks cy ACACIA_PRESSURE_PLATE
Blocks cz DARK_OAK_PRESSURE_PLATE
Blocks d POLISHED_GRANITE
Blocks dA INFESTED_STONE
Blocks dB INFESTED_COBBLESTONE
Blocks dC INFESTED_STONE_BRICKS
Blocks dD INFESTED_MOSSY_STONE_BRICKS
Blocks dE INFESTED_CRACKED_STONE_BRICKS
Blocks dF INFESTED_CHISELED_STONE_BRICKS
Blocks dG BROWN_MUSHROOM_BLOCK
Blocks dH RED_MUSHROOM_BLOCK
Blocks dI MUSHROOM_STEM
Blocks dJ IRON_BARS
Blocks dK CHAIN
Blocks dL GLASS_PANE
Blocks dM MELON
Blocks dN ATTACHED_PUMPKIN_STEM
Blocks dO ATTACHED_MELON_STEM
Blocks dP PUMPKIN_STEM
Blocks dQ MELON_STEM
Blocks dR VINE
Blocks dT OAK_FENCE_GATE
Blocks dU BRICK_STAIRS
Blocks dV STONE_BRICK_STAIRS
Blocks dW MYCELIUM
Blocks dX LILY_PAD
Blocks dY NETHER_BRICKS
Blocks dZ NETHER_BRICK_FENCE
Blocks da WHITE_STAINED_GLASS
Blocks db ORANGE_STAINED_GLASS
Blocks dc MAGENTA_STAINED_GLASS
Blocks dd LIGHT_BLUE_STAINED_GLASS
Blocks de YELLOW_STAINED_GLASS
Blocks df LIME_STAINED_GLASS
Blocks dg PINK_STAINED_GLASS
Blocks dh GRAY_STAINED_GLASS
Blocks di LIGHT_GRAY_STAINED_GLASS
Blocks dj CYAN_STAINED_GLASS
Blocks dk PURPLE_STAINED_GLASS
Blocks dl BLUE_STAINED_GLASS
Blocks dm BROWN_STAINED_GLASS
Blocks dn GREEN_STAINED_GLASS
Blocks do RED_STAINED_GLASS
Blocks dp BLACK_STAINED_GLASS
Blocks dq OAK_TRAPDOOR
Blocks dr SPRUCE_TRAPDOOR
Blocks ds BIRCH_TRAPDOOR
Blocks dt JUNGLE_TRAPDOOR
Blocks du ACACIA_TRAPDOOR
Blocks dv DARK_OAK_TRAPDOOR
Blocks dw STONE_BRICKS
Blocks dx MOSSY_STONE_BRICKS
Blocks dy CRACKED_STONE_BRICKS
Blocks dz CHISELED_STONE_BRICKS
Blocks e DIORITE
Blocks eA MOSSY_COBBLESTONE_WALL
Blocks eB FLOWER_POT
Blocks eC POTTED_OAK_SAPLING
Blocks eD POTTED_SPRUCE_SAPLING
Blocks eE POTTED_BIRCH_SAPLING
Blocks eF POTTED_JUNGLE_SAPLING
Blocks eG POTTED_ACACIA_SAPLING
Blocks eH POTTED_DARK_OAK_SAPLING
Blocks eI POTTED_FERN
Blocks eJ POTTED_DANDELION
Blocks eK POTTED_POPPY
Blocks eL POTTED_BLUE_ORCHID
Blocks eM POTTED_ALLIUM
Blocks eN POTTED_AZURE_BLUET
Blocks eO POTTED_RED_TULIP
Blocks eP POTTED_ORANGE_TULIP
Blocks eQ POTTED_WHITE_TULIP
Blocks eR POTTED_PINK_TULIP
Blocks eS POTTED_OXEYE_DAISY
Blocks eT POTTED_CORNFLOWER
Blocks eU POTTED_LILY_OF_THE_VALLEY
Blocks eV POTTED_WITHER_ROSE
Blocks eW POTTED_RED_MUSHROOM
Blocks eX POTTED_BROWN_MUSHROOM
Blocks eY POTTED_DEAD_BUSH
Blocks eZ POTTED_CACTUS
Blocks ea NETHER_BRICK_STAIRS
Blocks eb NETHER_WART
Blocks ec ENCHANTING_TABLE
Blocks ed BREWING_STAND
Blocks ee CAULDRON
Blocks ei END_PORTAL
Blocks ej END_PORTAL_FRAME
Blocks ek END_STONE
Blocks el DRAGON_EGG
Blocks em REDSTONE_LAMP
Blocks en COCOA
Blocks eo SANDSTONE_STAIRS
Blocks ep EMERALD_ORE
Blocks eq ENDER_CHEST
Blocks er TRIPWIRE_HOOK
Blocks es TRIPWIRE
Blocks et EMERALD_BLOCK
Blocks eu SPRUCE_STAIRS
Blocks ev BIRCH_STAIRS
Blocks ew JUNGLE_STAIRS
Blocks ex COMMAND_BLOCK
Blocks ey BEACON
Blocks ez COBBLESTONE_WALL
Blocks f POLISHED_DIORITE
Blocks fA COMPARATOR
Blocks fB DAYLIGHT_DETECTOR
Blocks fC REDSTONE_BLOCK
Blocks fD NETHER_QUARTZ_ORE
Blocks fE HOPPER
Blocks fF QUARTZ_BLOCK
Blocks fG CHISELED_QUARTZ_BLOCK
Blocks fH QUARTZ_PILLAR
Blocks fI QUARTZ_STAIRS
Blocks fJ ACTIVATOR_RAIL
Blocks fK DROPPER
Blocks fL WHITE_TERRACOTTA
Blocks fM ORANGE_TERRACOTTA
Blocks fN MAGENTA_TERRACOTTA
Blocks fO LIGHT_BLUE_TERRACOTTA
Blocks fP YELLOW_TERRACOTTA
Blocks fQ LIME_TERRACOTTA
Blocks fR PINK_TERRACOTTA
Blocks fS GRAY_TERRACOTTA
Blocks fT LIGHT_GRAY_TERRACOTTA
Blocks fU CYAN_TERRACOTTA
Blocks fV PURPLE_TERRACOTTA
Blocks fW BLUE_TERRACOTTA
Blocks fX BROWN_TERRACOTTA
Blocks fY GREEN_TERRACOTTA
Blocks fZ RED_TERRACOTTA
Blocks fa CARROTS
Blocks fb POTATOES
Blocks fc OAK_BUTTON
Blocks fd SPRUCE_BUTTON
Blocks fe BIRCH_BUTTON
Blocks ff JUNGLE_BUTTON
Blocks fg ACACIA_BUTTON
Blocks fh DARK_OAK_BUTTON
Blocks fi SKELETON_SKULL
Blocks fj SKELETON_WALL_SKULL
Blocks fk WITHER_SKELETON_SKULL
Blocks fl WITHER_SKELETON_WALL_SKULL
Blocks fm ZOMBIE_HEAD
Blocks fn ZOMBIE_WALL_HEAD
Blocks fo PLAYER_HEAD
Blocks fp PLAYER_WALL_HEAD
Blocks fq CREEPER_HEAD
Blocks fr CREEPER_WALL_HEAD
Blocks fs DRAGON_HEAD
Blocks ft DRAGON_WALL_HEAD
Blocks fu ANVIL
Blocks fv CHIPPED_ANVIL
Blocks fw DAMAGED_ANVIL
Blocks fx TRAPPED_CHEST
Blocks fy LIGHT_WEIGHTED_PRESSURE_PLATE
Blocks fz HEAVY_WEIGHTED_PRESSURE_PLATE
Blocks g ANDESITE
Blocks gA PRISMARINE_BRICK_STAIRS
Blocks gB DARK_PRISMARINE_STAIRS
Blocks gC PRISMARINE_SLAB
Blocks gD PRISMARINE_BRICK_SLAB
Blocks gE DARK_PRISMARINE_SLAB
Blocks gF SEA_LANTERN
Blocks gG HAY_BLOCK
Blocks gH WHITE_CARPET
Blocks gI ORANGE_CARPET
Blocks gJ MAGENTA_CARPET
Blocks gK LIGHT_BLUE_CARPET
Blocks gL YELLOW_CARPET
Blocks gM LIME_CARPET
Blocks gN PINK_CARPET
Blocks gO GRAY_CARPET
Blocks gP LIGHT_GRAY_CARPET
Blocks gQ CYAN_CARPET
Blocks gR PURPLE_CARPET
Blocks gS BLUE_CARPET
Blocks gT BROWN_CARPET
Blocks gU GREEN_CARPET
Blocks gV RED_CARPET
Blocks gW BLACK_CARPET
Blocks gX TERRACOTTA
Blocks gY COAL_BLOCK
Blocks gZ PACKED_ICE
Blocks ga BLACK_TERRACOTTA
Blocks gb WHITE_STAINED_GLASS_PANE
Blocks gc ORANGE_STAINED_GLASS_PANE
Blocks gd MAGENTA_STAINED_GLASS_PANE
Blocks ge LIGHT_BLUE_STAINED_GLASS_PANE
Blocks gf YELLOW_STAINED_GLASS_PANE
Blocks gg LIME_STAINED_GLASS_PANE
Blocks gh PINK_STAINED_GLASS_PANE
Blocks gi GRAY_STAINED_GLASS_PANE
Blocks gj LIGHT_GRAY_STAINED_GLASS_PANE
Blocks gk CYAN_STAINED_GLASS_PANE
Blocks gl PURPLE_STAINED_GLASS_PANE
Blocks gm BLUE_STAINED_GLASS_PANE
Blocks gn BROWN_STAINED_GLASS_PANE
Blocks go GREEN_STAINED_GLASS_PANE
Blocks gp RED_STAINED_GLASS_PANE
Blocks gq BLACK_STAINED_GLASS_PANE
Blocks gr ACACIA_STAIRS
Blocks gs DARK_OAK_STAIRS
Blocks gt SLIME_BLOCK
Blocks gu BARRIER
Blocks gv IRON_TRAPDOOR
Blocks gw PRISMARINE
Blocks gx PRISMARINE_BRICKS
Blocks gy DARK_PRISMARINE
Blocks gz PRISMARINE_STAIRS
Blocks h POLISHED_ANDESITE
Blocks hA YELLOW_WALL_BANNER
Blocks hB LIME_WALL_BANNER
Blocks hC PINK_WALL_BANNER
Blocks hD GRAY_WALL_BANNER
Blocks hE LIGHT_GRAY_WALL_BANNER
Blocks hF CYAN_WALL_BANNER
Blocks hG PURPLE_WALL_BANNER
Blocks hH BLUE_WALL_BANNER
Blocks hI BROWN_WALL_BANNER
Blocks hJ GREEN_WALL_BANNER
Blocks hK RED_WALL_BANNER
Blocks hL BLACK_WALL_BANNER
Blocks hM RED_SANDSTONE
Blocks hN CHISELED_RED_SANDSTONE
Blocks hO CUT_RED_SANDSTONE
Blocks hP RED_SANDSTONE_STAIRS
Blocks hQ OAK_SLAB
Blocks hR SPRUCE_SLAB
Blocks hS BIRCH_SLAB
Blocks hT JUNGLE_SLAB
Blocks hU ACACIA_SLAB
Blocks hV DARK_OAK_SLAB
Blocks hW STONE_SLAB
Blocks hX SMOOTH_STONE_SLAB
Blocks hY SANDSTONE_SLAB
Blocks hZ CUT_SANDSTONE_SLAB
Blocks ha SUNFLOWER
Blocks hb LILAC
Blocks hc ROSE_BUSH
Blocks hd PEONY
Blocks he TALL_GRASS
Blocks hf LARGE_FERN
Blocks hg WHITE_BANNER
Blocks hh ORANGE_BANNER
Blocks hi MAGENTA_BANNER
Blocks hj LIGHT_BLUE_BANNER
Blocks hk YELLOW_BANNER
Blocks hl LIME_BANNER
Blocks hm PINK_BANNER
Blocks hn GRAY_BANNER
Blocks ho LIGHT_GRAY_BANNER
Blocks hp CYAN_BANNER
Blocks hq PURPLE_BANNER
Blocks hr BLUE_BANNER
Blocks hs BROWN_BANNER
Blocks ht GREEN_BANNER
Blocks hu RED_BANNER
Blocks hv BLACK_BANNER
Blocks hw WHITE_WALL_BANNER
Blocks hx ORANGE_WALL_BANNER
Blocks hy MAGENTA_WALL_BANNER
Blocks hz LIGHT_BLUE_WALL_BANNER
Blocks i GRASS_BLOCK
Blocks iA ACACIA_DOOR
Blocks iB DARK_OAK_DOOR
Blocks iC END_ROD
Blocks iD CHORUS_PLANT
Blocks iE CHORUS_FLOWER
Blocks iF PURPUR_BLOCK
Blocks iG PURPUR_PILLAR
Blocks iH PURPUR_STAIRS
Blocks iI END_STONE_BRICKS
Blocks iJ BEETROOTS
Blocks iL END_GATEWAY
Blocks iM REPEATING_COMMAND_BLOCK
Blocks iN CHAIN_COMMAND_BLOCK
Blocks iO FROSTED_ICE
Blocks iP MAGMA_BLOCK
Blocks iQ NETHER_WART_BLOCK
Blocks iR RED_NETHER_BRICKS
Blocks iS BONE_BLOCK
Blocks iT STRUCTURE_VOID
Blocks iU OBSERVER
Blocks iV SHULKER_BOX
Blocks iW WHITE_SHULKER_BOX
Blocks iX ORANGE_SHULKER_BOX
Blocks iY MAGENTA_SHULKER_BOX
Blocks iZ LIGHT_BLUE_SHULKER_BOX
Blocks ia PETRIFIED_OAK_SLAB
Blocks ib COBBLESTONE_SLAB
Blocks ic BRICK_SLAB
Blocks id STONE_BRICK_SLAB
Blocks ie NETHER_BRICK_SLAB
Blocks if QUARTZ_SLAB
Blocks ig RED_SANDSTONE_SLAB
Blocks ih CUT_RED_SANDSTONE_SLAB
Blocks ii PURPUR_SLAB
Blocks ij SMOOTH_STONE
Blocks ik SMOOTH_SANDSTONE
Blocks il SMOOTH_QUARTZ
Blocks im SMOOTH_RED_SANDSTONE
Blocks in SPRUCE_FENCE_GATE
Blocks io BIRCH_FENCE_GATE
Blocks ip JUNGLE_FENCE_GATE
Blocks iq ACACIA_FENCE_GATE
Blocks ir DARK_OAK_FENCE_GATE
Blocks is SPRUCE_FENCE
Blocks it BIRCH_FENCE
Blocks iu JUNGLE_FENCE
Blocks iv ACACIA_FENCE
Blocks iw DARK_OAK_FENCE
Blocks ix SPRUCE_DOOR
Blocks iy BIRCH_DOOR
Blocks iz JUNGLE_DOOR
Blocks j DIRT
Blocks jA RED_GLAZED_TERRACOTTA
Blocks jB BLACK_GLAZED_TERRACOTTA
Blocks jC WHITE_CONCRETE
Blocks jD ORANGE_CONCRETE
Blocks jE MAGENTA_CONCRETE
Blocks jF LIGHT_BLUE_CONCRETE
Blocks jG YELLOW_CONCRETE
Blocks jH LIME_CONCRETE
Blocks jI PINK_CONCRETE
Blocks jJ GRAY_CONCRETE
Blocks jK LIGHT_GRAY_CONCRETE
Blocks jL CYAN_CONCRETE
Blocks jM PURPLE_CONCRETE
Blocks jN BLUE_CONCRETE
Blocks jO BROWN_CONCRETE
Blocks jP GREEN_CONCRETE
Blocks jQ RED_CONCRETE
Blocks jR BLACK_CONCRETE
Blocks jS WHITE_CONCRETE_POWDER
Blocks jT ORANGE_CONCRETE_POWDER
Blocks jU MAGENTA_CONCRETE_POWDER
Blocks jV LIGHT_BLUE_CONCRETE_POWDER
Blocks jW YELLOW_CONCRETE_POWDER
Blocks jX LIME_CONCRETE_POWDER
Blocks jY PINK_CONCRETE_POWDER
Blocks jZ GRAY_CONCRETE_POWDER
Blocks ja YELLOW_SHULKER_BOX
Blocks jb LIME_SHULKER_BOX
Blocks jc PINK_SHULKER_BOX
Blocks jd GRAY_SHULKER_BOX
Blocks je LIGHT_GRAY_SHULKER_BOX
Blocks jf CYAN_SHULKER_BOX
Blocks jg PURPLE_SHULKER_BOX
Blocks jh BLUE_SHULKER_BOX
Blocks ji BROWN_SHULKER_BOX
Blocks jj GREEN_SHULKER_BOX
Blocks jk RED_SHULKER_BOX
Blocks jl BLACK_SHULKER_BOX
Blocks jm WHITE_GLAZED_TERRACOTTA
Blocks jn ORANGE_GLAZED_TERRACOTTA
Blocks jo MAGENTA_GLAZED_TERRACOTTA
Blocks jp LIGHT_BLUE_GLAZED_TERRACOTTA
Blocks jq YELLOW_GLAZED_TERRACOTTA
Blocks jr LIME_GLAZED_TERRACOTTA
Blocks js PINK_GLAZED_TERRACOTTA
Blocks jt GRAY_GLAZED_TERRACOTTA
Blocks ju LIGHT_GRAY_GLAZED_TERRACOTTA
Blocks jv CYAN_GLAZED_TERRACOTTA
Blocks jw PURPLE_GLAZED_TERRACOTTA
Blocks jx BLUE_GLAZED_TERRACOTTA
Blocks jy BROWN_GLAZED_TERRACOTTA
Blocks jz GREEN_GLAZED_TERRACOTTA
Blocks k COARSE_DIRT
Blocks kA DEAD_HORN_CORAL
Blocks kB TUBE_CORAL
Blocks kC BRAIN_CORAL
Blocks kD BUBBLE_CORAL
Blocks kE FIRE_CORAL
Blocks kF HORN_CORAL
Blocks kG DEAD_TUBE_CORAL_FAN
Blocks kH DEAD_BRAIN_CORAL_FAN
Blocks kI DEAD_BUBBLE_CORAL_FAN
Blocks kJ DEAD_FIRE_CORAL_FAN
Blocks kK DEAD_HORN_CORAL_FAN
Blocks kL TUBE_CORAL_FAN
Blocks kM BRAIN_CORAL_FAN
Blocks kN BUBBLE_CORAL_FAN
Blocks kO FIRE_CORAL_FAN
Blocks kP HORN_CORAL_FAN
Blocks kQ DEAD_TUBE_CORAL_WALL_FAN
Blocks kR DEAD_BRAIN_CORAL_WALL_FAN
Blocks kS DEAD_BUBBLE_CORAL_WALL_FAN
Blocks kT DEAD_FIRE_CORAL_WALL_FAN
Blocks kU DEAD_HORN_CORAL_WALL_FAN
Blocks kV TUBE_CORAL_WALL_FAN
Blocks kW BRAIN_CORAL_WALL_FAN
Blocks kX BUBBLE_CORAL_WALL_FAN
Blocks kY FIRE_CORAL_WALL_FAN
Blocks kZ HORN_CORAL_WALL_FAN
Blocks ka LIGHT_GRAY_CONCRETE_POWDER
Blocks kb CYAN_CONCRETE_POWDER
Blocks kc PURPLE_CONCRETE_POWDER
Blocks kd BLUE_CONCRETE_POWDER
Blocks ke BROWN_CONCRETE_POWDER
Blocks kf GREEN_CONCRETE_POWDER
Blocks kg RED_CONCRETE_POWDER
Blocks kh BLACK_CONCRETE_POWDER
Blocks ki KELP
Blocks kj KELP_PLANT
Blocks kk DRIED_KELP_BLOCK
Blocks kl TURTLE_EGG
Blocks km DEAD_TUBE_CORAL_BLOCK
Blocks kn DEAD_BRAIN_CORAL_BLOCK
Blocks ko DEAD_BUBBLE_CORAL_BLOCK
Blocks kp DEAD_FIRE_CORAL_BLOCK
Blocks kq DEAD_HORN_CORAL_BLOCK
Blocks kr TUBE_CORAL_BLOCK
Blocks ks BRAIN_CORAL_BLOCK
Blocks kt BUBBLE_CORAL_BLOCK
Blocks ku FIRE_CORAL_BLOCK
Blocks kv HORN_CORAL_BLOCK
Blocks kw DEAD_TUBE_CORAL
Blocks kx DEAD_BRAIN_CORAL
Blocks ky DEAD_BUBBLE_CORAL
Blocks kz DEAD_FIRE_CORAL
Blocks l PODZOL
Blocks lA POLISHED_DIORITE_SLAB
Blocks lB MOSSY_COBBLESTONE_SLAB
Blocks lC END_STONE_BRICK_SLAB
Blocks lD SMOOTH_SANDSTONE_SLAB
Blocks lE SMOOTH_QUARTZ_SLAB
Blocks lF GRANITE_SLAB
Blocks lG ANDESITE_SLAB
Blocks lH RED_NETHER_BRICK_SLAB
Blocks lI POLISHED_ANDESITE_SLAB
Blocks lJ DIORITE_SLAB
Blocks lK BRICK_WALL
Blocks lL PRISMARINE_WALL
Blocks lM RED_SANDSTONE_WALL
Blocks lN MOSSY_STONE_BRICK_WALL
Blocks lO GRANITE_WALL
Blocks lP STONE_BRICK_WALL
Blocks lQ NETHER_BRICK_WALL
Blocks lR ANDESITE_WALL
Blocks lS RED_NETHER_BRICK_WALL
Blocks lT SANDSTONE_WALL
Blocks lU END_STONE_BRICK_WALL
Blocks lV DIORITE_WALL
Blocks lW SCAFFOLDING
Blocks lX LOOM
Blocks lY BARREL
Blocks lZ SMOKER
Blocks la SEA_PICKLE
Blocks lb BLUE_ICE
Blocks lc CONDUIT
Blocks ld BAMBOO_SAPLING
Blocks le BAMBOO
Blocks lf POTTED_BAMBOO
Blocks lg VOID_AIR
Blocks lh CAVE_AIR
Blocks li BUBBLE_COLUMN
Blocks lj POLISHED_GRANITE_STAIRS
Blocks lk SMOOTH_RED_SANDSTONE_STAIRS
Blocks ll MOSSY_STONE_BRICK_STAIRS
Blocks lm POLISHED_DIORITE_STAIRS
Blocks ln MOSSY_COBBLESTONE_STAIRS
Blocks lo END_STONE_BRICK_STAIRS
Blocks lp STONE_STAIRS
Blocks lq SMOOTH_SANDSTONE_STAIRS
Blocks lr SMOOTH_QUARTZ_STAIRS
Blocks ls GRANITE_STAIRS
Blocks lt ANDESITE_STAIRS
Blocks lu RED_NETHER_BRICK_STAIRS
Blocks lv POLISHED_ANDESITE_STAIRS
Blocks lw DIORITE_STAIRS
Blocks lx POLISHED_GRANITE_SLAB
Blocks ly SMOOTH_RED_SANDSTONE_SLAB
Blocks lz MOSSY_STONE_BRICK_SLAB
Blocks m COBBLESTONE
Blocks mA CRIMSON_NYLIUM
Blocks mB CRIMSON_FUNGUS
Blocks mC SHROOMLIGHT
Blocks mD WEEPING_VINES
Blocks mE WEEPING_VINES_PLANT
Blocks mF TWISTING_VINES
Blocks mG TWISTING_VINES_PLANT
Blocks mH CRIMSON_ROOTS
Blocks mI CRIMSON_PLANKS
Blocks mJ WARPED_PLANKS
Blocks mK CRIMSON_SLAB
Blocks mL WARPED_SLAB
Blocks mM CRIMSON_PRESSURE_PLATE
Blocks mN WARPED_PRESSURE_PLATE
Blocks mO CRIMSON_FENCE
Blocks mP WARPED_FENCE
Blocks mQ CRIMSON_TRAPDOOR
Blocks mR WARPED_TRAPDOOR
Blocks mS CRIMSON_FENCE_GATE
Blocks mT WARPED_FENCE_GATE
Blocks mU CRIMSON_STAIRS
Blocks mV WARPED_STAIRS
Blocks mW CRIMSON_BUTTON
Blocks mX WARPED_BUTTON
Blocks mY CRIMSON_DOOR
Blocks mZ WARPED_DOOR
Blocks ma BLAST_FURNACE
Blocks mb CARTOGRAPHY_TABLE
Blocks mc FLETCHING_TABLE
Blocks md GRINDSTONE
Blocks me LECTERN
Blocks mf SMITHING_TABLE
Blocks mg STONECUTTER
Blocks mh BELL
Blocks mi LANTERN
Blocks mj SOUL_LANTERN
Blocks mk CAMPFIRE
Blocks ml SOUL_CAMPFIRE
Blocks mm SWEET_BERRY_BUSH
Blocks mn WARPED_STEM
Blocks mo STRIPPED_WARPED_STEM
Blocks mp WARPED_HYPHAE
Blocks mq STRIPPED_WARPED_HYPHAE
Blocks mr WARPED_NYLIUM
Blocks ms WARPED_FUNGUS
Blocks mt WARPED_WART_BLOCK
Blocks mu WARPED_ROOTS
Blocks mv NETHER_SPROUTS
Blocks mw CRIMSON_STEM
Blocks mx STRIPPED_CRIMSON_STEM
Blocks my CRIMSON_HYPHAE
Blocks mz STRIPPED_CRIMSON_HYPHAE
Blocks n OAK_PLANKS
Blocks nA POLISHED_BLACKSTONE_BRICKS
Blocks nB CRACKED_POLISHED_BLACKSTONE_BRICKS
Blocks nC CHISELED_POLISHED_BLACKSTONE
Blocks nD POLISHED_BLACKSTONE_BRICK_SLAB
Blocks nE POLISHED_BLACKSTONE_BRICK_STAIRS
Blocks nF POLISHED_BLACKSTONE_BRICK_WALL
Blocks nG GILDED_BLACKSTONE
Blocks nH POLISHED_BLACKSTONE_STAIRS
Blocks nI POLISHED_BLACKSTONE_SLAB
Blocks nJ POLISHED_BLACKSTONE_PRESSURE_PLATE
Blocks nK POLISHED_BLACKSTONE_BUTTON
Blocks nL POLISHED_BLACKSTONE_WALL
Blocks nM CHISELED_NETHER_BRICKS
Blocks nN CRACKED_NETHER_BRICKS
Blocks nO QUARTZ_BRICKS
Blocks na CRIMSON_SIGN
Blocks nb WARPED_SIGN
Blocks nc CRIMSON_WALL_SIGN
Blocks nd WARPED_WALL_SIGN
Blocks ne STRUCTURE_BLOCK
Blocks nf JIGSAW
Blocks ng COMPOSTER
Blocks nh TARGET
Blocks ni BEE_NEST
Blocks nj BEEHIVE
Blocks nk HONEY_BLOCK
Blocks nl HONEYCOMB_BLOCK
Blocks nm NETHERITE_BLOCK
Blocks nn ANCIENT_DEBRIS
Blocks no CRYING_OBSIDIAN
Blocks np RESPAWN_ANCHOR
Blocks nq POTTED_CRIMSON_FUNGUS
Blocks nr POTTED_WARPED_FUNGUS
Blocks ns POTTED_CRIMSON_ROOTS
Blocks nt POTTED_WARPED_ROOTS
Blocks nu LODESTONE
Blocks nv BLACKSTONE
Blocks nw BLACKSTONE_STAIRS
Blocks nx BLACKSTONE_WALL
Blocks ny BLACKSTONE_SLAB
Blocks nz POLISHED_BLACKSTONE
Blocks o SPRUCE_PLANKS
Blocks p BIRCH_PLANKS
Blocks q JUNGLE_PLANKS
Blocks r ACACIA_PLANKS
Blocks s DARK_OAK_PLANKS
Blocks t OAK_SAPLING
Blocks u SPRUCE_SAPLING
Blocks v BIRCH_SAPLING
Blocks w JUNGLE_SAPLING
Blocks x ACACIA_SAPLING
Blocks y DARK_OAK_SAPLING
Blocks z BEDROCK
BossBattle a title
BossBattle c color
BossBattle d style
BossBattle n ()Z isDarkenSky
BossBattle o ()Z isPlayMusic
BossBattle p ()Z isCreateFog
BossBattle$BarColor a PINK
BossBattle$BarColor b BLUE
BossBattle$BarColor c RED
BossBattle$BarColor d GREEN
BossBattle$BarColor e YELLOW
BossBattle$BarColor f PURPLE
BossBattle$BarColor g WHITE
BossBattle$BarStyle a PROGRESS
BossBattle$BarStyle b NOTCHED_6
BossBattle$BarStyle c NOTCHED_10
BossBattle$BarStyle d NOTCHED_12
BossBattle$BarStyle e NOTCHED_20
BossBattleCustom a ()LMinecraftKey; getKey
BossBattleCustomData a (LBossBattleCustom;)V remove
BossBattleCustomData a (LMinecraftKey;LIChatBaseComponent;)LBossBattleCustom; register
BossBattleCustomData a (LNBTTagCompound;)V load
BossBattleCustomData b ()Ljava/util/Collection; getBattles
BossBattleCustomData c ()LNBTTagCompound; save
BossBattleServer a (LEntityPlayer;)V addPlayer
BossBattleServer a (LPacketPlayOutBoss$Action;)V sendUpdate
BossBattleServer a (Z)LBossBattle; setDarkenSky
BossBattleServer b (LEntityPlayer;)V removePlayer
BossBattleServer b (Z)LBossBattle; setPlayMusic
BossBattleServer c (Z)LBossBattle; setCreateFog
BossBattleServer d (Z)V setVisible
BossBattleServer h ()Ljava/util/Collection; getPlayers
BossBattleServer j visible
CancelledPacketHandleException a INSTANCE
ChatBaseComponent a siblings
ChatClickable$EnumClickAction a OPEN_URL
ChatClickable$EnumClickAction b OPEN_FILE
ChatClickable$EnumClickAction c RUN_COMMAND
ChatClickable$EnumClickAction d SUGGEST_COMMAND
ChatClickable$EnumClickAction e CHANGE_PAGE
ChatClickable$EnumClickAction f COPY_TO_CLIPBOARD
ChatComponentUtils a (LCommandListenerWrapper;LIChatBaseComponent;LEntity;I)LIChatMutableComponent; filterForDisplay
ChatHexColor c rgb
ChatHexColor d name
ChatHoverable$EnumHoverAction a SHOW_TEXT
ChatHoverable$EnumHoverAction b SHOW_ITEM
ChatHoverable$EnumHoverAction c SHOW_ENTITY
ChatMessage g key
ChatMessage h args
ChatMessage i ()Ljava/lang/String; getKey
ChatMessage j ()[Ljava/lang/Object; getArgs
ChatMessageType a CHAT
ChatMessageType b SYSTEM
ChatMessageType c GAME_INFO
ChatModifier a ()LChatHexColor; getColor
ChatModifier a (LChatClickable;)LChatModifier; setChatClickable
ChatModifier a (LChatHexColor;)LChatModifier; setColor
ChatModifier a (LChatHoverable;)LChatModifier; setChatHoverable
ChatModifier a (LChatModifier;)LChatModifier; setChatModifier
ChatModifier a (LEnumChatFormat;)LChatModifier; setColor
ChatModifier a (Ljava/lang/Boolean;)LChatModifier; setBold
ChatModifier a (Ljava/lang/String;)LChatModifier; setInsertion
ChatModifier b ()Z isBold
ChatModifier b (Ljava/lang/Boolean;)LChatModifier; setItalic
ChatModifier c ()Z isItalic
ChatModifier c color
ChatModifier d ()Z isStrikethrough
ChatModifier d bold
ChatModifier e ()Z isUnderlined
ChatModifier e italic
ChatModifier f ()Z isRandom
ChatModifier f underlined
ChatModifier g strikethrough
ChatModifier h ()LChatClickable; getClickEvent
ChatModifier h obfuscated
ChatModifier i ()LChatHoverable; getHoverEvent
ChatModifier i clickEvent
ChatModifier j ()Ljava/lang/String; getInsertion
ChatModifier j hoverEvent
ChatModifier k ()LMinecraftKey; getFont
ChatModifier k insertion
ChatModifier l font
ChestLock b key
Chunk c (Z)V setLoaded
Chunk d sections
Chunk h loaded
Chunk i world
Chunk j heightMap
Chunk l tileEntities
Chunk s inhabitedTime
Chunk t ()V markDirty
Chunk u ()Z isEmpty
Chunk v ()LPlayerChunk$State; getState
Chunk v loc
Chunk x ()V addEntities
Chunk y ()LWorld; getWorld
Chunk z ()Ljava/util/Map; getTileEntities
Chunk$EnumTileEntityState a IMMEDIATE
Chunk$EnumTileEntityState b QUEUED
Chunk$EnumTileEntityState c CHECK
ChunkConverter$Type a BLACKLIST
ChunkConverter$Type b DEFAULT
ChunkConverter$Type c CHEST
ChunkConverter$Type d LEAVES
ChunkConverter$Type e STEM_BLOCK
ChunkConverterPalette$Direction a DOWN
ChunkConverterPalette$Direction b UP
ChunkConverterPalette$Direction c NORTH
ChunkConverterPalette$Direction d SOUTH
ChunkConverterPalette$Direction e WEST
ChunkConverterPalette$Direction f EAST
ChunkConverterPalette$Direction$Axis a X
ChunkConverterPalette$Direction$Axis b Y
ChunkConverterPalette$Direction$Axis c Z
ChunkConverterPalette$Direction$AxisDirection a POSITIVE
ChunkConverterPalette$Direction$AxisDirection b NEGATIVE
ChunkCoordIntPair a ()J pair
ChunkCoordIntPair a (II)J pair
ChunkCoordIntPair a (J)I getX
ChunkCoordIntPair b (J)I getZ
ChunkCoordIntPair b x
ChunkCoordIntPair c z
ChunkCoordIntPair h ()I getRegionX
ChunkCoordIntPair i ()I getRegionZ
ChunkGenerator a (JLBiomeManager;LIChunkAccess;LWorldGenStage$Features;)V doCarving
ChunkGenerator a (LBiomeBase;LStructureManager;LEnumCreatureType;LBlockPosition;)Ljava/util/List; getMobsFor
ChunkGenerator a (LGeneratorAccessSeed;LStructureManager;LIChunkAccess;)V storeStructures
ChunkGenerator a (LIRegistry;LIChunkAccess;)V createBiomes
ChunkGenerator a (LIRegistryCustom;LStructureManager;LIChunkAccess;LDefinedStructureManager;J)V createStructures
ChunkGenerator a (LRegionLimitedWorldAccess;)V addMobs
ChunkGenerator a (LRegionLimitedWorldAccess;LIChunkAccess;)V buildBase
ChunkGenerator a (LRegionLimitedWorldAccess;LStructureManager;)V addDecorations
ChunkGenerator a (LWorldServer;LStructureGenerator;LBlockPosition;IZ)LBlockPosition; findNearestMapFeature
ChunkGenerator b ()LStructureSettings; getSettings
ChunkGenerator c ()I getSpawnHeight
ChunkGenerator d ()LWorldChunkManager; getWorldChunkManager
ChunkGenerator d structureSettings
ChunkGenerator e ()I getGenerationDepth
ChunkGenerator f ()I getSeaLevel
ChunkMap b (JIZ)V update
ChunkMapDistance a ()V purgeTickets
ChunkMapDistance a (JLTicket;)V addTicket
ChunkMapDistance a (LArraySetSorted;)I getLowestTicketLevel
ChunkMapDistance b (JLTicket;)V removeTicket
ChunkMapDistance c (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkMapDistance d (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkMapDistance d tickets
ChunkMapDistance e ticketLevelTracker
ChunkMapDistance h pendingChunkUpdates
ChunkMapDistance n currentTick
ChunkProviderServer a (I)V setViewDistance
ChunkProviderServer a (J)LPlayerChunk; getChunk
ChunkProviderServer a (LEntity;)V removeEntity
ChunkProviderServer a (LEntity;LPacket;)V broadcastIncludingSelf
ChunkProviderServer a (LEntityPlayer;)V movePlayer
ChunkProviderServer a (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkProviderServer a (Ljava/util/function/BooleanSupplier;)V tick
ChunkProviderServer a (Z)V save
ChunkProviderServer a playerChunkMap
ChunkProviderServer b (II)Z isLoaded
ChunkProviderServer b (LBlockPosition;)V flagDirty
ChunkProviderServer b (LEntity;)V addEntity
ChunkProviderServer b (LEntity;LPacket;)V broadcast
ChunkProviderServer b (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkProviderServer c (IILChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFutureMainThread
ChunkProviderServer c chunkMapDistance
ChunkProviderServer d ()Z runTasks
ChunkProviderServer d chunkGenerator
ChunkProviderServer e world
ChunkProviderServer f serverThread
ChunkProviderServer g ()LChunkGenerator; getChunkGenerator
ChunkProviderServer g lightEngine
ChunkProviderServer h serverThreadQueue
ChunkProviderServer i ()LWorldPersistentData; getWorldPersistentData
ChunkProviderServer i worldPersistentData
ChunkProviderServer j lastTickTime
ChunkProviderServer k allowMonsters
ChunkProviderServer l allowAnimals
ChunkProviderServer m cachePos
ChunkProviderServer n ()V clearCache
ChunkProviderServer n cacheStatus
ChunkProviderServer o ()Z tickDistanceManager
ChunkProviderServer o cacheChunk
ChunkProviderServer p ()V tickChunks
ChunkRegionLoader a (LWorldServer;LDefinedStructureManager;LVillagePlace;LChunkCoordIntPair;LNBTTagCompound;)LProtoChunk; loadChunk
ChunkRegionLoader a (LWorldServer;LIChunkAccess;)LNBTTagCompound; saveChunk
ChunkSection a (III)LIBlockData; getType
ChunkSection a (IIILIBlockData;)LIBlockData; setType
ChunkSection a (IIILIBlockData;Z)LIBlockData; setType
ChunkSection a GLOBAL_PALETTE
ChunkSection b yPos
ChunkSection c nonEmptyBlockCount
ChunkSection d tickingBlockCount
ChunkSection e ()Z shouldTick
ChunkSection f blockIds
ChunkSection g ()I getYPosition
ChunkSection h ()V recalcBlockCounts
ChunkSection i ()LDataPaletteBlock; getBlocks
ChunkStatus a EMPTY
ChunkStatus b STRUCTURE_STARTS
ChunkStatus c STRUCTURE_REFERENCES
ChunkStatus d BIOMES
ChunkStatus e NOISE
ChunkStatus f SURFACE
ChunkStatus g ()LChunkStatus$Type; getType
ChunkStatus g CARVERS
ChunkStatus h LIQUID_CARVERS
ChunkStatus i FEATURES
ChunkStatus j LIGHT
ChunkStatus k SPAWN
ChunkStatus l HEIGHTMAPS
ChunkStatus m FULL
ChunkStatus$Type a PROTOCHUNK
ChunkStatus$Type b LEVELCHUNK
Clearable Z_ ()V clear
CombatTracker a (LDamageSource;FF)V trackDamage
CombatTracker b ()LIChatBaseComponent; getDeathMessage
CommandAdvancement$Action a GRANT
CommandAdvancement$Action b REVOKE
CommandAdvancement$Filter a ONLY
CommandAdvancement$Filter b THROUGH
CommandAdvancement$Filter c FROM
CommandAdvancement$Filter d UNTIL
CommandAdvancement$Filter e EVERYTHING
CommandBlockListenerAbstract a (LIChatBaseComponent;)V setName
CommandBlockListenerAbstract a (Ljava/lang/String;)V setCommand
CommandBlockListenerAbstract d lastExecution
CommandBlockListenerAbstract e updateLastExecution
CommandBlockListenerAbstract f successCount
CommandBlockListenerAbstract g trackOutput
CommandBlockListenerAbstract h ()LCommandListenerWrapper; getWrapper
CommandBlockListenerAbstract h lastOutput
CommandBlockListenerAbstract i command
CommandBlockListenerAbstract j customName
CommandBlockListenerAbstract k ()Ljava/lang/String; getCommand
CommandBlockListenerAbstract l ()LIChatBaseComponent; getName
CommandClone$Mode a FORCE
CommandClone$Mode b MOVE
CommandClone$Mode c NORMAL
CommandDispatcher$ServerType a ALL
CommandDispatcher$ServerType b DEDICATED
CommandDispatcher$ServerType c INTEGRATED
CommandFill$Mode a REPLACE
CommandFill$Mode b OUTLINE
CommandFill$Mode c HOLLOW
CommandFill$Mode d DESTROY
CommandListenerWrapper a (LIChatBaseComponent;)V sendFailureMessage
CommandListenerWrapper a (LIChatBaseComponent;Z)V sendMessage
CommandListenerWrapper b ()LIChatBaseComponent; getScoreboardDisplayName
CommandListenerWrapper b (LIChatBaseComponent;)V sendAdminMessage
CommandListenerWrapper c ()Ljava/lang/String; getName
CommandListenerWrapper c base
CommandListenerWrapper d ()LVec3D; getPosition
CommandListenerWrapper e ()LWorldServer; getWorld
CommandListenerWrapper f ()LEntity; getEntity
CommandListenerWrapper j ()Lnet/minecraft/server/MinecraftServer; getServer
CommandSetBlock$Mode a REPLACE
CommandSetBlock$Mode b DESTROY
CommandXp$Unit a POINTS
CommandXp$Unit b LEVELS
Container a ()LContainers; getType
Container a (I)LSlot; getSlot
Container a (ILItemStack;)V setItem
Container a (LEntityHuman;)Z canUse
Container a (LICrafting;)V addSlotListener
Container b (LEntityHuman;I)LItemStack; shiftClick
Container b windowId
Container c items
Container g dragType
Container j listeners
ContainerAccess a (LWorld;LBlockPosition;)LContainerAccess; at
ContainerAnvil i renameText
ContainerAnvil j levelCost
ContainerAnvilAbstract c resultInventory
ContainerAnvilAbstract d repairInventory
ContainerAnvilAbstract e containerAccess
ContainerAnvilAbstract f player
ContainerBeacon c beacon
ContainerBeacon e containerAccess
ContainerBeacon f containerProperties
ContainerBrewingStand c brewingStand
ContainerCartography c inventory
ContainerCartography d containerAccess
ContainerCartography f resultInventory
ContainerChest c container
ContainerDispenser c items
ContainerEnchantTable c costs
ContainerEnchantTable d enchantments
ContainerEnchantTable e levels
ContainerEnchantTable f enchantSlots
ContainerEnchantTable g containerAccess
ContainerFurnace d furnace
ContainerGrindstone c resultInventory
ContainerGrindstone d craftInventory
ContainerGrindstone e containerAccess
ContainerHopper c hopper
ContainerLectern c inventory
ContainerLectern d containerProperties
ContainerLoom c containerAccess
ContainerLoom k craftInventory
ContainerLoom l resultInventory
ContainerMerchant c merchant
ContainerMerchant d inventoryMerchant
ContainerPlayer l craftInventory
ContainerPlayer m resultInventory
ContainerPlayer n owner
ContainerProperty a (I)V set
ContainerProperty b ()I get
ContainerStonecutter e inventory
ContainerStonecutter f containerAccess
ContainerStonecutter g containerProperty
ContainerStonecutter h world
ContainerStonecutter m resultInventory
ContainerWorkbench c craftInventory
ContainerWorkbench d resultInventory
ContainerWorkbench e containerAccess
Containers a GENERIC_9X1
Containers b GENERIC_9X2
Containers c GENERIC_9X3
Containers d GENERIC_9X4
Containers e GENERIC_9X5
Containers f GENERIC_9X6
Containers g GENERIC_3X3
Containers h ANVIL
Containers i BEACON
Containers j BLAST_FURNACE
Containers k BREWING_STAND
Containers l CRAFTING
Containers m ENCHANTMENT
Containers n FURNACE
Containers o GRINDSTONE
Containers p HOPPER
Containers q LECTERN
Containers r LOOM
Containers s MERCHANT
Containers t SHULKER_BOX
Containers u SMITHING
Containers v SMOKER
Containers w CARTOGRAPHY_TABLE
Containers x STONECUTTER
ControllerJump a ()V jump
ControllerMove$Operation a WAIT
ControllerMove$Operation b MOVE_TO
ControllerMove$Operation c STRAFE
ControllerMove$Operation d JUMPING
Convertable d universe
Convertable e backupUniverse
Convertable$ConversionSession a ()Ljava/lang/String; getLevelName
Convertable$ConversionSession a (LIProgressUpdate;)Z convert
Convertable$ConversionSession a (LSavedFile;)Ljava/nio/file/Path; getWorldFolder
Convertable$ConversionSession b lock
Convertable$ConversionSession c ()Z isConvertable
Convertable$ConversionSession c folder
Convertable$ConversionSession d levelName
Convertable$ConversionSession i ()V checkSession
Counter a DECIMAL_FORMAT
Counter b DEFAULT
Counter c DIVIDE_BY_TEN
Counter d DISTANCE
Counter e TIME
CraftingManager a (LMinecraftKey;)Ljava/util/Optional; getRecipe
CraftingManager a (LRecipes;LIInventory;LWorld;)Ljava/util/Optional; craft
CraftingManager c recipes
CriterionProgress d ()Ljava/util/Date; getDate
CustomFunctionData b ()Lcom/mojang/brigadier/CommandDispatcher; getCommandDispatcher
CustomFunctionData c ()V tick
CustomFunctionData c server
DamageSource a (LEntityArrow;LEntity;)LDamageSource; arrow
DamageSource a (LEntityFireballFireball;LEntity;)LDamageSource; fireball
DamageSource a (LEntityHuman;)LDamageSource; playerAttack
DamageSource a (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
DamageSource a (LExplosion;)LDamageSource; explosion
DamageSource a FIRE
DamageSource b (LEntity;LEntity;)LDamageSource; projectile
DamageSource b LIGHTNING
DamageSource c (LEntityLiving;)LDamageSource; mobAttack
DamageSource c BURN
DamageSource d ()Z isExplosion
DamageSource d LAVA
DamageSource e ()LDamageSource; setExplosion
DamageSource e HOT_FLOOR
DamageSource f ()Z ignoresArmor
DamageSource f STUCK
DamageSource g CRAMMING
DamageSource h ()F getExhaustionCost
DamageSource h DROWN
DamageSource i ()Z ignoresInvulnerability
DamageSource i STARVE
DamageSource j ()Z isStarvation
DamageSource j CACTUS
DamageSource k FALL
DamageSource l ()LEntity; getEntity
DamageSource l FLY_INTO_WALL
DamageSource m ()LDamageSource; setIgnoreArmor
DamageSource m OUT_OF_WORLD
DamageSource n GENERIC
DamageSource o ()LDamageSource; setIgnoresInvulnerability
DamageSource o MAGIC
DamageSource p ()LDamageSource; setStarvation
DamageSource p WITHER
DamageSource q ()LDamageSource; setFire
DamageSource q ANVIL
DamageSource r ()Z isFire
DamageSource r FALLING_BLOCK
DamageSource s DRAGON_BREATH
DamageSource t DRYOUT
DamageSource u SWEET_BERRY_BUSH
DamageSource v ()Z isMagic
DamageSource w ()LDamageSource; setMagic
DamageSource y translationIndex
DataConverterFlattenData a (ILjava/lang/String;[Ljava/lang/String;)V map
DataConverterMaterialId a ID_MAPPING
DataConverterSpawnEgg a ID_MAPPING
DataConverterTypes a LEVEL
DataConverterTypes b PLAYER
DataConverterTypes c CHUNK
DataConverterTypes d HOTBAR
DataConverterTypes e OPTIONS
DataConverterTypes f STRUCTURE
DataConverterTypes g STATS
DataConverterTypes h SAVED_DATA
DataConverterTypes i ADVANCEMENTS
DataConverterTypes j POI_CHUNK
DataConverterTypes l BLOCK_ENTITY
DataConverterTypes m ITEM_STACK
DataConverterTypes n BLOCK_STATE
DataConverterTypes o ENTITY_NAME
DataConverterTypes p ENTITY_TREE
DataConverterTypes q ENTITY
DataConverterTypes r BLOCK_NAME
DataConverterTypes s ITEM_NAME
DataConverterTypes t UNTAGGED_SPAWNER
DataConverterTypes u STRUCTURE_FEATURE
DataConverterTypes v OBJECTIVE
DataConverterTypes w TEAM
DataConverterTypes x RECIPE
DataConverterTypes y BIOME
DataConverterTypes z WORLD_GEN_SETTINGS
DataFixTypes a LEVEL
DataFixTypes b PLAYER
DataFixTypes c CHUNK
DataFixTypes d HOTBAR
DataFixTypes e OPTIONS
DataFixTypes f STRUCTURE
DataFixTypes g STATS
DataFixTypes h SAVED_DATA
DataFixTypes i ADVANCEMENTS
DataFixTypes j POI_CHUNK
DataFixTypes k WORLD_GEN_SETTINGS
DataPackResources c commandDispatcher
DataPaletteBlock a (IIILjava/lang/Object;)Ljava/lang/Object; setBlock
DataPaletteBlock a (Ljava/util/function/Predicate;)Z contains
DataPaletteBlock b (ILjava/lang/Object;)V setBlockIndex
DataWatcher a (LDataWatcherObject;)Ljava/lang/Object; get
DataWatcher a (LDataWatcherObject;Ljava/lang/Object;)V register
DataWatcher b (LDataWatcherObject;Ljava/lang/Object;)V set
DataWatcher c (LDataWatcherObject;Ljava/lang/Object;)V registerObject
DataWatcher c entity
DataWatcher d entries
DataWatcher e lock
DedicatedPlayerList b ()LDedicatedServer; getServer
DedicatedServer a (Ljava/lang/String;LCommandListenerWrapper;)V issueCommand
DedicatedServer bb ()V handleCommandQueue
DedicatedServer be ()Z convertNames
DedicatedServer bf ()J getMaxTickTime
DedicatedServer i (Z)V setHasWhitelist
DedicatedServer l serverCommandQueue
DedicatedServer m remoteStatusListener
DedicatedServer n remoteControlCommandListener
DedicatedServer o remoteControlListener
DedicatedServer p propertyManager
DedicatedServerProperties A spawnMonsters
DedicatedServerProperties B snooperEnabled
DedicatedServerProperties C useNativeTransport
DedicatedServerProperties D enableCommandBlock
DedicatedServerProperties E spawnProtection
DedicatedServerProperties F opPermissionLevel
DedicatedServerProperties G functionPermissionLevel
DedicatedServerProperties H maxTickTime
DedicatedServerProperties I rateLimit
DedicatedServerProperties J viewDistance
DedicatedServerProperties K maxPlayers
DedicatedServerProperties L networkCompressionThreshold
DedicatedServerProperties M broadcastRconToOps
DedicatedServerProperties N broadcastConsoleToOps
DedicatedServerProperties O maxWorldSize
DedicatedServerProperties P syncChunkWrites
DedicatedServerProperties Q enableJmxMonitoring
DedicatedServerProperties R enableStatus
DedicatedServerProperties S entityBroadcastRangePercentage
DedicatedServerProperties T textFilteringConfig
DedicatedServerProperties U playerIdleTimeout
DedicatedServerProperties V whiteList
DedicatedServerProperties W generatorSettings
DedicatedServerProperties a (LIRegistryCustom;Ljava/nio/file/Path;)LDedicatedServerProperties; load
DedicatedServerProperties a onlineMode
DedicatedServerProperties b preventProxyConnections
DedicatedServerProperties c serverIp
DedicatedServerProperties d spawnAnimals
DedicatedServerProperties e spawnNpcs
DedicatedServerProperties f pvp
DedicatedServerProperties g allowFlight
DedicatedServerProperties h resourcePack
DedicatedServerProperties j motd
DedicatedServerProperties k forceGamemode
DedicatedServerProperties l enforceWhitelist
DedicatedServerProperties m difficulty
DedicatedServerProperties n gamemode
DedicatedServerProperties o levelName
DedicatedServerProperties p serverPort
DedicatedServerProperties q announcePlayerAchievements
DedicatedServerProperties r enableQuery
DedicatedServerProperties s queryPort
DedicatedServerProperties t enableRcon
DedicatedServerProperties u rconPort
DedicatedServerProperties v rconPassword
DedicatedServerProperties w resourcePackHash
DedicatedServerProperties x resourcePackSha1
DedicatedServerProperties y hardcore
DedicatedServerProperties z allowNether
DedicatedServerSettings a ()LDedicatedServerProperties; getProperties
DedicatedServerSettings a (Ljava/util/function/UnaryOperator;)LDedicatedServerSettings; setProperty
DedicatedServerSettings a path
DedicatedServerSettings b ()V save
DedicatedServerSettings b properties
DimensionManager A bedWorks
DimensionManager B respawnAnchorWorks
DimensionManager C hasRaids
DimensionManager F logicalHeight
DimensionManager G genLayerZoomer
DimensionManager H infiniburn
DimensionManager I effects
DimensionManager J ambientLight
DimensionManager a ()Ljava/lang/String; getSuffix
DimensionManager b ()Z hasSkyLight
DimensionManager c ()Z hasCeiling
DimensionManager d ()Z isNether
DimensionManager e ()Z isNatural
DimensionManager e OVERWORLD_KEY
DimensionManager f ()D getCoordinateScale
DimensionManager f THE_NETHER_KEY
DimensionManager g ()Z isPiglinSafe
DimensionManager g THE_END_KEY
DimensionManager h ()Z isBedWorks
DimensionManager i ()Z isRespawnAnchorWorks
DimensionManager j ()Z hasRaids
DimensionManager j OVERWORLD
DimensionManager k THE_NETHER
DimensionManager l THE_END
DimensionManager m ()I getLogicalHeight
DimensionManager m OVERWORLD_IMPL
DimensionManager n ()Z isCreateDragonBattle
DimensionManager n THE_NETHER_IMPL
DimensionManager o ()LGenLayerZoomer; getGenLayerZoomer
DimensionManager o THE_END_IMPL
DimensionManager p ()Z isFixedTime
DimensionManager s fixedTime
DimensionManager t hasSkylight
DimensionManager u hasCeiling
DimensionManager v ultraWarm
DimensionManager w natural
DimensionManager x coordinateScale
DimensionManager y createDragonBattle
DimensionManager z piglinSafe
DispenseBehaviorMaybe b dispensed
DispenseBehaviorProjectile b ()F getPower
DispenserRegistry a ()V init
DoubleBlockFinder$BlockType a SINGLE
DoubleBlockFinder$BlockType b FIRST
DoubleBlockFinder$BlockType c SECOND
DragonControllerManager a (LDragonControllerPhase;)V setControllerPhase
DragonControllerManager b enderDragon
DragonControllerManager c dragonControllers
DragonControllerManager d currentDragonController
DragonControllerPhase a (I)LDragonControllerPhase; getById
DragonControllerPhase a HOLDING_PATTERN
DragonControllerPhase b STRAFE_PLAYER
DragonControllerPhase c LANDING_APPROACH
DragonControllerPhase d LANDING
DragonControllerPhase e TAKEOFF
DragonControllerPhase f SITTING_FLAMING
DragonControllerPhase g SITTING_SCANNING
DragonControllerPhase h SITTING_ATTACKING
DragonControllerPhase i CHARGING_PLAYER
DragonControllerPhase j DYING
DragonControllerPhase k HOVER
Enchantment a ()I getMaxLevel
Enchantment a (LItemStack;)Z canEnchant
Enchantment b ()Z isTreasure
Enchantment b (LEnchantment;)Z isCompatible
Enchantment b itemTarget
Enchantment e ()I getStartLevel
Enchantment$Rarity a COMMON
Enchantment$Rarity b UNCOMMON
Enchantment$Rarity c RARE
Enchantment$Rarity d VERY_RARE
EnchantmentManager a (LEnchantment;LItemStack;)I getEnchantmentLevel
EnchantmentManager c (LEntityLiving;)I getFireAspectEnchantmentLevel
EnchantmentManager d (LEntityLiving;)I getOxygenEnchantmentLevel
EnchantmentManager e (LItemStack;)Z shouldNotDrop
EnchantmentManager f (LEntityLiving;)I getDigSpeedEnchantmentLevel
EnchantmentProtection$DamageType a ALL
EnchantmentProtection$DamageType b FIRE
EnchantmentProtection$DamageType c FALL
EnchantmentProtection$DamageType d EXPLOSION
EnchantmentProtection$DamageType e PROJECTILE
EnchantmentSlotType a (LItem;)Z canEnchant
EnchantmentSlotType a ARMOR
EnchantmentSlotType b ARMOR_FEET
EnchantmentSlotType c ARMOR_LEGS
EnchantmentSlotType d ARMOR_CHEST
EnchantmentSlotType e ARMOR_HEAD
EnchantmentSlotType f WEAPON
EnchantmentSlotType g DIGGER
EnchantmentSlotType h FISHING_ROD
EnchantmentSlotType i TRIDENT
EnchantmentSlotType j BREAKABLE
EnchantmentSlotType k BOW
EnchantmentSlotType l WEARABLE
EnchantmentSlotType m CROSSBOW
EnchantmentSlotType n VANISHABLE
Enchantments A ARROW_INFINITE
Enchantments B LUCK
Enchantments C LURE
Enchantments D LOYALTY
Enchantments E IMPALING
Enchantments F RIPTIDE
Enchantments G CHANNELING
Enchantments H MULTISHOT
Enchantments I QUICK_CHARGE
Enchantments J PIERCING
Enchantments K MENDING
Enchantments L VANISHING_CURSE
Enchantments a PROTECTION_ENVIRONMENTAL
Enchantments b PROTECTION_FIRE
Enchantments c PROTECTION_FALL
Enchantments d PROTECTION_EXPLOSIONS
Enchantments e PROTECTION_PROJECTILE
Enchantments f OXYGEN
Enchantments g WATER_WORKER
Enchantments h THORNS
Enchantments i DEPTH_STRIDER
Enchantments j FROST_WALKER
Enchantments k BINDING_CURSE
Enchantments l SOUL_SPEED
Enchantments m DAMAGE_ALL
Enchantments n DAMAGE_UNDEAD
Enchantments o DAMAGE_ARTHROPODS
Enchantments p KNOCKBACK
Enchantments q FIRE_ASPECT
Enchantments r LOOT_BONUS_MOBS
Enchantments s SWEEPING
Enchantments t DIG_SPEED
Enchantments u SILK_TOUCH
Enchantments v DURABILITY
Enchantments w LOOT_BONUS_BLOCKS
Enchantments x ARROW_DAMAGE
Enchantments y ARROW_KNOCKBACK
Enchantments z ARROW_FIRE
EnderDragonBattle a (LEnumDragonRespawn;)V setRespawnPhase
EnderDragonBattle a (Z)V generateExitPortal
EnderDragonBattle c bossBattle
EnderDragonBattle d ()Z isPreviouslyKilled
EnderDragonBattle d world
EnderDragonBattle e ()V initiateRespawn
EnderDragonBattle e gateways
EnderDragonBattle f ()V resetCrystals
EnderDragonBattle j ()LShapeDetector$ShapeDetectorCollection; getExitPortalShape
EnderDragonBattle k dragonKilled
EnderDragonBattle l previouslyKilled
EnderDragonBattle m dragonUUID
EnderDragonBattle o exitPortalLocation
EnderDragonBattle p respawnPhase
Entity A_ ()V updateSize
Entity B fallDistance
Entity G noclip
Entity I random
Entity J ticksLived
Entity K inWater
Entity O noDamageTicks
Entity P justCreated
Entity Q datawatcher
Entity S POSE
Entity T ()Z hasCustomName
Entity U impulse
Entity V inPortal
Entity W ()V decouple
Entity W portalTicks
Entity Y ()LEntityTypes; getEntityType
Entity Y uniqueID
Entity Z ()I getId
Entity a (DDDFF)V setLocation
Entity a (FF)V setYawPitch
Entity a (LBlockPosition;FF)V setPositionRotation
Entity a (LCrashReportSystemDetails;)V appendEntityCrashDetails
Entity a (LDamageSource;F)Z damageEntity
Entity a (LEntityPose;LEntitySize;)F getHeadHeight
Entity a (LEnumItemSlot;LItemStack;)V setSlot
Entity a (LEnumMoveType;LVec3D;)V move
Entity a (LIChatBaseComponent;)V setCustomName
Entity a (LNBTTagCompound;)V loadData
Entity a (LSoundEffect;FF)V playSound
Entity a (LWorldServer;LBlockPosition;Z)Ljava/util/Optional; findOrCreatePortal
Entity a (LWorldServer;LEntityLightning;)V onLightningStrike
Entity a (Ljava/lang/String;)Z addScoreboardTag
Entity aA ()V checkBlockCollisions
Entity aA size
Entity aB headHeight
Entity aD ()Z isSilent
Entity aE ()Z isNoGravity
Entity aH ()Z isFireProof
Entity aI ()Z isInWater
Entity aJ ()Z isInWaterOrRain
Entity aX ()V velocityChanged
Entity aZ ()Z isInteractable
Entity a_ ()Z isSpectator
Entity a_ (LEntityHuman;)V pickup
Entity aa ()Ljava/util/Set; getScoreboardTags
Entity aa glowing
Entity ab ()V killEntity
Entity ad ()LDataWatcher; getDataWatcher
Entity ae ()LEntityPose; getPose
Entity af vehicle
Entity ag loc
Entity ah ()V entityBaseTick
Entity ah locBlock
Entity ai mot
Entity aj ()V resetPortalCooldown
Entity aj boundingBox
Entity ak dead
Entity am ()V burnFromLava
Entity am fireTicks
Entity an ()I getFireTicks
Entity an AIR_TICKS
Entity ao ()V extinguish
Entity aq ()Z isOnGround
Entity at ()F getBlockJumpFactor
Entity au ()F getBlockSpeedFactor
Entity av portalCooldown
Entity aw invulnerable
Entity ax ()LSoundEffect; getSoundSwim
Entity ay ()LSoundEffect; getSoundSplash
Entity az ()LSoundEffect; getSoundSplashHighSpeed
Entity b (DDD)V enderTeleportTo
Entity b (DDDFF)V setPositionRotation
Entity b (IZ)V setFlag
Entity b (LDamageSource;)Z isInvulnerable
Entity b (LEntityPose;)V setPose
Entity b (LNBTTagCompound;)V saveData
Entity b (Ljava/lang/String;)Z removeScoreboardTag
Entity b entityCount
Entity bA ()Z isSneaking
Entity bG ()Z isSprinting
Entity bH ()Z isSwimming
Entity bL ()Z isInvisible
Entity bN ()LScoreboardTeamBase; getScoreboardTeam
Entity bP ()I getAirTicks
Entity bV ()F getHeadRotation
Entity bX ()Z isInvulnerable
Entity bZ ()Z canPortal
Entity ba ()Z isCollidable
Entity bc ()Ljava/lang/String; getSaveID
Entity bd ()Z isAlive
Entity be ()Z inBlock
Entity bg ()V passengerTick
Entity bk ()V ejectPassengers
Entity bn ()LVec3D; getLookDirection
Entity bq ()V doPortalTick
Entity br ()I getDefaultPortalCooldown
Entity bu ()Ljava/lang/Iterable; getArmorItems
Entity bw ()Z isBurning
Entity bx ()Z isPassenger
Entity by ()Z isVehicle
Entity c (DDD)V teleportAndSync
Entity c (Z)V setOnGround
Entity cC ()LEntity; getRootVehicle
Entity cE ()LEntity; getVehicle
Entity cF ()LSoundCategory; getSoundCategory
Entity cG ()I getMaxFireTicks
Entity cH ()LCommandListenerWrapper; getCommandListener
Entity cK ()F getWidth
Entity cL ()F getHeight
Entity cM ()LVec3D; getPositionVector
Entity cN ()LBlockPosition; getChunkCoordinates
Entity cQ ()LVec3D; getMot
Entity cS ()D locX
Entity cU ()D locY
Entity cW ()D getHeadY
Entity cY ()D locZ
Entity cZ ()V checkDespawn
Entity cb ()Z isIgnoreBlockTrigger
Entity cd ()Ljava/util/UUID; getUniqueID
Entity ce ()Ljava/lang/String; getUniqueIDString
Entity cf ()Ljava/lang/String; getName
Entity ci ()Z getCustomNameVisible
Entity ck ()LEnumDirection; getDirection
Entity cl ()LEnumDirection; getAdjustedDirection
Entity cn ()LAxisAlignedBB; getBoundingBox
Entity cp ()F getHeadHeight
Entity cr ()LWorld; getWorld
Entity cs ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
Entity cv ()LEntity; getRidingPassenger
Entity cw ()Ljava/util/List; getPassengers
Entity cy ()Ljava/util/stream/Stream; recursiveStream
Entity d ()LIChatBaseComponent; getScoreboardDisplayName
Entity d (Z)V setSilent
Entity e ()V initDatawatcher
Entity e (DDD)V setPosition
Entity e (Z)V setNoGravity
Entity f (I)V setOnFire
Entity f (LNBTTagCompound;)LNBTTagCompound; save
Entity f (Z)V setSneaking
Entity g (I)V setFireTicks
Entity g (LNBTTagCompound;)V load
Entity g (LVec3D;)V setMot
Entity g (Z)V setSprinting
Entity g id
Entity h (I)Z getFlag
Entity h (Z)V setSwimming
Entity i ()Z isInRain
Entity i (I)V setAirTicks
Entity i (LEntity;)V collide
Entity j ()V tick
Entity j (Z)V setInvisible
Entity k world
Entity l ()V stopRiding
Entity l (F)V setHeadRotation
Entity l lastX
Entity m (DDD)V enderTeleportAndLoad
Entity m (LEntity;)Z startRiding
Entity m (Z)V setInvulnerable
Entity m lastY
Entity n (DDD)V setMot
Entity n (Z)V setCustomNameVisible
Entity n lastZ
Entity o (DDD)V setPositionRaw
Entity o (LEntity;)V addPassenger
Entity o yaw
Entity p (LEntity;)V removePassenger
Entity p pitch
Entity q lastYaw
Entity r lastPitch
Entity s onGround
Entity t ()LEnumPistonReaction; getPushReaction
Entity t positionChanged
Entity v velocityChanged
Entity x (LEntity;)Z isSameVehicle
Entity$DeadFlag a KILLED
Entity$DeadFlag d UNLOADED_WITH_PLAYER
Entity$DeadFlag e DIMENSION_CHANGED
EntityAnimal a (LDamageSource;F)Z damageEntity
EntityAnimal a (LEntityAnimal;)Z mate
EntityAnimal bm loveTicks
EntityAnimal bn breedCause
EntityAnimal d (LEntityHuman;)I getExpValue
EntityAnimal fr ()LEntityPlayer; getBreedCause
EntityAnimal fs ()Z isInLove
EntityAnimal ft ()V resetLove
EntityAnimal t (I)V setLoveTicks
EntityAreaEffectCloud a (F)V setRadius
EntityAreaEffectCloud a (I)V setColor
EntityAreaEffectCloud a (LEntityLiving;)V setSource
EntityAreaEffectCloud a (LMobEffect;)V addEffect
EntityAreaEffectCloud a (LParticleParam;)V setParticle
EntityAreaEffectCloud ae effects
EntityAreaEffectCloud af affectedEntities
EntityAreaEffectCloud ag duration
EntityAreaEffectCloud ah waitTime
EntityAreaEffectCloud ai reapplicationDelay
EntityAreaEffectCloud aj hasColor
EntityAreaEffectCloud ak durationOnUse
EntityAreaEffectCloud al radiusOnUse
EntityAreaEffectCloud am radiusPerTick
EntityAreaEffectCloud b (F)V setRadiusOnUse
EntityAreaEffectCloud b (I)V setDuration
EntityAreaEffectCloud c (F)V setRadiusPerTick
EntityAreaEffectCloud d (I)V setWaitTime
EntityAreaEffectCloud d COLOR
EntityAreaEffectCloud g ()F getRadius
EntityAreaEffectCloud g potionRegistry
EntityAreaEffectCloud h ()I getColor
EntityAreaEffectCloud i ()LParticleParam; getParticle
EntityAreaEffectCloud m ()I getDuration
EntityAreaEffectCloud r ()LEntityLiving; getSource
EntityArmorStand a (LVector3f;)V setHeadPose
EntityArmorStand a (Z)V setSmall
EntityArmorStand b (LVector3f;)V setBodyPose
EntityArmorStand bq handItems
EntityArmorStand br armorItems
EntityArmorStand bs armorStandInvisible
EntityArmorStand bt disabledSlots
EntityArmorStand bu headPose
EntityArmorStand bv bodyPose
EntityArmorStand bw leftArmPose
EntityArmorStand bx rightArmPose
EntityArmorStand by leftLegPose
EntityArmorStand bz rightLegPose
EntityArmorStand c (LVector3f;)V setLeftArmPose
EntityArmorStand d (LVector3f;)V setRightArmPose
EntityArmorStand e (LVector3f;)V setLeftLegPose
EntityArmorStand f (LVector3f;)V setRightLegPose
EntityArmorStand m ()Z isSmall
EntityArmorStand o ()Z hasArms
EntityArmorStand p ()Z hasBasePlate
EntityArmorStand q (Z)V setArms
EntityArmorStand r ()Z isMarker
EntityArmorStand r (Z)V setBasePlate
EntityArmorStand s (Z)V setMarker
EntityArrow a (I)V setKnockbackStrength
EntityArrow a (Z)V setCritical
EntityArrow af despawnCounter
EntityArrow ag damage
EntityArrow ah knockbackStrength
EntityArrow b (B)V setPierceLevel
EntityArrow b inGround
EntityArrow d fromPlayer
EntityArrow e shake
EntityArrow h (D)V setDamage
EntityArrow i ()LSoundEffect; getSoundHit
EntityArrow k ()LItemStack; getItemStack
EntityArrow m ()D getDamage
EntityArrow o ()Z isCritical
EntityArrow p ()Z isShotFromCrossbow
EntityArrow q ()B getPierceLevel
EntityArrow q (Z)V setShotFromCrossbow
EntityArrow$PickupStatus a DISALLOWED
EntityArrow$PickupStatus b ALLOWED
EntityArrow$PickupStatus c CREATIVE_ONLY
EntityBat o ()Z isAsleep
EntityBat u (Z)V setAsleep
EntityBee bA hivePos
EntityBee bu ticksSincePollination
EntityBee bv cannotEnterHiveTicks
EntityBee bw numCropsGrownSincePollination
EntityBee bz flowerPos
EntityBee fC ()Z canPollinate
EntityBee fG ()I getNumCropsGrownSincePollination
EntityBee fu ()Z hasHivePos
EntityBee fv ()LBlockPosition; getHivePos
EntityBee fx ()Z hasNectar
EntityBee fy ()Z hasStung
EntityBee g (LBlockPosition;)V setFlowerPos
EntityBee o ()LBlockPosition; getFlowerPos
EntityBee r ()Z hasFlowerPos
EntityBee u (I)V setCannotEnterHiveTicks
EntityBee u (Z)V setHasNectar
EntityBee v (Z)V setHasStung
EntityBoat a (F)V setDamage
EntityBoat a (LEntityBoat$EnumBoatType;)V setType
EntityBoat m ()F getDamage
EntityBoat p ()LEntityBoat$EnumBoatType; getType
EntityBoat$EnumBoatType a OAK
EntityBoat$EnumBoatType b SPRUCE
EntityBoat$EnumBoatType c BIRCH
EntityBoat$EnumBoatType d JUNGLE
EntityBoat$EnumBoatType e ACACIA
EntityBoat$EnumBoatType f DARK_OAK
EntityBoat$EnumStatus a IN_WATER
EntityBoat$EnumStatus b UNDER_WATER
EntityBoat$EnumStatus c UNDER_FLOWING_WATER
EntityBoat$EnumStatus d ON_LAND
EntityBoat$EnumStatus e IN_AIR
EntityCat a (LEnumColor;)V setCollarColor
EntityCat fv ()I getCatType
EntityCat fy ()LEnumColor; getCollarColor
EntityCat u (I)V setCatType
EntityCat$PathfinderGoalTemptChance c chosenTarget
EntityChicken br eggLayTime
EntityChicken bs chickenJockey
EntityChicken r ()Z isChickenJockey
EntityChicken u (Z)V setChickenJockey
EntityComplexPart b owner
EntityCreeper T_ ()Z isPowered
EntityCreeper bn fuseTicks
EntityCreeper bo maxFuseTicks
EntityCreeper bp explosionRadius
EntityCreeper c POWERED
EntityCreeper fm ()V ignite
EntityCreeper fn ()Z canCauseHeadDrop
EntityCreeper fo ()V setCausedHeadDrop
EntityCreeper fp ()V explode
EntityCreeper fs ()V createEffectCloud
EntityCreeper r ()Z isIgnited
EntityDamageSource a (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
EntityDamageSource l ()LEntity; getEntity
EntityDamageSourceIndirect A owner
EntityDolphin b (I)V setMoistness
EntityDolphin g (LBlockPosition;)V setTreasurePos
EntityDolphin m ()LBlockPosition; getTreasurePos
EntityDolphin o ()Z gotFish
EntityDolphin r ()I getMoistness
EntityDolphin u (Z)V setGotFish
EntityDrowned b navigationWater
EntityDrowned c navigationLand
EntityEnderCrystal a (LBlockPosition;)V setBeamTarget
EntityEnderCrystal a (Z)V setShowingBottom
EntityEnderCrystal g ()LBlockPosition; getBeamTarget
EntityEnderCrystal h ()Z isShowingBottom
EntityEnderDragon b PHASE
EntityEnderDragon bq deathAnimationTicks
EntityEnderDragon bs currentEnderCrystal
EntityEnderDragon bv children
EntityEnderDragon f (LDamageSource;F)Z dealDamage
EntityEnderDragon fk ()LDragonControllerManager; getDragonControllerManager
EntityEnderDragon fl ()LEnderDragonBattle; getEnderDragonBattle
EntityEnderSignal b (LItemStack;)V setItem
EntityEnderSignal c targetX
EntityEnderSignal d targetY
EntityEnderSignal e targetZ
EntityEnderSignal f despawnTimer
EntityEnderSignal g ()LItemStack; getItem
EntityEnderSignal g shouldDropItem
EntityEnderman c (LIBlockData;)V setCarried
EntityEnderman fm ()LIBlockData; getCarried
EntityEnderman$PathfinderGoalEndermanPickupBlock a enderman
EntityEvokerFangs g ()LEntityLiving; getOwner
EntityExperienceOrb a (I)I getOrbValue
EntityExperienceOrb d value
EntityExperienceOrb f targetPlayer
EntityFallingBlock ae hurtEntities
EntityFallingBlock af fallHurtMax
EntityFallingBlock b ticksLived
EntityFallingBlock c dropItem
EntityFallingBlock d tileEntityData
EntityFallingBlock f block
EntityFallingBlock i ()LIBlockData; getBlock
EntityFireball b dirX
EntityFireball c dirY
EntityFireball d dirZ
EntityFireballFireball b (LItemStack;)V setItem
EntityFireballFireball k ()LItemStack; getItem
EntityFireworks b FIREWORK_ITEM
EntityFireworks d SHOT_AT_ANGLE
EntityFireworks e ticksFlown
EntityFireworks f expectedLifespan
EntityFireworks g ridingEntity
EntityFireworks h ()Z isShotAtAngle
EntityFireworks i ()V explode
EntityFireworks k ()Z hasExplosions
EntityFish b FROM_BUCKET
EntityFish fn ()LSoundEffect; getSoundFlop
EntityFish o ()Z isFromBucket
EntityFish u (Z)V setFromBucket
EntityFishingHook af waitTime
EntityFishingHook ai inOpenWater
EntityFishingHook aj hooked
EntityFishingHook ak hookState
EntityFishingHook am lureLevel
EntityFishingHook e HOOKED_ENTITY
EntityFishingHook g ()Z isInOpenWater
EntityFishingHook h ()V reel
EntityFishingHook i ()LEntityHuman; getOwner
EntityFishingHook k ()LEntity; getHooked
EntityFishingHook n ()V updateHookedEntity
EntityFishingHook$HookState a FLYING
EntityFishingHook$HookState b HOOKED_IN_ENTITY
EntityFishingHook$HookState c BOBBING
EntityFishingHook$WaterPosition a ABOVE_WATER
EntityFishingHook$WaterPosition b INSIDE_WATER
EntityFishingHook$WaterPosition c INVALID
EntityFox A (Z)V setSleeping
EntityFox a (LEntityFox$Type;)V setFoxType
EntityFox bF ()Z isCrouching
EntityFox bo FIRST_TRUSTED_PLAYER
EntityFox bp SECOND_TRUSTED_PLAYER
EntityFox fm ()Z isSitting
EntityFox fz ()V initializePathFinderGoals
EntityFox r ()LEntityFox$Type; getFoxType
EntityFox u (Z)V setSitting
EntityFox w (Z)V setCrouching
EntityFox$Type a RED
EntityFox$Type b SNOW
EntityGhast o ()I getPower
EntityGhast$PathfinderGoalGhastAttackTarget b ghast
EntityGuardian c goalRandomStroll
EntityGuardian r ()LSoundEffect; getSoundFlop
EntityHanging a (LDamageSource;F)Z damageEntity
EntityHanging a (LEnumDirection;)V setDirection
EntityHanging c blockPosition
EntityHanging d direction
EntityHanging g ()V updateBoundingBox
EntityHanging h ()Z survives
EntityHanging i ()I getHangingWidth
EntityHanging k ()I getHangingHeight
EntityHanging m ()V playPlaceSound
EntityHanging n ()LBlockPosition; getBlockPosition
EntityHoglin bq conversionTicks
EntityHoglin br cannotBeHunted
EntityHoglin fn ()Z isConverting
EntityHoglin fu ()Z isImmuneToZombification
EntityHoglin u (Z)V setImmuneToZombification
EntityHorse a (LHorseColor;LHorseStyle;)V setVariant
EntityHorse fm ()LHorseColor; getColor
EntityHorse fo ()LHorseStyle; getStyle
EntityHorse fu ()I getVariantRaw
EntityHorse x (I)V setVariantRaw
EntityHorseAbstract b (Ljava/util/UUID;)V setOwnerUUID
EntityHorseAbstract bC canSlide
EntityHorseAbstract bp inventoryChest
EntityHorseAbstract br jumpPower
EntityHorseAbstract fB ()Z hasReproduced
EntityHorseAbstract fC ()I getTemper
EntityHorseAbstract fD ()V loadChest
EntityHorseAbstract fF ()D getJumpStrength
EntityHorseAbstract fH ()LSoundEffect; getSoundAngry
EntityHorseAbstract fJ ()I getMaxDomestication
EntityHorseAbstract fn ()I getChestSlots
EntityHorseAbstract fw ()Z isTamed
EntityHorseAbstract fx ()Ljava/util/UUID; getOwnerUUID
EntityHorseAbstract v (I)V setTemper
EntityHorseAbstract v (Z)V setTamed
EntityHorseAbstract z (Z)V setStanding
EntityHorseChestedAbstract fm ()Z isCarryingChest
EntityHorseChestedAbstract u (Z)V setCarryingChest
EntityHuman a (ILMerchantRecipeList;IIZZ)V openTrade
EntityHuman a (LBlockPosition;)Lcom/mojang/datafixers/util/Either; sleep
EntityHuman a (LEntityHorseAbstract;LIInventory;)V openHorseInventory
EntityHuman a (LITileInventory;)Ljava/util/OptionalInt; openContainer
EntityHuman a (LItemStack;I)V enchantDone
EntityHuman a (LItemStack;LEnumHand;)V openBook
EntityHuman a (LItemStack;Z)LEntityItem; drop
EntityHuman a (LTileEntitySign;)V openSign
EntityHuman a (LWorldServer;LBlockPosition;FZZ)Ljava/util/Optional; getBed
EntityHuman a (Ljava/util/Collection;)I discoverRecipes
EntityHuman a (Z)Z dropItem
EntityHuman a (ZZ)V wakeup
EntityHuman b (Ljava/util/Collection;)I undiscoverRecipes
EntityHuman bA expTotal
EntityHuman bB exp
EntityHuman bE hookedFish
EntityHuman bF abilities
EntityHuman b_ ()Z isCreative
EntityHuman bk enderChest
EntityHuman bl defaultContainer
EntityHuman bm activeContainer
EntityHuman bn foodData
EntityHuman bz expLevel
EntityHuman c (I)V levelDown
EntityHuman c (Ljava/lang/String;)Ljava/util/UUID; getOfflineUUID
EntityHuman c_ ()V updateAbilities
EntityHuman d (I)V giveExp
EntityHuman d (LIBlockData;)Z hasBlock
EntityHuman eV ()I getScore
EntityHuman eW ()V removeCursedItems
EntityHuman f (LEntity;)V attack
EntityHuman f inventory
EntityHuman fa ()Lcom/mojang/authlib/GameProfile; getProfile
EntityHuman fd ()Z isDeeplySleeping
EntityHuman fg ()V startGliding
EntityHuman fh ()V stopGliding
EntityHuman fj ()I getExpToLevel
EntityHuman fk ()LFoodMetaData; getFoodData
EntityHuman fn ()LInventoryEnderChest; getEnderChest
EntityHuman fo ()V releaseShoulderEntities
EntityHuman fp ()LScoreboard; getScoreboard
EntityHuman fr ()LNBTTagCompound; getShoulderEntityLeft
EntityHuman fs ()LNBTTagCompound; getShoulderEntityRight
EntityHuman fu ()V resetAttackCooldown
EntityHuman fv ()LItemCooldown; getCooldownTracker
EntityHuman fx ()Z isCreativeAndOp
EntityHuman g sleepTicks
EntityHuman i (LNBTTagCompound;)V setShoulderEntityLeft
EntityHuman j (LNBTTagCompound;)V setShoulderEntityRight
EntityHuman k (LNBTTagCompound;)V spawnEntityFromShoulder
EntityHuman m ()V closeInventory
EntityHuman p (DDD)V checkMovement
EntityHuman s (F)V applyExhaustion
EntityHuman t (F)F getAttackCooldown
EntityHuman t (I)V setScore
EntityHuman u (I)V addScore
EntityHuman$EnumBedResult a NOT_POSSIBLE_HERE
EntityHuman$EnumBedResult b NOT_POSSIBLE_NOW
EntityHuman$EnumBedResult c TOO_FAR_AWAY
EntityHuman$EnumBedResult d OBSTRUCTED
EntityHuman$EnumBedResult e OTHER_PROBLEM
EntityHuman$EnumBedResult f NOT_SAFE
EntityIllagerWizard a (LEntityIllagerWizard$Spell;)V setSpell
EntityIllagerWizard fm ()LSoundEffect; getSoundCastSpell
EntityIllagerWizard fx ()LEntityIllagerWizard$Spell; getSpell
EntityIllagerWizard$PathfinderGoalCastSpell l ()LEntityIllagerWizard$Spell; getCastSpell
EntityIllagerWizard$Spell a NONE
EntityIllagerWizard$Spell b SUMMON_VEX
EntityIllagerWizard$Spell c FANGS
EntityIllagerWizard$Spell d WOLOLO
EntityIllagerWizard$Spell e DISAPPEAR
EntityIllagerWizard$Spell f BLINDNESS
EntityInsentient A ()LControllerMove; getControllerMove
EntityInsentient B ()LControllerJump; getControllerJump
EntityInsentient D ()LNavigationAbstract; getNavigation
EntityInsentient F ()LEntitySenses; getEntitySenses
EntityInsentient G ()LEntityLiving; getGoalTarget
EntityInsentient H ()V blockEaten
EntityInsentient K ()V doSpawnEffect
EntityInsentient M ()LMinecraftKey; getDefaultLootTable
EntityInsentient N ()Z isSpecialPersistence
EntityInsentient R ()V mobTick
EntityInsentient a (LWorldAccess;LDifficultyDamageScaler;LEnumMobSpawn;LGroupDataEntity;LNBTTagCompound;)LGroupDataEntity; prepare
EntityInsentient a (Z)V setBaby
EntityInsentient a (ZZ)V unleash
EntityInsentient b (LEntity;Z)V setLeashHolder
EntityInsentient bf moveController
EntityInsentient bh navigation
EntityInsentient bi goalSelector
EntityInsentient bj targetSelector
EntityInsentient bk dropChanceHand
EntityInsentient bl dropChanceArmor
EntityInsentient bp canPickUpLoot
EntityInsentient bq persistent
EntityInsentient bs lootTableKey
EntityInsentient bt lootTableSeed
EntityInsentient bu leashHolder
EntityInsentient d (LEntityHuman;)I getExpValue
EntityInsentient d goalTarget
EntityInsentient eS ()I getMaxSpawnGroup
EntityInsentient eU ()V setPersistent
EntityInsentient eV ()Z canPickupLoot
EntityInsentient eW ()Z isPersistent
EntityInsentient fd ()Z isLeashed
EntityInsentient fe ()LEntity; getLeashHolder
EntityInsentient ff ()Z isNoAI
EntityInsentient fg ()Z isLeftHanded
EntityInsentient fh ()Z isAggressive
EntityInsentient g lookController
EntityInsentient h (D)Z isTypeNotPersistent
EntityInsentient h (LEntityLiving;)V setGoalTarget
EntityInsentient i (LItemStack;)Z canPickup
EntityInsentient p ()LSoundEffect; getSoundAmbient
EntityInsentient q (Z)V setCanPickupLoot
EntityInsentient r (Z)V setNoAI
EntityInsentient s (Z)V setLeftHanded
EntityInsentient t (Z)V setAggressive
EntityInsentient u ()V initPathfinder
EntityInsentient z ()LControllerLook; getControllerLook
EntityIronGolem fn ()Z isPlayerCreated
EntityIronGolem v (Z)V setPlayerCreated
EntityIronGolem$CrackLevel a NONE
EntityIronGolem$CrackLevel b LOW
EntityIronGolem$CrackLevel c MEDIUM
EntityIronGolem$CrackLevel d HIGH
EntityItem a (I)V setPickupDelay
EntityItem ae owner
EntityItem b (LItemStack;)V setItemStack
EntityItem b (Ljava/util/UUID;)V setOwner
EntityItem c (Ljava/util/UUID;)V setThrower
EntityItem c ITEM
EntityItem d age
EntityItem e pickupDelay
EntityItem g ()LItemStack; getItemStack
EntityItem g thrower
EntityItem h ()Ljava/util/UUID; getOwner
EntityItem i ()Ljava/util/UUID; getThrower
EntityItem m ()V defaultPickupDelay
EntityItem x ()V mergeNearby
EntityItemFrame a (I)V setRotation
EntityItemFrame a (IZ)V setRotation
EntityItemFrame a (LItemStack;Z)V setItem
EntityItemFrame ae itemDropChance
EntityItemFrame af fixed
EntityItemFrame b (LItemStack;)V setItem
EntityItemFrame f ITEM
EntityItemFrame o ()LItemStack; getItem
EntityItemFrame p ()I getRotation
EntityLargeFireball e yield
EntityLightning a (Z)V setEffect
EntityLightning c lifeTicks
EntityLightning e isEffect
EntityLiving B (LEntity;)Z attackEntity
EntityLiving D (LEntity;)Z hasLineOfSight
EntityLiving a (LAttributeBase;)LAttributeModifiable; getAttributeInstance
EntityLiving a (LDamageSource;)V die
EntityLiving a (LDamageSource;F)Z damageEntity
EntityLiving a (LDamageSource;IZ)V dropDeathLoot
EntityLiving a (LEntity;I)V receive
EntityLiving a (LEntityLiving;)V setLastDamager
EntityLiving a (LEnumHand;)V swingHand
EntityLiving a (LEnumHand;Z)V swingHand
EntityLiving a (LMobEffectList;)Z hasEffect
EntityLiving aD killer
EntityLiving aE lastDamageByPlayerTime
EntityLiving aF killed
EntityLiving aG ticksFarFromPlayer
EntityLiving aN lastDamage
EntityLiving aO jumping
EntityLiving aj arrowCooldown
EntityLiving al hurtTicks
EntityLiving am hurtDuration
EntityLiving ao deathTicks
EntityLiving av maxNoDamageTicks
EntityLiving b (F)V heal
EntityLiving b (LBlockPosition;)V entitySleep
EntityLiving b (LDamageSource;F)V damageArmor
EntityLiving b (LEnumItemSlot;)LItemStack; getEquipment
EntityLiving b (LMobEffectList;)LMobEffect; getEffect
EntityLiving ba activeItem
EntityLiving bg ARROWS_IN_BODY
EntityLiving bj attributeMap
EntityLiving bk combatTracker
EntityLiving bl effects
EntityLiving bo updateEffects
EntityLiving bp lastDamager
EntityLiving bq hurtTimestamp
EntityLiving bu jumpTicks
EntityLiving c (F)V setHealth
EntityLiving c (LDamageSource;)LSoundEffect; getSoundHurt
EntityLiving c (LDamageSource;F)F applyArmorModifier
EntityLiving c (LEnumItemSlot;)V broadcastItemBreak
EntityLiving c (LMobEffect;)Z addEffect
EntityLiving d (LDamageSource;F)F applyMagicModifier
EntityLiving d (LEntityHuman;)I getExpValue
EntityLiving d (LEntityLiving;)V shieldBlock
EntityLiving d (LEnumHand;)V broadcastItemBreak
EntityLiving d (LMobEffectList;)Z removeEffect
EntityLiving dE ()V tickPotionEffects
EntityLiving dH ()Z removeAllEffects
EntityLiving dI ()Ljava/util/Collection; getEffects
EntityLiving dL ()F getHealth
EntityLiving dO ()V dropInventory
EntityLiving dP ()V dropExperience
EntityLiving dT ()V playBlockStepSound
EntityLiving dU ()I getArmorStrength
EntityLiving dV ()LCombatTracker; getCombatTracker
EntityLiving dW ()LEntityLiving; getKillingEntity
EntityLiving dX ()F getMaxHealth
EntityLiving dY ()I getArrowCount
EntityLiving d_ ()Z isClimbing
EntityLiving dh ()LBehaviorController; getBehaviorController
EntityLiving dv ()Z isDropExperience
EntityLiving dx ()Z alwaysGivesExp
EntityLiving dy ()Ljava/util/Random; getRandom
EntityLiving dz ()LEntityLiving; getLastDamager
EntityLiving e (LDamageSource;F)V damageEntity0
EntityLiving eB ()V releaseActiveItem
EntityLiving eC ()V clearActiveItem
EntityLiving eD ()Z isBlocking
EntityLiving eF ()Z isGliding
EntityLiving eK ()Ljava/util/Optional; getBedPosition
EntityLiving eM ()Z isSleeping
EntityLiving eN ()V entityWakeup
EntityLiving eb ()LAttributeMapBase; getAttributeMap
EntityLiving ec ()LEnumMonsterType; getMonsterType
EntityLiving ed ()LItemStack; getItemInMainHand
EntityLiving ee ()LItemStack; getItemInOffHand
EntityLiving eg ()F getSoundVolume
EntityLiving ei ()Z isFrozen
EntityLiving ek ()V jump
EntityLiving ep ()V doTick
EntityLiving eq ()V collideNearby
EntityLiving er ()Z isRiptiding
EntityLiving es ()Z doAITick
EntityLiving et ()F getAbsorptionHearts
EntityLiving ev ()LEnumMainHand; getMainHand
EntityLiving ew ()Z isHandRaised
EntityLiving ex ()LEnumHand; getRaisedHand
EntityLiving ey ()LItemStack; getActiveItem
EntityLiving f HEALTH
EntityLiving g ()V enterCombat
EntityLiving g (LDamageSource;)Z applyBlockingModifier
EntityLiving h ()V exitCombat
EntityLiving k ()V movementTick
EntityLiving o (F)V damageShield
EntityLiving p (I)LSoundEffect; getSoundFall
EntityLiving p (Z)V setJumping
EntityLiving q ()LSoundEffect; getSoundDeath
EntityLiving q (I)V setArrowCount
EntityLiving r (F)V setAbsorptionHearts
EntityLiving z_ ()Z isBaby
EntityLlama fV ()I getStrength
EntityLlama fX ()I getVariant
EntityLlama x (I)V setVariant
EntityLlama y (I)V setStrength
EntityMinecartAbstract a (F)V setDamage
EntityMinecartAbstract b (LIBlockData;)V setDisplayBlock
EntityMinecartAbstract g ()D getMaxSpeed
EntityMinecartAbstract i ()V decelerate
EntityMinecartAbstract k ()F getDamage
EntityMinecartAbstract m ()I getType
EntityMinecartAbstract m (I)V setDisplayBlockOffset
EntityMinecartAbstract o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartAbstract p ()LIBlockData; getDisplayBlock
EntityMinecartAbstract r ()I getDisplayBlockOffset
EntityMinecartAbstract$EnumMinecartType a RIDEABLE
EntityMinecartAbstract$EnumMinecartType b CHEST
EntityMinecartAbstract$EnumMinecartType c FURNACE
EntityMinecartAbstract$EnumMinecartType d TNT
EntityMinecartAbstract$EnumMinecartType e SPAWNER
EntityMinecartAbstract$EnumMinecartType f HOPPER
EntityMinecartAbstract$EnumMinecartType g COMMAND_BLOCK
EntityMinecartCommandBlock b COMMAND
EntityMinecartCommandBlock v ()LCommandBlockListenerAbstract; getCommandBlock
EntityMinecartContainer a (LMinecraftKey;J)V setLootTable
EntityMinecartContainer b items
EntityMinecartContainer c lootTable
EntityMinecartContainer d lootTableSeed
EntityMinecartFurnace e fuel
EntityMinecartHopper n (I)V setCooldown
EntityMinecartHopper p (Z)V setEnabled
EntityMinecartHopper v ()Z isEnabled
EntityMonsterPatrolling b patrolTarget
EntityMonsterPatrolling c patrolLeader
EntityMonsterPatrolling d patrolling
EntityMonsterPatrolling fo ()LBlockPosition; getPatrolTarget
EntityMonsterPatrolling fs ()Z isPatrolLeader
EntityMonsterPatrolling fv ()Z isPatrolling
EntityMonsterPatrolling g (LBlockPosition;)V setPatrolTarget
EntityMonsterPatrolling u (Z)V setPatrolLeader
EntityMushroomCow a (LEntityMushroomCow$Type;)V setVariant
EntityMushroomCow r ()LEntityMushroomCow$Type; getVariant
EntityMushroomCow$Type a RED
EntityMushroomCow$Type b BROWN
EntityOcelot fm ()Z isTrusting
EntityOcelot u (Z)V setTrusting
EntityPainting e art
EntityPanda a (LEntityPanda$Gene;)V setMainGene
EntityPanda b (LEntityPanda$Gene;)V setHiddenGene
EntityPanda bE PICKUP_PREDICATE
EntityPanda fA ()Z isLazy
EntityPanda fB ()Z isWorried
EntityPanda fC ()Z isPlayful
EntityPanda fE ()Z isWeak
EntityPanda fh ()Z isAggressive
EntityPanda fv ()LEntityPanda$Gene; getMainGene
EntityPanda fw ()LEntityPanda$Gene; getHiddenGene
EntityPanda fz ()LEntityPanda$Gene; getActiveGene
EntityPanda$Gene a NORMAL
EntityPanda$Gene b LAZY
EntityPanda$Gene c ()Z isRecessive
EntityPanda$Gene c WORRIED
EntityPanda$Gene d PLAYFUL
EntityPanda$Gene e BROWN
EntityPanda$Gene f WEAK
EntityPanda$Gene g AGGRESSIVE
EntityParrot fw ()I getVariant
EntityParrot u (I)V setVariant
EntityPhantom a (I)V setSize
EntityPhantom m ()I getSize
EntityPhantom$AttackPhase a CIRCLE
EntityPhantom$AttackPhase b SWOOP
EntityPig bp saddleStorage
EntityPiglin bt cannotHunt
EntityPiglinAbstract c conversionTicks
EntityPiglinAbstract o ()Z isImmuneToZombification
EntityPiglinAbstract r ()Z isConverting
EntityPiglinAbstract u (Z)V setImmuneToZombification
EntityPiglinArmPose a ATTACKING_WITH_MELEE_WEAPON
EntityPiglinArmPose b CROSSBOW_HOLD
EntityPiglinArmPose c CROSSBOW_CHARGE
EntityPiglinArmPose d ADMIRING_ITEM
EntityPiglinArmPose e DANCING
EntityPiglinArmPose f DEFAULT
EntityPillager bm inventory
EntityPlayer A ()LServerStatisticManager; getStatisticManager
EntityPlayer B ()LRecipeBookServer; getRecipeBook
EntityPlayer D ()LEntity; getSpecatorTarget
EntityPlayer G ()LIChatBaseComponent; getPlayerListName
EntityPlayer J ()LAdvancementDataPlayer; getAdvancementData
EntityPlayer K ()LBlockPosition; getSpawn
EntityPlayer L ()F getSpawnAngle
EntityPlayer M ()LResourceKey; getSpawnDimension
EntityPlayer N ()Z isSpawnForced
EntityPlayer a (LContainer;)V updateInventory
EntityPlayer a (LEntityPlayer;Z)V copyFrom
EntityPlayer a (LResourceKey;LBlockPosition;FZZ)V setRespawnPosition
EntityPlayer a (LEnumGamemode;)Z setGameMode
EntityPlayer b playerConnection
EntityPlayer bH advancementDataPlayer
EntityPlayer bI serverStatisticManager
EntityPlayer bJ lastHealthScored
EntityPlayer bK lastFoodScored
EntityPlayer bL lastAirScored
EntityPlayer bM lastArmorScored
EntityPlayer bN lastExpLevelScored
EntityPlayer bO lastExpTotalScored
EntityPlayer bP lastHealthSent
EntityPlayer bQ lastFoodSent
EntityPlayer bR lastSentSaturationZero
EntityPlayer bS lastSentExp
EntityPlayer bT invulnerableTicks
EntityPlayer bX spectatedEntity
EntityPlayer bY worldChangeInvuln
EntityPlayer c server
EntityPlayer ca recipeBook
EntityPlayer cg spawnDimension
EntityPlayer ch spawn
EntityPlayer ci spawnForced
EntityPlayer cj spawnAngle
EntityPlayer cm containerCounter
EntityPlayer d playerInteractManager
EntityPlayer e (LEntity;)V setSpectatorTarget
EntityPlayer e (LWorldServer;)V triggerDimensionAdvancements
EntityPlayer f ()V syncInventory
EntityPlayer f ping
EntityPlayer fA ()Z canPvP
EntityPlayer fB ()V nextContainerCounter
EntityPlayer g viewingCredits
EntityPlayer n ()V broadcastCarriedItem
EntityPlayer r ()V triggerHealthUpdate
EntityPlayer u ()LWorldServer; getWorldServer
EntityPlayer x ()LEnumChatVisibility; getChatFlags
EntityPlayer x_ ()V playerTick
EntityPlayer z ()V resetIdleTimer
EntityPose a STANDING
EntityPose b FALL_FLYING
EntityPose c SLEEPING
EntityPose d SWIMMING
EntityPose e SPIN_ATTACK
EntityPose f CROUCHING
EntityPose g DYING
EntityPositionTypes$Surface a ON_GROUND
EntityPositionTypes$Surface b IN_WATER
EntityPositionTypes$Surface c NO_RESTRICTIONS
EntityPositionTypes$Surface d IN_LAVA
EntityPotion m ()V splash
EntityPotion n ()Z isLingering
EntityProjectileThrowable b (LItemStack;)V setItem
EntityProjectileThrowable h ()LItem; getDefaultItem
EntityProjectileThrowable i ()LItemStack; getItem
EntityPufferFish b (I)V setPuffState
EntityPufferFish fo ()I getPuffState
EntityRabbit fm ()LSoundEffect; getSoundJump
EntityRabbit fn ()I getRabbitType
EntityRabbit u (I)V setRabbitType
EntityRabbit$PathfinderGoalEatCarrots g entity
EntityRaider bn canJoinRaid
EntityRaider fz ()Z isCanJoinRaid
EntityRaider x (Z)V setCanJoinRaid
EntitySelector b (LCommandListenerWrapper;)Ljava/util/List; getEntities
EntitySelector n checkPermissions
EntitySheep b (LEnumColor;)V setColor
EntitySheep fm ()Z isSheared
EntitySheep r ()LEnumColor; getColor
EntitySheep u (Z)V setSheared
EntityShulker d COLOR
EntityShulkerBullet b target
EntityShulkerBullet c dir
EntitySilverfish$PathfinderGoalSilverfishWakeOthers a silverfish
EntitySize a width
EntitySize b height
EntitySlime a (IZ)V setSize
EntitySlime fn ()LSoundEffect; getSoundSquish
EntitySlime fo ()LSoundEffect; getSoundJump
EntitySlime fp ()I getSize
EntitySnowman o ()Z hasPumpkin
EntitySnowman u (Z)V setHasPumpkin
EntitySpectralArrow f duration
EntityStrider br saddleStorage
EntityStrider o ()Z isShivering
EntityStrider u (Z)V setShivering
EntityTNTPrimed a (I)V setFuseTicks
EntityTNTPrimed b FUSE_TICKS
EntityTNTPrimed c source
EntityTNTPrimed g ()LEntityLiving; getSource
EntityTNTPrimed i ()V explode
EntityTameableAnimal C_ ()Ljava/util/UUID; getOwnerUUID
EntityTameableAnimal b (Ljava/util/UUID;)V setOwnerUUID
EntityTameableAnimal bo willSit
EntityTameableAnimal f (LEntityHuman;)V tame
EntityTameableAnimal fm ()Z isSitting
EntityTameableAnimal fn ()LEntityLiving; getOwner
EntityTameableAnimal fo ()Z isWillSit
EntityTameableAnimal o ()Z isTamed
EntityTameableAnimal v (Z)V setTamed
EntityTameableAnimal w (Z)V setSitting
EntityTameableAnimal x (Z)V setWillSit
EntityThrownTrident af trident
EntityTippedArrow a (LMobEffect;)V addEffect
EntityTippedArrow ae effects
EntityTippedArrow af hasColor
EntityTippedArrow c (I)V setColor
EntityTippedArrow f COLOR
EntityTippedArrow g potionRegistry
EntityTippedArrow u ()I getColor
EntityTrackerEntry a (LPacket;)V broadcastIncludingSelf
EntityTrackerEntry c tracker
EntityTrackerEntry g xLoc
EntityTrackerEntry h yLoc
EntityTrackerEntry i zLoc
EntityTrackerEntry j yRot
EntityTrackerEntry k xRot
EntityTrackerEntry l headYaw
EntityTrackerEntry n tickCounter
EntityTropicalFish fv ()I getVariant
EntityTropicalFish w (I)V setVariant
EntityTropicalFish$Variant a KOB
EntityTropicalFish$Variant b SUNSTREAK
EntityTropicalFish$Variant c SNOOPER
EntityTropicalFish$Variant d DASHER
EntityTropicalFish$Variant e BRINELY
EntityTropicalFish$Variant f SPOTTY
EntityTropicalFish$Variant g FLOPPER
EntityTropicalFish$Variant h STRIPEY
EntityTropicalFish$Variant i GLITTER
EntityTropicalFish$Variant j BLOCKFISH
EntityTropicalFish$Variant k BETTY
EntityTropicalFish$Variant l CLAYFISH
EntityTurtle fn ()LBlockPosition; getHomePos
EntityTurtle fo ()LBlockPosition; getTravelPos
EntityTurtle g (LBlockPosition;)V setHomePos
EntityTurtle h (LBlockPosition;)V setTravelPos
EntityTurtle o ()Z hasEgg
EntityTurtle u (Z)V setHasEgg
EntityTypes A EYE_OF_ENDER
EntityTypes B FALLING_BLOCK
EntityTypes C FIREWORK_ROCKET
EntityTypes D FOX
EntityTypes E GHAST
EntityTypes F GIANT
EntityTypes I GUARDIAN
EntityTypes J HOGLIN
EntityTypes K HORSE
EntityTypes L HUSK
EntityTypes M ILLUSIONER
EntityTypes N IRON_GOLEM
EntityTypes O ITEM
EntityTypes P ITEM_FRAME
EntityTypes Q FIREBALL
EntityTypes R LEASH_KNOT
EntityTypes S LIGHTNING_BOLT
EntityTypes T LLAMA
EntityTypes U LLAMA_SPIT
EntityTypes V MAGMA_CUBE
EntityTypes W MINECART
EntityTypes X CHEST_MINECART
EntityTypes Y COMMAND_BLOCK_MINECART
EntityTypes Z FURNACE_MINECART
EntityTypes a (LEntityTypes;)LMinecraftKey; getName
EntityTypes a (LWorldServer;LItemStack;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes a (LWorldServer;LNBTTagCompound;LIChatBaseComponent;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes a AREA_EFFECT_CLOUD
EntityTypes aA SLIME
EntityTypes aB SMALL_FIREBALL
EntityTypes aC SNOW_GOLEM
EntityTypes aD SNOWBALL
EntityTypes aE SPECTRAL_ARROW
EntityTypes aF SPIDER
EntityTypes aG SQUID
EntityTypes aH STRAY
EntityTypes aI STRIDER
EntityTypes aJ EGG
EntityTypes aK ENDER_PEARL
EntityTypes aL EXPERIENCE_BOTTLE
EntityTypes aM POTION
EntityTypes aN TRIDENT
EntityTypes aO TRADER_LLAMA
EntityTypes aP TROPICAL_FISH
EntityTypes aQ TURTLE
EntityTypes aR VEX
EntityTypes aS VILLAGER
EntityTypes aT VINDICATOR
EntityTypes aU WANDERING_TRADER
EntityTypes aV WITCH
EntityTypes aW WITHER
EntityTypes aX WITHER_SKELETON
EntityTypes aY WITHER_SKULL
EntityTypes aZ WOLF
EntityTypes aa HOPPER_MINECART
EntityTypes ab SPAWNER_MINECART
EntityTypes ac TNT_MINECART
EntityTypes ad MULE
EntityTypes ae MOOSHROOM
EntityTypes af OCELOT
EntityTypes ag PAINTING
EntityTypes ah PANDA
EntityTypes ai PARROT
EntityTypes aj PHANTOM
EntityTypes ak PIG
EntityTypes al PIGLIN
EntityTypes am PIGLIN_BRUTE
EntityTypes an PILLAGER
EntityTypes ao POLAR_BEAR
EntityTypes ap TNT
EntityTypes aq PUFFERFISH
EntityTypes ar RABBIT
EntityTypes as RAVAGER
EntityTypes at SALMON
EntityTypes au SHEEP
EntityTypes av SHULKER
EntityTypes aw SHULKER_BULLET
EntityTypes ax SILVERFISH
EntityTypes ay SKELETON
EntityTypes az SKELETON_HORSE
EntityTypes b (LWorldServer;LNBTTagCompound;LIChatBaseComponent;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; createCreature
EntityTypes b ARMOR_STAND
EntityTypes ba ZOGLIN
EntityTypes bb ZOMBIE
EntityTypes bc ZOMBIE_HORSE
EntityTypes bd ZOMBIE_VILLAGER
EntityTypes be ZOMBIFIED_PIGLIN
EntityTypes bf PLAYER
EntityTypes bg FISHING_BOBBER
EntityTypes c ARROW
EntityTypes e BAT
EntityTypes f BEE
EntityTypes g BLAZE
EntityTypes h BOAT
EntityTypes i CAT
EntityTypes j CAVE_SPIDER
EntityTypes k CHICKEN
EntityTypes l COD
EntityTypes m COW
EntityTypes n ()I getChunkRange
EntityTypes n CREEPER
EntityTypes o ()I getUpdateInterval
EntityTypes o DOLPHIN
EntityTypes p ()Z isDeltaTracking
EntityTypes p DONKEY
EntityTypes q DRAGON_FIREBALL
EntityTypes r DROWNED
EntityTypes s ELDER_GUARDIAN
EntityTypes t END_CRYSTAL
EntityTypes u ENDER_DRAGON
EntityTypes v ENDERMAN
EntityTypes w ENDERMITE
EntityTypes x EVOKER
EntityTypes y EVOKER_FANGS
EntityTypes z EXPERIENCE_ORB
EntityTypes$Builder a (I)LEntityTypes$Builder; trackingRange
EntityTypes$Builder b (I)LEntityTypes$Builder; updateInterval
EntityVex fm ()Z isCharging
EntityVex u (Z)V setCharging
EntityVillager a (LVillagerData;)V setVillagerData
EntityVillager fI ()Z canPlant
EntityVillager fU ()V populateTrades
EntityVillager v (I)V setExperience
EntityVillagerAbstract bm trades
EntityVillagerAbstract bo tradingPlayer
EntityVillagerAbstract bp inventory
EntityVillagerAbstract ft ()LInventorySubcontainer; getInventory
EntityWither a (II)V setHeadTarget
EntityWither bv bossBattle
EntityWither m ()V beginSpawnSequence
EntityWither r ()I getInvul
EntityWither t (I)V setInvul
EntityWither u (I)I getHeadTarget
EntityWitherSkull a (Z)V setCharged
EntityWitherSkull k ()Z isCharged
EntityWolf a (LEnumColor;)V setCollarColor
EntityWolf fx ()LEnumColor; getCollarColor
EntityZombie a (I)V startDrownedConversion
EntityZombie a (LDamageSource;F)Z damageEntity
EntityZombie a (Z)V setBaby
EntityZombie bn DROWN_CONVERTING
EntityZombie bs drownedConversionTime
EntityZombie ft ()Z isDrownConverting
EntityZombie r ()LSoundEffect; getSoundStep
EntityZombieVillager a (LVillagerData;)V setVillagerData
EntityZombieVillager a (Ljava/util/UUID;I)V startConversion
EntityZombieVillager b CONVERTING
EntityZombieVillager bm conversionPlayer
EntityZombieVillager c (LNBTTagCompound;)V setOffers
EntityZombieVillager d conversionTime
EntityZombieVillager fw ()Z isConverting
EntityZombieVillager fx ()LVillagerData; getVillagerData
EntityZombieVillager fz ()I getConversionProgress
EnumAnimation a NONE
EnumAnimation b EAT
EnumAnimation c DRINK
EnumAnimation d BLOCK
EnumAnimation e BOW
EnumAnimation f SPEAR
EnumAnimation g CROSSBOW
EnumArmorMaterial a LEATHER
EnumArmorMaterial b CHAIN
EnumArmorMaterial c IRON
EnumArmorMaterial d GOLD
EnumArmorMaterial e DIAMOND
EnumArmorMaterial f TURTLE
EnumArmorMaterial g NETHERITE
EnumAxisCycle a NONE
EnumAxisCycle b FORWARD
EnumAxisCycle c BACKWARD
EnumBannerPatternType A HALF_VERTICAL
EnumBannerPatternType B HALF_HORIZONTAL
EnumBannerPatternType C HALF_VERTICAL_MIRROR
EnumBannerPatternType D HALF_HORIZONTAL_MIRROR
EnumBannerPatternType E BORDER
EnumBannerPatternType F CURLY_BORDER
EnumBannerPatternType G GRADIENT
EnumBannerPatternType H GRADIENT_UP
EnumBannerPatternType I BRICKS
EnumBannerPatternType J GLOBE
EnumBannerPatternType K CREEPER
EnumBannerPatternType L SKULL
EnumBannerPatternType M FLOWER
EnumBannerPatternType N MOJANG
EnumBannerPatternType O PIGLIN
EnumBannerPatternType a BASE
EnumBannerPatternType b SQUARE_BOTTOM_LEFT
EnumBannerPatternType c SQUARE_BOTTOM_RIGHT
EnumBannerPatternType d SQUARE_TOP_LEFT
EnumBannerPatternType e SQUARE_TOP_RIGHT
EnumBannerPatternType f STRIPE_BOTTOM
EnumBannerPatternType g STRIPE_TOP
EnumBannerPatternType h STRIPE_LEFT
EnumBannerPatternType i STRIPE_RIGHT
EnumBannerPatternType j STRIPE_CENTER
EnumBannerPatternType k STRIPE_MIDDLE
EnumBannerPatternType l STRIPE_DOWNRIGHT
EnumBannerPatternType m STRIPE_DOWNLEFT
EnumBannerPatternType n STRIPE_SMALL
EnumBannerPatternType o CROSS
EnumBannerPatternType p STRAIGHT_CROSS
EnumBannerPatternType q TRIANGLE_BOTTOM
EnumBannerPatternType r TRIANGLE_TOP
EnumBannerPatternType s TRIANGLES_BOTTOM
EnumBannerPatternType t TRIANGLES_TOP
EnumBannerPatternType u DIAGONAL_LEFT
EnumBannerPatternType v DIAGONAL_RIGHT
EnumBannerPatternType w DIAGONAL_LEFT_MIRROR
EnumBannerPatternType x DIAGONAL_RIGHT_MIRROR
EnumBannerPatternType y CIRCLE_MIDDLE
EnumBannerPatternType z RHOMBUS_MIDDLE
EnumBlockMirror a NONE
EnumBlockMirror b LEFT_RIGHT
EnumBlockMirror c FRONT_BACK
EnumBlockRotation a NONE
EnumBlockRotation b CLOCKWISE_90
EnumBlockRotation c CLOCKWISE_180
EnumBlockRotation d COUNTERCLOCKWISE_90
EnumBlockSupport a FULL
EnumBlockSupport b CENTER
EnumBlockSupport c RIGID
EnumChatFormat a BLACK
EnumChatFormat b DARK_BLUE
EnumChatFormat c ()Z isFormat
EnumChatFormat c DARK_GREEN
EnumChatFormat d DARK_AQUA
EnumChatFormat e DARK_RED
EnumChatFormat f DARK_PURPLE
EnumChatFormat g GOLD
EnumChatFormat h GRAY
EnumChatFormat i DARK_GRAY
EnumChatFormat j BLUE
EnumChatFormat k GREEN
EnumChatFormat l AQUA
EnumChatFormat m RED
EnumChatFormat n LIGHT_PURPLE
EnumChatFormat o YELLOW
EnumChatFormat p WHITE
EnumChatFormat q OBFUSCATED
EnumChatFormat r BOLD
EnumChatFormat s STRIKETHROUGH
EnumChatFormat t UNDERLINE
EnumChatFormat u ITALIC
EnumChatFormat v RESET
EnumChatFormat z character
EnumChatVisibility a FULL
EnumChatVisibility b SYSTEM
EnumChatVisibility c HIDDEN
EnumColor a (I)LEnumColor; fromColorIndex
EnumColor a WHITE
EnumColor b ()I getColorIndex
EnumColor b ORANGE
EnumColor c MAGENTA
EnumColor d ()[F getColor
EnumColor d LIGHT_BLUE
EnumColor e YELLOW
EnumColor f ()I getFireworksColor
EnumColor f LIME
EnumColor g PINK
EnumColor h GRAY
EnumColor i LIGHT_GRAY
EnumColor j CYAN
EnumColor k PURPLE
EnumColor l BLUE
EnumColor m BROWN
EnumColor n GREEN
EnumColor o RED
EnumColor p BLACK
EnumCreatureType a MONSTER
EnumCreatureType b CREATURE
EnumCreatureType c AMBIENT
EnumCreatureType d WATER_CREATURE
EnumCreatureType e WATER_AMBIENT
EnumCreatureType f MISC
EnumDifficulty a (I)LEnumDifficulty; getById
EnumDifficulty a PEACEFUL
EnumDifficulty b EASY
EnumDifficulty c NORMAL
EnumDifficulty d HARD
EnumDirection a (D)LEnumDirection; fromAngle
EnumDirection a (I)LEnumDirection; fromType1
EnumDirection a DOWN
EnumDirection b (I)LEnumDirection; fromType2
EnumDirection b UP
EnumDirection c NORTH
EnumDirection d ()I get2DRotationValue
EnumDirection d SOUTH
EnumDirection e WEST
EnumDirection f ()LEnumDirection; opposite
EnumDirection f EAST
EnumDirection i ()I getAdjacentX
EnumDirection j ()I getAdjacentY
EnumDirection k ()I getAdjacentZ
EnumDirection$EnumAxis a X
EnumDirection$EnumAxis b Y
EnumDirection$EnumAxis c Z
EnumDirection$EnumAxisDirection a POSITIVE
EnumDirection$EnumAxisDirection b NEGATIVE
EnumDirection$EnumDirectionLimit a HORIZONTAL
EnumDirection$EnumDirectionLimit b VERTICAL
EnumDirection8 a NORTH
EnumDirection8 b NORTH_EAST
EnumDirection8 c EAST
EnumDirection8 d SOUTH_EAST
EnumDirection8 e SOUTH
EnumDirection8 f SOUTH_WEST
EnumDirection8 g WEST
EnumDirection8 h NORTH_WEST
EnumDragonRespawn a START
EnumDragonRespawn b PREPARING_TO_SUMMON_PILLARS
EnumDragonRespawn c SUMMONING_PILLARS
EnumDragonRespawn d SUMMONING_DRAGON
EnumDragonRespawn e END
EnumGamemode a ()I getId
EnumGamemode a (I)LEnumGamemode; getById
EnumGamemode a SURVIVAL
EnumGamemode b CREATIVE
EnumGamemode c ADVENTURE
EnumGamemode d SPECTATOR
EnumGamemode f ()Z isCreative
EnumHand a MAIN_HAND
EnumHand b OFF_HAND
EnumInteractionResult a SUCCESS
EnumInteractionResult b CONSUME
EnumInteractionResult c PASS
EnumInteractionResult d FAIL
EnumItemRarity a COMMON
EnumItemRarity b UNCOMMON
EnumItemRarity c RARE
EnumItemRarity d EPIC
EnumItemSlot a (Ljava/lang/String;)LEnumItemSlot; fromName
EnumItemSlot a MAINHAND
EnumItemSlot b OFFHAND
EnumItemSlot c ()I getSlotFlag
EnumItemSlot c FEET
EnumItemSlot d ()Ljava/lang/String; getSlotName
EnumItemSlot d LEGS
EnumItemSlot e CHEST
EnumItemSlot f HEAD
EnumItemSlot$Function a HAND
EnumItemSlot$Function b ARMOR
EnumMainHand a LEFT
EnumMainHand b RIGHT
EnumMobSpawn a NATURAL
EnumMobSpawn b CHUNK_GENERATION
EnumMobSpawn c SPAWNER
EnumMobSpawn d STRUCTURE
EnumMobSpawn e BREEDING
EnumMobSpawn f MOB_SUMMONED
EnumMobSpawn g JOCKEY
EnumMobSpawn h EVENT
EnumMobSpawn i CONVERSION
EnumMobSpawn j REINFORCEMENT
EnumMobSpawn k TRIGGERED
EnumMobSpawn l BUCKET
EnumMobSpawn m SPAWN_EGG
EnumMobSpawn n COMMAND
EnumMobSpawn o DISPENSER
EnumMobSpawn p PATROL
EnumMonsterType a UNDEFINED
EnumMonsterType b UNDEAD
EnumMonsterType c ARTHROPOD
EnumMonsterType d ILLAGER
EnumMonsterType e WATER_MOB
EnumMoveType a SELF
EnumMoveType b PLAYER
EnumMoveType c PISTON
EnumMoveType d SHULKER_BOX
EnumMoveType e SHULKER
EnumPistonReaction a NORMAL
EnumPistonReaction b DESTROY
EnumPistonReaction c BLOCK
EnumPistonReaction d IGNORE
EnumPistonReaction e PUSH_ONLY
EnumProtocol a HANDSHAKING
EnumProtocol b PLAY
EnumProtocol c STATUS
EnumProtocol d LOGIN
EnumProtocolDirection a SERVERBOUND
EnumProtocolDirection b CLIENTBOUND
EnumRenderType a INVISIBLE
EnumRenderType b ENTITYBLOCK_ANIMATED
EnumRenderType c MODEL
EnumResourcePackType a CLIENT_RESOURCES
EnumResourcePackType b SERVER_DATA
EnumResourcePackVersion a TOO_OLD
EnumResourcePackVersion b TOO_NEW
EnumResourcePackVersion c COMPATIBLE
EnumSkyBlock a SKY
EnumSkyBlock b BLOCK
EnumToolMaterial a WOOD
EnumToolMaterial b STONE
EnumToolMaterial c IRON
EnumToolMaterial d DIAMOND
EnumToolMaterial e GOLD
EnumToolMaterial f NETHERITE
ExpirableListEntry b ()Ljava/lang/String; getSource
ExpirableListEntry c ()Ljava/util/Date; getExpires
ExpirableListEntry d ()Ljava/lang/String; getReason
Explosion d ()LEntityLiving; getSource
Explosion e ()V clearBlocks
Explosion e world
Explosion f ()Ljava/util/List; getBlocks
Explosion f posX
Explosion g posY
Explosion h posZ
Explosion i source
Explosion j size
Explosion m blocks
Explosion$Effect a NONE
Explosion$Effect b BREAK
Explosion$Effect c DESTROY
Fluid a ()LFluidType; getType
Fluid a (LIBlockAccess;LBlockPosition;)F getHeight
Fluid b ()Z isSource
Fluid c ()Z isEmpty
Fluid g ()LIBlockData; getBlockData
FluidTypeFlowing a FALLING
FluidTypeFlowing b LEVEL
FluidTypes a EMPTY
FluidTypes b FLOWING_WATER
FluidTypes c WATER
FluidTypes d FLOWING_LAVA
FluidTypes e LAVA
FoodInfo a ()I getNutrition
FoodInfo b ()F getSaturationModifier
FoodMetaData a ()I getFoodLevel
FoodMetaData a (IF)V eat
FoodMetaData a foodLevel
FoodMetaData b saturationLevel
FoodMetaData c exhaustionLevel
FoodMetaData d foodTickTimer
FoodMetaData e ()F getSaturationLevel
GameProfileBanList a (Lcom/mojang/authlib/GameProfile;)Z isBanned
GameProfileSerializer a (LNBTTagCompound;)Lcom/mojang/authlib/GameProfile; deserialize
GameProfileSerializer a (LNBTTagCompound;Lcom/mojang/authlib/GameProfile;)LNBTTagCompound; serialize
GameProfilerFiller a (Ljava/lang/String;)V enter
GameProfilerFiller b (Ljava/lang/String;)V exitEnter
GameProfilerFiller c ()V exit
GameRules A DROWNING_DAMAGE
GameRules B FALL_DAMAGE
GameRules C FIRE_DAMAGE
GameRules E DO_PATROL_SPAWNING
GameRules F DO_TRADER_SPAWNING
GameRules G FORGIVE_DEAD_PLAYERS
GameRules H UNIVERSAL_ANGER
GameRules a (LGameRules$GameRuleKey;)LGameRules$GameRuleValue; get
GameRules a DO_FIRE_TICK
GameRules b (LGameRules$GameRuleKey;)Z getBoolean
GameRules b MOB_GRIEFING
GameRules c (LGameRules$GameRuleKey;)I getInt
GameRules c KEEP_INVENTORY
GameRules d DO_MOB_SPAWNING
GameRules e DO_MOB_LOOT
GameRules f DO_TILE_DROPS
GameRules g DO_ENTITY_DROPS
GameRules h COMMAND_BLOCK_OUTPUT
GameRules i NATURAL_REGENERATION
GameRules j DO_DAYLIGHT_CYCLE
GameRules k LOG_ADMIN_COMMANDS
GameRules l SHOW_DEATH_MESSAGES
GameRules m RANDOM_TICK_SPEED
GameRules n SEND_COMMAND_FEEDBACK
GameRules o REDUCED_DEBUG_INFO
GameRules p SPECTATORS_GENERATE_CHUNKS
GameRules q SPAWN_RADIUS
GameRules r DISABLE_ELYTRA_MOVEMENT_CHECK
GameRules s MAX_ENTITY_CRAMMING
GameRules t DO_WEATHER_CYCLE
GameRules u DO_LIMITED_CRAFTING
GameRules v MAX_COMMAND_CHAIN_LENGTH
GameRules w ANNOUNCE_ADVANCEMENTS
GameRules x DISABLE_RAIDS
GameRules y DO_INSOMNIA
GameRules z DO_IMMEDIATE_RESPAWN
GameRules$GameRuleCategory a PLAYER
GameRules$GameRuleCategory b MOBS
GameRules$GameRuleCategory c SPAWNING
GameRules$GameRuleCategory d DROPS
GameRules$GameRuleCategory e UPDATES
GameRules$GameRuleCategory f CHAT
GameRules$GameRuleCategory g MISC
GameRules$GameRuleDefinition a ()LGameRules$GameRuleValue; getValue
GameRules$GameRuleValue a (Ljava/lang/String;)V setValue
GameRules$GameRuleValue a (Lnet/minecraft/server/MinecraftServer;)V onChange
GameRules$GameRuleValue b ()Ljava/lang/String; getValue
GameRules$GameRuleValue c ()I getIntValue
GenLayerCleaner a INSTANCE
GenLayerDeepOcean a INSTANCE
GenLayerDesert a INSTANCE
GenLayerIcePlains a INSTANCE
GenLayerIsland a INSTANCE
GenLayerJungle a INSTANCE
GenLayerMushroomIsland a INSTANCE
GenLayerMushroomShore a INSTANCE
GenLayerOcean a INSTANCE
GenLayerOceanEdge a INSTANCE
GenLayerPlains a INSTANCE
GenLayerRegionHills a INSTANCE
GenLayerRiver a INSTANCE
GenLayerRiverMix a INSTANCE
GenLayerSmooth a INSTANCE
GenLayerSpecial$Special1 a INSTANCE
GenLayerSpecial$Special2 a INSTANCE
GenLayerSpecial$Special3 a INSTANCE
GenLayerTopSoil a INSTANCE
GenLayerZoom a NORMAL
GenLayerZoom b FUZZY
GenLayerZoomVoronoi a INSTANCE
GenLayerZoomVoronoiFixed a INSTANCE
GenLayerZoomerBiome a INSTANCE
GenLayers$Type a NONE
GenLayers$Type b TAIGA
GenLayers$Type c EXTREME_HILLS
GenLayers$Type d JUNGLE
GenLayers$Type e MESA
GenLayers$Type f BADLANDS_PLATEAU
GenLayers$Type g PLAINS
GenLayers$Type h SAVANNA
GenLayers$Type i ICY
GenLayers$Type j BEACH
GenLayers$Type k FOREST
GenLayers$Type l OCEAN
GenLayers$Type m DESERT
GenLayers$Type n RIVER
GenLayers$Type o SWAMP
GenLayers$Type p MUSHROOM
GeneratorAccess L ()LIChunkProvider; getChunkProvider
GeneratorAccess M ()LTickList; getFluidTickList
GeneratorAccess N ()LTickList; getBlockTickList
GeneratorAccess a (LBlockPosition;LBlock;)V update
GeneratorAccess a (LEntityHuman;LBlockPosition;LSoundEffect;LSoundCategory;FF)V playSound
GeneratorAccess a (LParticleParam;DDDDDD)V addParticle
GeneratorAccess af ()LEnumDifficulty; getDifficulty
GeneratorAccess c (ILBlockPosition;I)V triggerEffect
GeneratorAccess d (LBlockPosition;)LDifficultyDamageScaler; getDamageScaler
GeneratorAccess g ()LWorldData; getWorldData
GeneratorAccess i ()Ljava/util/Random; getRandom
GeneratorAccessSeed E ()J getSeed
GeneratorSettings a ()J getSeed
GeneratorSettings b ()Z shouldGenerateMapFeatures
GeneratorSettings c seed
GeneratorSettings e ()LChunkGenerator; getChunkGenerator
GeneratorSettings g ()Z isDebugWorld
GeneratorSettings h ()Z isFlatWorld
GenericAttributes a MAX_HEALTH
GenericAttributes b FOLLOW_RANGE
GenericAttributes c KNOCKBACK_RESISTANCE
GenericAttributes d MOVEMENT_SPEED
GenericAttributes e FLYING_SPEED
GenericAttributes f ATTACK_DAMAGE
GenericAttributes g ATTACK_KNOCKBACK
GenericAttributes h ATTACK_SPEED
GenericAttributes i ARMOR
GenericAttributes j ARMOR_TOUGHNESS
GenericAttributes k LUCK
GenericAttributes l SPAWN_REINFORCEMENTS
GenericAttributes m JUMP_STRENGTH
GlobalPos a ()LResourceKey; getDimensionManager
GlobalPos a (LResourceKey;LBlockPosition;)LGlobalPos; create
GlobalPos b ()LBlockPosition; getBlockPosition
GlobalPos b dimensionManager
GlobalPos c blockPosition
HeightMap$Type a WORLD_SURFACE_WG
HeightMap$Type b WORLD_SURFACE
HeightMap$Type c OCEAN_FLOOR_WG
HeightMap$Type d OCEAN_FLOOR
HeightMap$Type e MOTION_BLOCKING
HeightMap$Type f MOTION_BLOCKING_NO_LEAVES
HeightMap$Use a WORLDGEN
HeightMap$Use b LIVE_WORLD
HeightMap$Use c CLIENT
HorseColor a WHITE
HorseColor b CREAMY
HorseColor c CHESTNUT
HorseColor d BROWN
HorseColor e BLACK
HorseColor f GRAY
HorseColor g DARKBROWN
HorseStyle a NONE
HorseStyle b WHITE
HorseStyle c WHITE_FIELD
HorseStyle d WHITE_DOTS
HorseStyle e BLACK_DOTS
IAsyncTaskHandler a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; executeFuture
IAsyncTaskHandler at ()Z isNotMainThread
IAsyncTaskHandler au ()Ljava/lang/Thread; getThread
IAsyncTaskHandler bh ()Z isMainThread
IAsyncTaskHandler bl ()V executeAll
IAsyncTaskHandler c (Ljava/lang/Runnable;)V executeTask
IAsyncTaskHandler c (Ljava/util/function/BooleanSupplier;)V awaitTasks
IAsyncTaskHandler d (Ljava/lang/Runnable;)Z canExecute
IAsyncTaskHandler e (Ljava/lang/Runnable;)Ljava/lang/Runnable; postToMainThread
IAsyncTaskHandler g (Ljava/lang/Runnable;)V executeSync
IAsyncTaskHandler y ()Z executeNext
IAsyncTaskHandlerReentrant b depth
IAsyncTaskHandlerReentrant bn ()Z isEntered
IBlockAccess a (LRayTrace;)LMovingObjectPositionBlock; rayTrace
IBlockAccess a (LVec3D;LVec3D;LBlockPosition;LVoxelShape;LIBlockData;)LMovingObjectPositionBlock; rayTrace
IBlockAccess b (LBlockPosition;)LFluid; getFluid
IBlockAccess c (LBlockPosition;)LTileEntity; getTileEntity
IBlockAccess d_ (LBlockPosition;)LIBlockData; getType
IBlockDataHolder a (LIBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; set
IBlockDataHolder a STATE_TO_VALUE
IBlockDataHolder c (LIBlockState;)Ljava/lang/Comparable; get
IBlockDataHolder t ()Lcom/google/common/collect/ImmutableMap; getStateMap
IBlockLightAccess a (LEnumSkyBlock;LBlockPosition;)I getBrightness
IBlockLightAccess b (LBlockPosition;I)I getLightLevel
IBlockState a ()Ljava/util/Collection; getValues
IBlockState f ()Ljava/lang/String; getName
IBlockState g ()Ljava/lang/Class; getType
IChatBaseComponent a ()Ljava/lang/String; getText
IChatBaseComponent b ()Ljava/util/List; getSiblings
IChatBaseComponent c ()LChatModifier; getChatModifier
IChatBaseComponent e ()LIChatMutableComponent; mutableCopy
IChatMutableComponent a (LChatModifier;)LIChatMutableComponent; setChatModifier
IChatMutableComponent a (LIChatBaseComponent;)LIChatMutableComponent; addSibling
IChatMutableComponent a (Ljava/util/function/UnaryOperator;)LIChatMutableComponent; format
IChunkAccess a (J)V setInhabitedTime
IChunkAccess a (LBlockPosition;LIBlockData;Z)LIBlockData; setType
IChunkAccess a (LHeightMap$Type;II)I getHighestBlock
IChunkAccess a (Z)V setNeedsSaving
IChunkAccess d ()[LChunkSection; getSections
IChunkAccess d (LBlockPosition;)V removeTileEntity
IChunkAccess f ()LChunkCoordIntPair; getPos
IChunkAccess h ()LBiomeStorage; getBiomeIndex
IChunkAccess i ()Z isNeedsSaving
IChunkAccess j ()LChunkStatus; getChunkStatus
IChunkAccess r ()J getInhabitedTime
IChunkLoader a (LResourceKey;Ljava/util/function/Supplier;LNBTTagCompound;)LNBTTagCompound; getChunkData
IChunkLoader e (LChunkCoordIntPair;)LNBTTagCompound; read
IChunkProvider a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IChunkProvider a (IIZ)LChunk; getChunkAt
IChunkProvider e ()Ljava/lang/String; getName
IChunkProvider l ()LLightEngine; getLightEngine
ICollisionAccess a_ (LEntity;LAxisAlignedBB;)Z getCubes
ICollisionAccess e ()LWorldBorder; getWorldBorder
ICollisionAccess g (LEntity;)Z getCubes
ICommandListener Q_ ()Z shouldBroadcastCommands
ICommandListener a ()Z shouldSendSuccess
ICommandListener a (LIChatBaseComponent;Ljava/util/UUID;)V sendMessage
ICommandListener a_ DUMMY
ICommandListener b ()Z shouldSendFailure
ICompletionProvider c (I)Z hasPermission
IContainerProperties a (I)I getProperty
IContainerProperties a (II)V setProperty
ICrafting a (LContainer;II)V setContainerData
ICrossbow G ()LEntityLiving; getGoalTarget
IDispenseBehavior a NONE
IDragonController i ()LDragonControllerPhase; getControllerPhase
IEntityAccess a (DDDD)Z isPlayerNearby
IEntityAccess a (LEntity;D)LEntityHuman; findNearbyPlayer
IEntityAccess a (LEntity;LAxisAlignedBB;)Ljava/util/List; getEntities
IEntityAccess a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
IEntityAccess z ()Ljava/util/List; getPlayers
IEntityAngerable G ()LEntityLiving; getGoalTarget
IEntityAngerable G_ ()I getAnger
IEntityAngerable H_ ()Ljava/util/UUID; getAngerTarget
IEntityAngerable I_ ()V anger
IEntityAngerable J_ ()Z isAngry
IEntityAngerable L_ ()V pacify
IEntityAngerable a (LEntityLiving;)V setLastDamager
IEntityAngerable a (Ljava/util/UUID;)V setAngerTarget
IEntityAngerable a_ (I)V setAnger
IEntityAngerable h (LEntityLiving;)V setGoalTarget
IFluidContainer a (LGeneratorAccess;LBlockPosition;LIBlockData;LFluid;)Z place
IFluidContainer a (LIBlockAccess;LBlockPosition;LIBlockData;LFluidType;)Z canPlace
IInventory W_ ()I getMaxStackSize
IInventory Y_ ()V update
IInventory a (I)LItemStack; getItem
IInventory a (II)LItemStack; splitStack
IInventory a (ILItemStack;)V setItem
IInventory aa_ ()I getSize
IInventory b (I)LItemStack; splitWithoutUpdate
IInventory b_ (LEntityHuman;)V closeContainer
IInventory c ()Z isEmpty
IInventory c_ (LEntityHuman;)V startOpen
ILightAccess m ()LIBlockAccess; getWorld
IMaterial k ()LItem; getItem
IMerchant a (LEntityHuman;LIChatBaseComponent;I)V openTrade
IMerchant f (LEntityHuman;)V setTradingPlayer
IMerchant fm ()LEntityHuman; getTrader
IMerchant fo ()LMerchantRecipeList; getOffers
IMerchant fp ()Z isRegularVillager
IMerchant fq ()LSoundEffect; getTradeSound
IMerchant fu ()LWorld; getWorld
IMerchant r ()I getExperience
IMerchant u (I)V setForcedExperience
IMinecraftServer H ()Ljava/lang/String; getVersion
IMinecraftServer I ()I getPlayerCount
IMinecraftServer J ()I getMaxPlayers
IMinecraftServer K ()[Ljava/lang/String; getPlayers
IMinecraftServer a (Ljava/lang/String;)Ljava/lang/String; executeRemoteCommand
IMinecraftServer g_ ()LDedicatedServerProperties; getDedicatedServerProperties
IMinecraftServer j_ ()Ljava/lang/String; getPlugins
IMinecraftServer k_ ()Ljava/lang/String; getWorld
INamable a ()Ljava/lang/String; getName
INamableTileEntity S ()LIChatBaseComponent; getDisplayName
INamableTileEntity T ()Z hasCustomName
INamableTileEntity U ()LIChatBaseComponent; getCustomName
INamableTileEntity d ()LIChatBaseComponent; getScoreboardDisplayName
IPosition a ()D getX
IPosition b ()D getY
IPosition c ()D getZ
IProjectile b (LEntity;)V setShooter
IProjectile b shooter
IProjectile c (DDDFF)V shoot
IProjectile v ()LEntity; getShooter
IRecipe ah_ ()Z isComplex
IRecipe ai_ ()LRecipeSerializer; getRecipeSerializer
IRecipe c ()LItemStack; getResult
IRecipe f ()LMinecraftKey; getKey
IRegistry T SOUND_EVENT
IRegistry U FLUID
IRegistry V MOB_EFFECT
IRegistry W BLOCK
IRegistry X ENCHANTMENT
IRegistry Y ENTITY_TYPE
IRegistry Z ITEM
IRegistry a (LMinecraftKey;)Ljava/lang/Object; get
IRegistry aK SURFACE_BUILDER
IRegistry aM CARVER
IRegistry aO FEATURE
IRegistry aQ STRUCTURE_FEATURE
IRegistry aS STRUCTURE_PIECE
IRegistry aU DECORATOR
IRegistry aa POTION
IRegistry ab PARTICLE_TYPE
IRegistry ac BLOCK_ENTITY_TYPE
IRegistry ad MOTIVE
IRegistry ae CUSTOM_STAT
IRegistry af CHUNK_STATUS
IRegistry ag RULE_TEST
IRegistry ah POS_RULE_TEST
IRegistry ai MENU
IRegistry aj RECIPE_TYPE
IRegistry ak RECIPE_SERIALIZER
IRegistry al ATTRIBUTE
IRegistry an STATS
IRegistry ao VILLAGER_TYPE
IRegistry ap VILLAGER_PROFESSION
IRegistry aq POINT_OF_INTEREST_TYPE
IRegistry ar MEMORY_MODULE_TYPE
IRegistry as SENSOR_TYPE
IRegistry at SCHEDULE
IRegistry au ACTIVITY
IRegistry b (LMinecraftKey;)Ljava/util/Optional; getOptional
IRegistry b (Ljava/lang/Object;)LMinecraftKey; getKey
IRegistry bf BLOCK_STATE_PROVIDER_TYPE
IRegistry bg BLOCK_PLACER_TYPE
IRegistry bh FOLIAGE_PLACER_TYPE
IRegistry bi TRUNK_PLACER_TYPE
IRegistry bj TREE_DECORATOR_TYPE
IRegistry bk FEATURE_SIZE_TYPE
IRegistry bl BIOME_SOURCE
IRegistry bm CHUNK_GENERATOR
IRegistry bn STRUCTURE_PROCESSOR
IRegistry bo STRUCTURE_POOL_ELEMENT
IRegistry c ()Ljava/util/Set; keySet
IResourceManager$Empty a INSTANCE
ISaddleable N_ ()Z hasSaddle
ISaddleable a (LSoundCategory;)V saddle
ISaddleable c ()Z canSaddle
IScoreboardCriteria a criteria
IScoreboardCriteria b DUMMY
IScoreboardCriteria c ()Ljava/lang/String; getName
IScoreboardCriteria c TRIGGER
IScoreboardCriteria d ()Z isReadOnly
IScoreboardCriteria d DEATH_COUNT
IScoreboardCriteria e PLAYER_KILL_COUNT
IScoreboardCriteria f TOTAL_KILL_COUNT
IScoreboardCriteria g HEALTH
IScoreboardCriteria h FOOD
IScoreboardCriteria i AIR
IScoreboardCriteria j ARMOR
IScoreboardCriteria k XP
IScoreboardCriteria l LEVEL
IScoreboardCriteria$EnumScoreboardHealthDisplay a INTEGER
IScoreboardCriteria$EnumScoreboardHealthDisplay b HEARTS
IShearable M_ ()Z canShear
IShearable a (LSoundCategory;)V shear
ISourceBlock d ()LBlockPosition; getBlockPosition
ISourceBlock e ()LIBlockData; getBlockData
ISourceBlock f ()LTileEntity; getTileEntity
ISourceBlock g ()LWorldServer; getWorld
ITagRegistry a ()V bind
ITileInventory d ()LIChatBaseComponent; getScoreboardDisplayName
IWorldDataServer a (I)V setClearWeatherTime
IWorldDataServer a (J)V setTime
IWorldDataServer a (LEnumGamemode;)V setGameType
IWorldDataServer a (Z)V setThundering
IWorldDataServer b (J)V setDayTime
IWorldDataServer e (I)V setThunderDuration
IWorldDataServer f (I)V setWeatherDuration
IWorldDataServer g ()Ljava/lang/String; getName
IWorldDataServer h ()I getClearWeatherTime
IWorldDataServer j ()I getThunderDuration
IWorldDataServer l ()I getWeatherDuration
IWorldDataServer m ()LEnumGamemode; getGameType
IWorldInventory a (ILItemStack;LEnumDirection;)Z canPlaceItemThroughFace
IWorldInventory a (LEnumDirection;)[I getSlotsForFace
IWorldInventory b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
IWorldReader A (LBlockPosition;)I getLightLevel
IWorldReader B (LBlockPosition;)Z isLoaded
IWorldReader a (II)LIChunkAccess; getChunkAt
IWorldReader a (IIIIII)Z isAreaLoaded
IWorldReader a (IILChunkStatus;)LIChunkAccess; getChunkAt
IWorldReader a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IWorldReader a (LBlockPosition;LBlockPosition;)Z areChunksLoadedBetween
IWorldReader a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
IWorldReader b (II)Z isChunkLoaded
IWorldReader d (LAxisAlignedBB;)Z containsLiquid
IWorldReader k ()LDimensionManager; getDimensionManager
IWorldReader u (LBlockPosition;)LBiomeBase; getBiome
IWorldReader v (LBlockPosition;)Z isEmpty
IWorldReader v_ ()I getSeaLevel
IWorldWriter a (LBlockPosition;LIBlockData;I)Z setTypeAndData
IWorldWriter b (LEntity;)Z addEntity
InteractionResultWrapper a (Ljava/lang/Object;)LInteractionResultWrapper; success
InteractionResultWrapper b (Ljava/lang/Object;)LInteractionResultWrapper; consume
InteractionResultWrapper c (Ljava/lang/Object;)LInteractionResultWrapper; pass
InteractionResultWrapper d (Ljava/lang/Object;)LInteractionResultWrapper; fail
InventoryClickType a PICKUP
InventoryClickType b QUICK_MOVE
InventoryClickType c SWAP
InventoryClickType d CLONE
InventoryClickType e THROW
InventoryClickType f QUICK_CRAFT
InventoryClickType g PICKUP_ALL
InventoryCraftResult a items
InventoryCrafting a items
InventoryCrafting d container
InventoryLargeChest a left
InventoryLargeChest b right
InventoryMerchant a merchant
InventoryMerchant b itemsInSlots
InventoryMerchant c recipe
InventoryMerchant d selectedIndex
InventoryMerchant g ()LMerchantRecipe; getRecipe
InventorySubcontainer Y_ ()V update
InventorySubcontainer b items
InventoryUtils a (LWorld;DDDLIInventory;)V dropInventory
InventoryUtils a (LWorld;DDDLItemStack;)V dropItem
InventoryUtils a (LWorld;LBlockPosition;LIInventory;)V dropInventory
InventoryUtils a (LWorld;LEntity;LIInventory;)V dropEntity
IpBanList a (Ljava/net/SocketAddress;)Z isBanned
IpBanList b (Ljava/net/SocketAddress;)LIpBanEntry; get
Item a ()Ljava/lang/String; getName
Item a (LBlock;)LItem; getItemOf
Item a (LItem;)I getId
Item a (LItemStack;LIBlockData;)F getDestroySpeed
Item ag_ ()LItemStack; createItemStack
Item b (I)LItem; getById
Item b (LIBlockData;)Z canDestroySpecialBlock
Item c maxStackSize
Item d durability
Item j craftingResult
Item k name
Item l ()I getMaxStackSize
Item l foodInfo
Item m ()I getMaxDurability
Item n ()Z usesDurability
Item r ()LItem; getCraftingRemainingItem
Item u ()Z isFood
Item v ()LFoodInfo; getFoodInfo
ItemActionContext a ()LBlockPosition; getClickPosition
ItemActionContext h ()Z isSneaking
ItemActionContext k ()LEnumDirection; getClickedFace
ItemActionContext l ()LVec3D; getPos
ItemActionContext n ()LItemStack; getItemStack
ItemActionContext o ()LEntityHuman; getEntity
ItemActionContext p ()LEnumHand; getHand
ItemActionContext q ()LWorld; getWorld
ItemBlock d ()Z isCheckCollisions
ItemBlock e ()LBlock; getBlock
ItemBlockWallable a wallBlock
ItemBucket a fluidType
ItemCooldown a (LItem;)Z hasCooldown
ItemCooldown a (LItem;I)V setCooldown
ItemCooldown a cooldowns
ItemCooldown b currentTick
ItemCooldown$Info c endTick
ItemFireworks$EffectType a SMALL_BALL
ItemFireworks$EffectType b LARGE_BALL
ItemFireworks$EffectType c STAR
ItemFireworks$EffectType d CREEPER
ItemFireworks$EffectType e BURST
ItemStack A ()Z canEnchant
ItemStack B ()Z hasEnchantments
ItemStack F ()I getRepairCost
ItemStack I ()I getCount
ItemStack N ()V checkEmpty
ItemStack a (I)LItemStack; cloneAndSubtract
ItemStack a (ILEntityLiving;Ljava/util/function/Consumer;)V damage
ItemStack a (ILjava/util/Random;LEntityPlayer;)Z isDamaged
ItemStack a (LEnchantment;I)V addEnchantment
ItemStack a (LItemActionContext;)LEnumInteractionResult; placeItem
ItemStack a (LItemStack;)Z doMaterialsMatch
ItemStack a (LItemStack;LItemStack;)Z equals
ItemStack b ()Z isEmpty
ItemStack b (I)V setDamage
ItemStack b (LIBlockData;)Z canDestroySpecialBlock
ItemStack b (LItemStack;LItemStack;)Z matches
ItemStack b (LNBTTagCompound;)LNBTTagCompound; save
ItemStack c ()LItem; getItem
ItemStack c (I)V setRepairCost
ItemStack c (LNBTTagCompound;)V setTag
ItemStack c (Ljava/lang/String;)V removeTag
ItemStack d ()I getMaxStackSize
ItemStack e ()Z isStackable
ItemStack e (I)V setCount
ItemStack f (I)V add
ItemStack f count
ItemStack g (I)V subtract
ItemStack h ()I getDamage
ItemStack h item
ItemStack i tag
ItemStack m ()LItemStack; cloneItemStack
ItemStack r ()Z hasTag
ItemStack s ()LNBTTagCompound; getTag
ItemStack t ()LNBTTagCompound; getOrCreateTag
ItemStack u ()LNBTTagList; getEnchantments
ItemStack v ()LIChatBaseComponent; getName
ItemStack x ()Z hasName
ItemStack$HideFlags a ENCHANTMENTS
ItemStack$HideFlags b MODIFIERS
ItemStack$HideFlags c UNBREAKABLE
ItemStack$HideFlags d CAN_DESTROY
ItemStack$HideFlags e CAN_PLACE
ItemStack$HideFlags f ADDITIONAL
ItemStack$HideFlags g DYE
ItemWorldMap a (LWorld;IIBZZ)LItemStack; createFilledMapView
ItemWorldMap a (LWorldServer;LItemStack;)V applySepiaFilter
Items a AIR
Items jq REDSTONE
Items kK TURTLE_HELMET
Items kL SCUTE
Items kM FLINT_AND_STEEL
Items kN APPLE
Items kO BOW
Items kP ARROW
Items kQ COAL
Items kR CHARCOAL
Items kS DIAMOND
Items kT IRON_INGOT
Items kV GOLD_INGOT
Items kW NETHERITE_INGOT
Items kX NETHERITE_SCRAP
Items kY WOODEN_SWORD
Items kZ WOODEN_SHOVEL
Items lA NETHERITE_AXE
Items lB NETHERITE_HOE
Items lC STICK
Items lD BOWL
Items lE MUSHROOM_STEW
Items lF STRING
Items lG FEATHER
Items lH GUNPOWDER
Items lI WHEAT_SEEDS
Items lJ WHEAT
Items lK BREAD
Items lL LEATHER_HELMET
Items lM LEATHER_CHESTPLATE
Items lN LEATHER_LEGGINGS
Items lO LEATHER_BOOTS
Items lP CHAINMAIL_HELMET
Items lQ CHAINMAIL_CHESTPLATE
Items lR CHAINMAIL_LEGGINGS
Items lS CHAINMAIL_BOOTS
Items lT IRON_HELMET
Items lU IRON_CHESTPLATE
Items lV IRON_LEGGINGS
Items lW IRON_BOOTS
Items lX DIAMOND_HELMET
Items lY DIAMOND_CHESTPLATE
Items lZ DIAMOND_LEGGINGS
Items la WOODEN_PICKAXE
Items lb WOODEN_AXE
Items lc WOODEN_HOE
Items ld STONE_SWORD
Items le STONE_SHOVEL
Items lf STONE_PICKAXE
Items lg STONE_AXE
Items lh STONE_HOE
Items li GOLDEN_SWORD
Items lj GOLDEN_SHOVEL
Items lk GOLDEN_PICKAXE
Items ll GOLDEN_AXE
Items lm GOLDEN_HOE
Items ln IRON_SWORD
Items lo IRON_SHOVEL
Items lp IRON_PICKAXE
Items lq IRON_AXE
Items lr IRON_HOE
Items ls DIAMOND_SWORD
Items lt DIAMOND_SHOVEL
Items lu DIAMOND_PICKAXE
Items lv DIAMOND_AXE
Items lw DIAMOND_HOE
Items lx NETHERITE_SWORD
Items ly NETHERITE_SHOVEL
Items lz NETHERITE_PICKAXE
Items mA MINECART
Items mB SADDLE
Items mC SNOWBALL
Items mD OAK_BOAT
Items mE LEATHER
Items mF MILK_BUCKET
Items mG PUFFERFISH_BUCKET
Items mH SALMON_BUCKET
Items mI COD_BUCKET
Items mJ TROPICAL_FISH_BUCKET
Items mL BRICK
Items mM CLAY_BALL
Items mO PAPER
Items mP BOOK
Items mQ SLIME_BALL
Items mR CHEST_MINECART
Items mS FURNACE_MINECART
Items mT EGG
Items mU COMPASS
Items mW FISHING_ROD
Items mX CLOCK
Items mY GLOWSTONE_DUST
Items mZ COD
Items ma DIAMOND_BOOTS
Items mb GOLDEN_HELMET
Items mc GOLDEN_CHESTPLATE
Items md GOLDEN_LEGGINGS
Items me GOLDEN_BOOTS
Items mf NETHERITE_HELMET
Items mg NETHERITE_CHESTPLATE
Items mh NETHERITE_LEGGINGS
Items mi NETHERITE_BOOTS
Items mj FLINT
Items mk PORKCHOP
Items ml COOKED_PORKCHOP
Items mm PAINTING
Items mn GOLDEN_APPLE
Items mo ENCHANTED_GOLDEN_APPLE
Items mp OAK_SIGN
Items mq SPRUCE_SIGN
Items mr BIRCH_SIGN
Items ms JUNGLE_SIGN
Items mt ACACIA_SIGN
Items mu DARK_OAK_SIGN
Items mv CRIMSON_SIGN
Items mw WARPED_SIGN
Items mx BUCKET
Items my WATER_BUCKET
Items mz LAVA_BUCKET
Items nA SUGAR
Items nC WHITE_BED
Items nD ORANGE_BED
Items nE MAGENTA_BED
Items nF LIGHT_BLUE_BED
Items nG YELLOW_BED
Items nH LIME_BED
Items nI PINK_BED
Items nJ GRAY_BED
Items nK LIGHT_GRAY_BED
Items nL CYAN_BED
Items nM PURPLE_BED
Items nN BLUE_BED
Items nO BROWN_BED
Items nP GREEN_BED
Items nQ RED_BED
Items nR BLACK_BED
Items nS COOKIE
Items nT FILLED_MAP
Items nU SHEARS
Items nV MELON_SLICE
Items nW DRIED_KELP
Items nX PUMPKIN_SEEDS
Items nY MELON_SEEDS
Items nZ BEEF
Items na SALMON
Items nb TROPICAL_FISH
Items nc PUFFERFISH
Items nd COOKED_COD
Items ne COOKED_SALMON
Items nf INK_SAC
Items ng COCOA_BEANS
Items nh LAPIS_LAZULI
Items ni WHITE_DYE
Items nj ORANGE_DYE
Items nk MAGENTA_DYE
Items nl LIGHT_BLUE_DYE
Items nm YELLOW_DYE
Items nn LIME_DYE
Items no PINK_DYE
Items np GRAY_DYE
Items nq LIGHT_GRAY_DYE
Items nr CYAN_DYE
Items ns PURPLE_DYE
Items nt BLUE_DYE
Items nu BROWN_DYE
Items nv GREEN_DYE
Items nw RED_DYE
Items nx BLACK_DYE
Items ny BONE_MEAL
Items nz BONE
Items oA COD_SPAWN_EGG
Items oB COW_SPAWN_EGG
Items oC CREEPER_SPAWN_EGG
Items oD DOLPHIN_SPAWN_EGG
Items oE DONKEY_SPAWN_EGG
Items oF DROWNED_SPAWN_EGG
Items oG ELDER_GUARDIAN_SPAWN_EGG
Items oH ENDERMAN_SPAWN_EGG
Items oI ENDERMITE_SPAWN_EGG
Items oJ EVOKER_SPAWN_EGG
Items oK FOX_SPAWN_EGG
Items oL GHAST_SPAWN_EGG
Items oN GUARDIAN_SPAWN_EGG
Items oO HOGLIN_SPAWN_EGG
Items oP HORSE_SPAWN_EGG
Items oQ HUSK_SPAWN_EGG
Items oR LLAMA_SPAWN_EGG
Items oS MAGMA_CUBE_SPAWN_EGG
Items oT MOOSHROOM_SPAWN_EGG
Items oU MULE_SPAWN_EGG
Items oV OCELOT_SPAWN_EGG
Items oW PANDA_SPAWN_EGG
Items oX PARROT_SPAWN_EGG
Items oY PHANTOM_SPAWN_EGG
Items oZ PIG_SPAWN_EGG
Items oa COOKED_BEEF
Items ob CHICKEN
Items oc COOKED_CHICKEN
Items od ROTTEN_FLESH
Items oe ENDER_PEARL
Items of BLAZE_ROD
Items og GHAST_TEAR
Items oh GOLD_NUGGET
Items oi NETHER_WART
Items oj POTION
Items ok GLASS_BOTTLE
Items ol SPIDER_EYE
Items om FERMENTED_SPIDER_EYE
Items on BLAZE_POWDER
Items oo MAGMA_CREAM
Items or ENDER_EYE
Items os GLISTERING_MELON_SLICE
Items ou BAT_SPAWN_EGG
Items ov BEE_SPAWN_EGG
Items ow BLAZE_SPAWN_EGG
Items ox CAT_SPAWN_EGG
Items oy CAVE_SPIDER_SPAWN_EGG
Items oz CHICKEN_SPAWN_EGG
Items pA WITHER_SKELETON_SPAWN_EGG
Items pB WOLF_SPAWN_EGG
Items pC ZOGLIN_SPAWN_EGG
Items pD ZOMBIE_SPAWN_EGG
Items pE ZOMBIE_HORSE_SPAWN_EGG
Items pF ZOMBIE_VILLAGER_SPAWN_EGG
Items pG ZOMBIFIED_PIGLIN_SPAWN_EGG
Items pH EXPERIENCE_BOTTLE
Items pI FIRE_CHARGE
Items pJ WRITABLE_BOOK
Items pK WRITTEN_BOOK
Items pL EMERALD
Items pM ITEM_FRAME
Items pP CARROT
Items pQ POTATO
Items pR BAKED_POTATO
Items pS POISONOUS_POTATO
Items pT MAP
Items pU GOLDEN_CARROT
Items pV SKELETON_SKULL
Items pW WITHER_SKELETON_SKULL
Items pX PLAYER_HEAD
Items pY ZOMBIE_HEAD
Items pZ CREEPER_HEAD
Items pa PIGLIN_SPAWN_EGG
Items pb PIGLIN_BRUTE_SPAWN_EGG
Items pc PILLAGER_SPAWN_EGG
Items pd POLAR_BEAR_SPAWN_EGG
Items pe PUFFERFISH_SPAWN_EGG
Items pf RABBIT_SPAWN_EGG
Items pg RAVAGER_SPAWN_EGG
Items ph SALMON_SPAWN_EGG
Items pi SHEEP_SPAWN_EGG
Items pj SHULKER_SPAWN_EGG
Items pk SILVERFISH_SPAWN_EGG
Items pl SKELETON_SPAWN_EGG
Items pm SKELETON_HORSE_SPAWN_EGG
Items pn SLIME_SPAWN_EGG
Items po SPIDER_SPAWN_EGG
Items pp SQUID_SPAWN_EGG
Items pq STRAY_SPAWN_EGG
Items pr STRIDER_SPAWN_EGG
Items ps TRADER_LLAMA_SPAWN_EGG
Items pt TROPICAL_FISH_SPAWN_EGG
Items pu TURTLE_SPAWN_EGG
Items pv VEX_SPAWN_EGG
Items pw VILLAGER_SPAWN_EGG
Items px VINDICATOR_SPAWN_EGG
Items py WANDERING_TRADER_SPAWN_EGG
Items pz WITCH_SPAWN_EGG
Items qA COMMAND_BLOCK_MINECART
Items qB MUTTON
Items qC COOKED_MUTTON
Items qD WHITE_BANNER
Items qE ORANGE_BANNER
Items qF MAGENTA_BANNER
Items qG LIGHT_BLUE_BANNER
Items qH YELLOW_BANNER
Items qI LIME_BANNER
Items qJ PINK_BANNER
Items qK GRAY_BANNER
Items qL LIGHT_GRAY_BANNER
Items qM CYAN_BANNER
Items qN PURPLE_BANNER
Items qO BLUE_BANNER
Items qP BROWN_BANNER
Items qQ GREEN_BANNER
Items qR RED_BANNER
Items qS BLACK_BANNER
Items qT END_CRYSTAL
Items qU CHORUS_FRUIT
Items qV POPPED_CHORUS_FRUIT
Items qW BEETROOT
Items qX BEETROOT_SEEDS
Items qY BEETROOT_SOUP
Items qZ DRAGON_BREATH
Items qa DRAGON_HEAD
Items qb CARROT_ON_A_STICK
Items qc WARPED_FUNGUS_ON_A_STICK
Items qd NETHER_STAR
Items qe PUMPKIN_PIE
Items qf FIREWORK_ROCKET
Items qg FIREWORK_STAR
Items qh ENCHANTED_BOOK
Items qi NETHER_BRICK
Items qj QUARTZ
Items qk TNT_MINECART
Items ql HOPPER_MINECART
Items qm PRISMARINE_SHARD
Items qn PRISMARINE_CRYSTALS
Items qo RABBIT
Items qp COOKED_RABBIT
Items qq RABBIT_STEW
Items qr RABBIT_FOOT
Items qs RABBIT_HIDE
Items qt ARMOR_STAND
Items qu IRON_HORSE_ARMOR
Items qv GOLDEN_HORSE_ARMOR
Items qw DIAMOND_HORSE_ARMOR
Items qx LEATHER_HORSE_ARMOR
Items qy LEAD
Items qz NAME_TAG
Items rA MUSIC_DISC_11
Items rB MUSIC_DISC_WAIT
Items rC MUSIC_DISC_PIGSTEP
Items rD TRIDENT
Items rE PHANTOM_MEMBRANE
Items rF NAUTILUS_SHELL
Items rG HEART_OF_THE_SEA
Items rH CROSSBOW
Items rI SUSPICIOUS_STEW
Items rK FLOWER_BANNER_PATTERN
Items rL CREEPER_BANNER_PATTERN
Items rM SKULL_BANNER_PATTERN
Items rN MOJANG_BANNER_PATTERN
Items rO GLOBE_BANNER_PATTERN
Items rP PIGLIN_BANNER_PATTERN
Items ra SPLASH_POTION
Items rb SPECTRAL_ARROW
Items rc TIPPED_ARROW
Items rd LINGERING_POTION
Items re SHIELD
Items rf ELYTRA
Items rg SPRUCE_BOAT
Items rh BIRCH_BOAT
Items ri JUNGLE_BOAT
Items rj ACACIA_BOAT
Items rk DARK_OAK_BOAT
Items rl TOTEM_OF_UNDYING
Items rm SHULKER_SHELL
Items rn IRON_NUGGET
Items ro KNOWLEDGE_BOOK
Items rp DEBUG_STICK
Items rq MUSIC_DISC_13
Items rr MUSIC_DISC_CAT
Items rs MUSIC_DISC_BLOCKS
Items rt MUSIC_DISC_CHIRP
Items ru MUSIC_DISC_FAR
Items rv MUSIC_DISC_MALL
Items rw MUSIC_DISC_MELLOHI
Items rx MUSIC_DISC_STAL
Items ry MUSIC_DISC_STRAD
Items rz MUSIC_DISC_WARD
Items sc SWEET_BERRIES
Items sh HONEYCOMB
Items sk HONEY_BOTTLE
JsonList a ()[Ljava/lang/String; getEntries
JsonList a (LJsonListEntry;)V add
JsonList b (Ljava/lang/Object;)LJsonListEntry; get
JsonList c ()Z isEmpty
JsonList c (Ljava/lang/Object;)V remove
JsonList e ()V save
JsonList f ()V load
JsonListEntry f ()Z hasExpired
JsonListEntry g ()Ljava/lang/Object; getKey
LayerIsland a INSTANCE
LightEngineLayerEventListener$Void a INSTANCE
LightEngineThreaded B_ ()V queueUpdate
LightEngineThreaded$Update a PRE_UPDATE
LightEngineThreaded$Update b POST_UPDATE
LoginListener a networkManager
LoginListener b ()V tick
LoginListener b (LIChatBaseComponent;)V disconnect
LoginListener d random
LoginListener f server
LoginListener$EnumProtocolState a HELLO
LoginListener$EnumProtocolState b KEY
LoginListener$EnumProtocolState c AUTHENTICATING
LoginListener$EnumProtocolState d NEGOTIATING
LoginListener$EnumProtocolState e READY_TO_ACCEPT
LoginListener$EnumProtocolState f DELAY_ACCEPT
LoginListener$EnumProtocolState g ACCEPTED
LootContextParameterSet a ()Ljava/util/Set; getRequired
LootContextParameterSet b ()Ljava/util/Set; getOptional
LootContextParameterSet$Builder a ()LLootContextParameterSet; build
LootContextParameterSet$Builder a (LLootContextParameter;)LLootContextParameterSet$Builder; addRequired
LootContextParameterSet$Builder b (LLootContextParameter;)LLootContextParameterSet$Builder; addOptional
LootContextParameterSets a EMPTY
LootContextParameterSets b CHEST
LootContextParameterSets c COMMAND
LootContextParameterSets d SELECTOR
LootContextParameterSets e FISHING
LootContextParameterSets f ENTITY
LootContextParameterSets g GIFT
LootContextParameterSets h BARTER
LootContextParameterSets i ADVANCEMENT_REWARD
LootContextParameterSets k GENERIC
LootContextParameterSets l BLOCK
LootContextParameters a THIS_ENTITY
LootContextParameters b LAST_DAMAGE_PLAYER
LootContextParameters c DAMAGE_SOURCE
LootContextParameters d KILLER_ENTITY
LootContextParameters e DIRECT_KILLER_ENTITY
LootContextParameters f ORIGIN
LootContextParameters g BLOCK_STATE
LootContextParameters h BLOCK_ENTITY
LootContextParameters i TOOL
LootContextParameters j EXPLOSION_RADIUS
LootEntryAbstract$Serializer a (Lcom/google/gson/JsonObject;LLootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeType
LootEntryAbstract$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootEntryAbstract; deserializeType
LootItemFunctionCopyNBT$Action a REPLACE
LootItemFunctionCopyNBT$Action b APPEND
LootItemFunctionCopyNBT$Action c MERGE
LootItemFunctionCopyName$Source a THIS
LootItemFunctionCopyName$Source b KILLER
LootItemFunctionCopyName$Source c KILLER_PLAYER
LootItemFunctionCopyName$Source d BLOCK_ENTITY
LootTable a ()LLootContextParameterSet; getLootContextParameterSet
LootTable a (LIInventory;LLootTableInfo;)V fillInventory
LootTable a (LLootTableInfo;)Ljava/util/List; populateLoot
LootTable a (LLootTableInfo;Ljava/util/function/Consumer;)V populateLootDirect
LootTable a EMPTY
LootTable b (LLootTableInfo;Ljava/util/function/Consumer;)V populateLoot
LootTableInfo a (LLootContextParameter;)Z hasContextParameter
LootTableInfo b ()F getLuck
LootTableInfo b luck
LootTableInfo c ()LWorldServer; getWorld
LootTableInfo c (LLootContextParameter;)Ljava/lang/Object; getContextParameter
LootTableInfo c world
LootTableInfo$Builder a (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; set
LootTableInfo$Builder a (LLootContextParameterSet;)LLootTableInfo; build
LootTableInfo$Builder b (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; setOptional
LootTableInfo$EntityTarget a THIS
LootTableInfo$EntityTarget b KILLER
LootTableInfo$EntityTarget c DIRECT_KILLER
LootTableInfo$EntityTarget d KILLER_PLAYER
LootTableRegistry a (LMinecraftKey;)LLootTable; getLootTable
LootTableRegistry c keyToLootTable
MapIcon a ()B getType
MapIcon a type
MapIcon b ()LMapIcon$Type; getType
MapIcon b x
MapIcon c ()B getX
MapIcon c y
MapIcon d ()B getY
MapIcon d rotation
MapIcon e ()B getRotation
MapIcon e name
MapIcon g ()LIChatBaseComponent; getName
MapIcon$Type A RED_X
MapIcon$Type a PLAYER
MapIcon$Type b FRAME
MapIcon$Type c RED_MARKER
MapIcon$Type d BLUE_MARKER
MapIcon$Type e TARGET_X
MapIcon$Type f TARGET_POINT
MapIcon$Type g PLAYER_OFF_MAP
MapIcon$Type h PLAYER_OFF_LIMITS
MapIcon$Type i MANSION
MapIcon$Type j MONUMENT
MapIcon$Type k BANNER_WHITE
MapIcon$Type l BANNER_ORANGE
MapIcon$Type m BANNER_MAGENTA
MapIcon$Type n BANNER_LIGHT_BLUE
MapIcon$Type o BANNER_YELLOW
MapIcon$Type p BANNER_LIME
MapIcon$Type q BANNER_PINK
MapIcon$Type r BANNER_GRAY
MapIcon$Type s BANNER_LIGHT_GRAY
MapIcon$Type t BANNER_CYAN
MapIcon$Type u BANNER_PURPLE
MapIcon$Type v BANNER_BLUE
MapIcon$Type w BANNER_BROWN
MapIcon$Type x BANNER_GREEN
MapIcon$Type y BANNER_RED
MapIcon$Type z BANNER_BLACK
Material A NETHER_WOOD
Material B BAMBOO_SAPLING
Material C BAMBOO
Material D CLOTH
Material E TNT
Material F LEAVES
Material G SHATTERABLE
Material H ICE
Material I CACTUS
Material J STONE
Material K ORE
Material L SNOW_BLOCK
Material M HEAVY
Material N BANNER
Material O PISTON
Material P CORAL
Material Q PUMPKIN
Material R DRAGON_EGG
Material S CAKE
Material Y canBurn
Material a ()Z isLiquid
Material a AIR
Material b ()Z isBuildable
Material b STRUCTURE_VOID
Material c ()Z isSolid
Material c PORTAL
Material d ()Z isBurnable
Material d WOOL
Material e ()Z isReplaceable
Material e PLANT
Material f WATER_PLANT
Material g ()LEnumPistonReaction; getPushReaction
Material g REPLACEABLE_PLANT
Material i REPLACEABLE_WATER_PLANT
Material j WATER
Material k BUBBLE_COLUMN
Material l LAVA
Material m PACKED_ICE
Material n FIRE
Material o ORIENTABLE
Material p WEB
Material r BUILDABLE_GLASS
Material s CLAY
Material t EARTH
Material u GRASS
Material v SNOW_LAYER
Material w SAND
Material x SPONGE
Material y SHULKER_SHELL
Material z WOOD
MaterialMapColor ai rgb
MathHelper a (D)F sqrt
MathHelper a (F)F sin
MathHelper a (III)I clamp
MathHelper a (Ljava/util/Random;II)I nextInt
MathHelper b (F)F cos
MathHelper c (D)I floor
MemoryModuleType A NEAREST_HOSTILE
MemoryModuleType B HIDING_PLACE
MemoryModuleType C HEARD_BELL_TIME
MemoryModuleType D CANT_REACH_WALK_TARGET_SINCE
MemoryModuleType E GOLEM_DETECTED_RECENTLY
MemoryModuleType F LAST_SLEPT
MemoryModuleType G LAST_WOKEN
MemoryModuleType H LAST_WORKED_AT_POI
MemoryModuleType I NEAREST_VISIBLE_ADULY
MemoryModuleType J NEAREST_VISIBLE_WANTED_ITEM
MemoryModuleType K NEAREST_VISIBLE_NEMSIS
MemoryModuleType L ANGRY_AT
MemoryModuleType M UNIVERSAL_ANGER
MemoryModuleType N ADMIRING_ITEM
MemoryModuleType O TIME_TRYING_TO_REACH_ADMIRE_ITEM
MemoryModuleType P DISABLE_WALK_TO_ADMIRE_ITEM
MemoryModuleType Q ADMIRING_DISABLED
MemoryModuleType R HUNTED_RECENTLY
MemoryModuleType S CELEBRATE_LOCATION
MemoryModuleType T DANCING
MemoryModuleType U NEAREST_VISIBLE_HUNTABLE_HOGLIN
MemoryModuleType V NEAREST_VISIBLE_BABY_HOGLIN
MemoryModuleType W NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
MemoryModuleType X NEARBY_ADULT_PIGLINS
MemoryModuleType Y NEAREST_VISIBLE_ADULT_PIGLINS
MemoryModuleType Z NEAREST_VISIBLE_ADULT_HOGLINS
MemoryModuleType a ()Ljava/util/Optional; getSerializer
MemoryModuleType a DUMMY
MemoryModuleType aa NEAREST_VISIBLE_ADULT_PIGLIN
MemoryModuleType ab NEAREST_VISIBLE_ZOMBIFIED
MemoryModuleType ac VISIBLE_ADULT_PIGLIN_COUNT
MemoryModuleType ad VISIBLE_ADULT_HOGLIN_COUNT
MemoryModuleType ae NEAREST_PLAYER_HOLDING_WANTED_ITEM
MemoryModuleType af ATE_RECENTLY
MemoryModuleType ag NEAREST_REPELLENT
MemoryModuleType ah PACIFIED
MemoryModuleType b HOME
MemoryModuleType c JOB_SITE
MemoryModuleType d POTENTIAL_JOB_SITE
MemoryModuleType e MEETING_POINT
MemoryModuleType f SECONDARY_JOB_SITE
MemoryModuleType g MOBS
MemoryModuleType h VISIBLE_MOBS
MemoryModuleType i VISIBLE_VILLAGER_BABIES
MemoryModuleType j NEAREST_PLAYERS
MemoryModuleType k NEAREST_VISIBLE_PLAYER
MemoryModuleType l NEAREST_VISIBLE_TARGETABLE_PLAYER
MemoryModuleType m WALK_TARGET
MemoryModuleType n LOOK_TARGET
MemoryModuleType o ATTACK_TARGET
MemoryModuleType p ATTACK_COOLING_DOWN
MemoryModuleType q INTERACTION_TARGET
MemoryModuleType r BREED_TARGET
MemoryModuleType s RIDE_TARGET
MemoryModuleType t PATH
MemoryModuleType u INTERACTABLE_DOORS
MemoryModuleType v DOORS_TO_CLOSE
MemoryModuleType w NEAREST_BED
MemoryModuleType x HURT_BY
MemoryModuleType y HURT_BY_ENTITY
MemoryModuleType z AVOID_TARGET
MemoryStatus a VALUE_PRESENT
MemoryStatus b VALUE_ABSENT
MemoryStatus c REGISTERED
MerchantRecipe a (I)V increaseSpecialPrice
MerchantRecipe a buyingItem1
MerchantRecipe b ()LItemStack; getBuyItem1
MerchantRecipe b (I)V setSpecialPrice
MerchantRecipe b buyingItem2
MerchantRecipe c ()LItemStack; getBuyItem2
MerchantRecipe c sellingItem
MerchantRecipe d ()LItemStack; getSellingItem
MerchantRecipe d uses
MerchantRecipe e maxUses
MerchantRecipe f rewardExp
MerchantRecipe g ()I getUses
MerchantRecipe g specialPrice
MerchantRecipe h ()V resetUses
MerchantRecipe h demand
MerchantRecipe i ()I getMaxUses
MerchantRecipe i priceMultiplier
MerchantRecipe j ()V increaseUses
MerchantRecipe j xp
MerchantRecipe k ()I getDemand
MerchantRecipe l ()V setSpecialPrice
MerchantRecipe m ()I getSpecialPrice
MerchantRecipe n ()F getPriceMultiplier
MerchantRecipe o ()I getXp
MerchantRecipe p ()Z isFullyUsed
MerchantRecipe s ()Z isRewardExp
MinecraftEncryption a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (ILjava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
MinecraftEncryption a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
MinecraftKey a ()Ljava/lang/String; getKey
MinecraftKey b ()Ljava/lang/String; getNamespace
MinecraftKey b namespace
MinecraftKey c key
MobEffect a ()LMobEffectList; getMobEffect
MobEffect a (LEntityLiving;Ljava/lang/Runnable;)Z tick
MobEffect b ()I getDuration
MobEffect c ()I getAmplifier
MobEffect c duration
MobEffect d ()Z isAmbient
MobEffect d amplification
MobEffect e ()Z isShowParticles
MobEffect e ambient
MobEffect f ()Z isShowIcon
MobEffect g showParticles
MobEffect h showIcon
MobEffect i hiddenEffect
MobEffectInfo a BENEFICIAL
MobEffectInfo b HARMFUL
MobEffectInfo c NEUTRAL
MobEffectList a ()Z isInstant
MobEffectList a (I)LMobEffectList; fromId
MobEffectList a (LEntity;LEntity;LEntityLiving;ID)V applyInstantEffect
MobEffectList a (LEntityLiving;I)V tick
MobEffectList a (LMobEffectList;)I getId
MobEffectList f ()I getColor
MobEffects A UNLUCK
MobEffects B SLOW_FALLING
MobEffects C CONDUIT_POWER
MobEffects D DOLPHINS_GRACE
MobEffects E BAD_OMEN
MobEffects F HERO_OF_THE_VILLAGE
MobEffects a FASTER_MOVEMENT
MobEffects b SLOWER_MOVEMENT
MobEffects c FASTER_DIG
MobEffects d SLOWER_DIG
MobEffects e INCREASE_DAMAGE
MobEffects f HEAL
MobEffects g HARM
MobEffects h JUMP
MobEffects i CONFUSION
MobEffects j REGENERATION
MobEffects k RESISTANCE
MobEffects l FIRE_RESISTANCE
MobEffects m WATER_BREATHING
MobEffects n INVISIBILITY
MobEffects o BLINDNESS
MobEffects p NIGHT_VISION
MobEffects q HUNGER
MobEffects r WEAKNESS
MobEffects s POISON
MobEffects t WITHER
MobEffects u HEALTH_BOOST
MobEffects v ABSORBTION
MobEffects w SATURATION
MobEffects x GLOWING
MobEffects y LEVITATION
MobEffects z LUCK
MobSpawnerAbstract a (LEntityTypes;)V setMobName
MobSpawnerAbstract b (LWorld;LBlockPosition;)LMinecraftKey; getMobName
MobSpawnerAbstract b spawnDelay
MobSpawnerAbstract c mobs
MobSpawnerAbstract d spawnData
MobSpawnerAbstract g minSpawnDelay
MobSpawnerAbstract h maxSpawnDelay
MobSpawnerAbstract i spawnCount
MobSpawnerAbstract k maxNearbyEntities
MobSpawnerAbstract l requiredPlayerRange
MobSpawnerAbstract m spawnRange
MobSpawnerData b ()LNBTTagCompound; getEntity
MobSpawnerData b entity
MojangsonParser a (Ljava/lang/String;)LNBTTagCompound; parse
MojangsonParser b (Ljava/lang/String;)LNBTBase; parseLiteral
MojangsonParser h ()LNBTBase; parseArray
MovingObjectPosition a pos
MovingObjectPosition c ()LMovingObjectPosition$EnumMovingObjectType; getType
MovingObjectPosition e ()LVec3D; getPos
MovingObjectPosition$EnumMovingObjectType a MISS
MovingObjectPosition$EnumMovingObjectType b BLOCK
MovingObjectPosition$EnumMovingObjectType c ENTITY
MovingObjectPositionBlock a ()LBlockPosition; getBlockPosition
MovingObjectPositionBlock b ()LEnumDirection; getDirection
MovingObjectPositionEntity a ()LEntity; getEntity
NBTBase a ()B getTypeId
NBTBase a (Ljava/io/DataOutput;)V write
NBTBase c ()LNBTBase; clone
NBTBase f_ ()Ljava/lang/String; asString
NBTList d (ILNBTBase;)LNBTBase; set
NBTNumber e ()J asLong
NBTNumber f ()I asInt
NBTNumber g ()S asShort
NBTNumber h ()B asByte
NBTNumber i ()D asDouble
NBTNumber j ()F asFloat
NBTTagByte d data
NBTTagByteArray b data
NBTTagByteArray d ()[B getBytes
NBTTagCompound a (Ljava/lang/String;B)V setByte
NBTTagCompound a (Ljava/lang/String;D)V setDouble
NBTTagCompound a (Ljava/lang/String;F)V setFloat
NBTTagCompound a (Ljava/lang/String;I)V setInt
NBTTagCompound a (Ljava/lang/String;J)V setLong
NBTTagCompound a (Ljava/lang/String;LNBTBase;)LNBTBase; set
NBTTagCompound a (Ljava/lang/String;Ljava/lang/String;)V setString
NBTTagCompound a (Ljava/lang/String;S)V setShort
NBTTagCompound a (Ljava/lang/String;Z)V setBoolean
NBTTagCompound a (Ljava/lang/String;[B)V setByteArray
NBTTagCompound a (Ljava/lang/String;[I)V setIntArray
NBTTagCompound b (Ljava/lang/String;I)Z hasKeyOfType
NBTTagCompound c (Ljava/lang/String;)LNBTBase; get
NBTTagCompound c (Ljava/lang/String;I)LNBTTagList; getList
NBTTagCompound c map
NBTTagCompound d ()Ljava/util/Set; getKeys
NBTTagCompound e (Ljava/lang/String;)Z hasKey
NBTTagCompound f (Ljava/lang/String;)B getByte
NBTTagCompound g ()LNBTTagCompound; clone
NBTTagCompound g (Ljava/lang/String;)S getShort
NBTTagCompound h (Ljava/lang/String;)I getInt
NBTTagCompound i (Ljava/lang/String;)J getLong
NBTTagCompound j (Ljava/lang/String;)F getFloat
NBTTagCompound k (Ljava/lang/String;)D getDouble
NBTTagCompound l (Ljava/lang/String;)Ljava/lang/String; getString
NBTTagCompound m (Ljava/lang/String;)[B getByteArray
NBTTagCompound n (Ljava/lang/String;)[I getIntArray
NBTTagCompound o (Ljava/lang/String;)[J getLongArray
NBTTagCompound p (Ljava/lang/String;)LNBTTagCompound; getCompound
NBTTagCompound q (Ljava/lang/String;)Z getBoolean
NBTTagCompound r (Ljava/lang/String;)V remove
NBTTagDouble c data
NBTTagFloat c data
NBTTagInt b data
NBTTagIntArray b data
NBTTagIntArray f ()[I getInts
NBTTagList a (I)LNBTTagCompound; getCompound
NBTTagList b list
NBTTagList c (I)LNBTBase; remove
NBTTagList c type
NBTTagList j (I)Ljava/lang/String; getString
NBTTagList size ()I size
NBTTagLong b data
NBTTagLongArray f ()[J getLongs
NBTTagShort b data
NBTTagString c data
NameReferencingFileConverter g (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getPlayersFolder
NetworkManager a (I)V setCompressionLevel
NetworkManager a (LEnumProtocol;)V setProtocol
NetworkManager a (LIChatBaseComponent;)V close
NetworkManager a (LPacket;)V sendPacket
NetworkManager a (LPacket;Lio/netty/util/concurrent/GenericFutureListener;)V sendPacket
NetworkManager a (LPacketListener;)V setPacketListener
NetworkManager c ()Ljava/net/SocketAddress; getSocketAddress
NetworkManager d ()Z isLocal
NetworkManager h ()Z isConnected
NetworkManager i packetQueue
NetworkManager j channel
NetworkManager k socketAddress
NetworkManager l ()V stopReading
NetworkManager l packetListener
NetworkManager m ()V handleDisconnection
NibbleArray a ()[B asBytes
OperatorBoolean a FALSE
OperatorBoolean b NOT_OR
OperatorBoolean c ONLY_SECOND
OperatorBoolean d NOT_FIRST
OperatorBoolean e ONLY_FIRST
OperatorBoolean f NOT_SECOND
OperatorBoolean g NOT_SAME
OperatorBoolean h NOT_AND
OperatorBoolean i AND
OperatorBoolean j SAME
OperatorBoolean k SECOND
OperatorBoolean l CAUSES
OperatorBoolean m FIRST
OperatorBoolean n CAUSED_BY
OperatorBoolean o OR
OperatorBoolean p TRUE
PacketHandshakingInSetProtocol b hostname
PacketHandshakingInSetProtocol c port
PacketLoginInEncryptionBegin a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
PacketPlayInAbilities b ()Z isFlying
PacketPlayInAdvancements$Status a OPENED_TAB
PacketPlayInAdvancements$Status b CLOSED_SCREEN
PacketPlayInBlockDig$EnumPlayerDigType a START_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType b ABORT_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType c STOP_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType d DROP_ALL_ITEMS
PacketPlayInBlockDig$EnumPlayerDigType e DROP_ITEM
PacketPlayInBlockDig$EnumPlayerDigType f RELEASE_USE_ITEM
PacketPlayInBlockDig$EnumPlayerDigType g SWAP_ITEM_WITH_OFFHAND
PacketPlayInClientCommand$EnumClientCommand a PERFORM_RESPAWN
PacketPlayInClientCommand$EnumClientCommand b REQUEST_STATS
PacketPlayInCloseWindow a id
PacketPlayInCustomPayload b tag
PacketPlayInCustomPayload c data
PacketPlayInEntityAction b animation
PacketPlayInEntityAction$EnumPlayerAction a PRESS_SHIFT_KEY
PacketPlayInEntityAction$EnumPlayerAction b RELEASE_SHIFT_KEY
PacketPlayInEntityAction$EnumPlayerAction c STOP_SLEEPING
PacketPlayInEntityAction$EnumPlayerAction d START_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction e STOP_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction f START_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction g STOP_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction h OPEN_INVENTORY
PacketPlayInEntityAction$EnumPlayerAction i START_FALL_FLYING
PacketPlayInFlying a x
PacketPlayInFlying b y
PacketPlayInFlying c z
PacketPlayInFlying d yaw
PacketPlayInFlying e pitch
PacketPlayInFlying g hasPos
PacketPlayInFlying h hasLook
PacketPlayInHeldItemSlot a itemInHandIndex
PacketPlayInResourcePackStatus a status
PacketPlayInResourcePackStatus$EnumResourcePackStatus a SUCCESSFULLY_LOADED
PacketPlayInResourcePackStatus$EnumResourcePackStatus b DECLINED
PacketPlayInResourcePackStatus$EnumResourcePackStatus c FAILED_DOWNLOAD
PacketPlayInResourcePackStatus$EnumResourcePackStatus d ACCEPTED
PacketPlayInSetCreativeSlot a slot
PacketPlayInSetCreativeSlot c ()LItemStack; getItemStack
PacketPlayInSettings a locale
PacketPlayInSettings b viewDistance
PacketPlayInSettings g ()LEnumMainHand; getMainHand
PacketPlayInUseEntity b action
PacketPlayInUseEntity$EnumEntityUseAction a INTERACT
PacketPlayInUseEntity$EnumEntityUseAction b ATTACK
PacketPlayInUseEntity$EnumEntityUseAction c INTERACT_AT
PacketPlayInVehicleMove b ()D getX
PacketPlayInVehicleMove c ()D getY
PacketPlayInVehicleMove d ()D getZ
PacketPlayInVehicleMove e ()F getYaw
PacketPlayInVehicleMove f ()F getPitch
PacketPlayInWindowClick b slot
PacketPlayInWindowClick c button
PacketPlayInWindowClick e item
PacketPlayInWindowClick f shift
PacketPlayOutBlockChange b block
PacketPlayOutBoss$Action a ADD
PacketPlayOutBoss$Action b REMOVE
PacketPlayOutBoss$Action d UPDATE_NAME
PacketPlayOutBoss$Action e UPDATE_STYLE
PacketPlayOutBoss$Action f UPDATE_PROPERTIES
PacketPlayOutCombatEvent$EnumCombatEventType a ENTER_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType b END_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType c ENTITY_DIED
PacketPlayOutPlayerInfo$EnumPlayerInfoAction a ADD_PLAYER
PacketPlayOutPlayerInfo$EnumPlayerInfoAction b UPDATE_GAME_MODE
PacketPlayOutPlayerInfo$EnumPlayerInfoAction c UPDATE_LATENCY
PacketPlayOutPlayerInfo$EnumPlayerInfoAction d UPDATE_DISPLAY_NAME
PacketPlayOutPlayerInfo$EnumPlayerInfoAction e REMOVE_PLAYER
PacketPlayOutPlayerListHeaderFooter a header
PacketPlayOutPlayerListHeaderFooter b footer
PacketPlayOutPosition$EnumPlayerTeleportFlags a X
PacketPlayOutPosition$EnumPlayerTeleportFlags b Y
PacketPlayOutPosition$EnumPlayerTeleportFlags c Z
PacketPlayOutPosition$EnumPlayerTeleportFlags d Y_ROT
PacketPlayOutPosition$EnumPlayerTeleportFlags e X_ROT
PacketPlayOutRecipes$Action a INIT
PacketPlayOutRecipes$Action b ADD
PacketPlayOutRecipes$Action c REMOVE
PacketPlayOutSpawnPosition a position
PacketPlayOutTitle$EnumTitleAction a TITLE
PacketPlayOutTitle$EnumTitleAction b SUBTITLE
PacketPlayOutTitle$EnumTitleAction c ACTIONBAR
PacketPlayOutTitle$EnumTitleAction d TIMES
PacketPlayOutTitle$EnumTitleAction e CLEAR
PacketPlayOutTitle$EnumTitleAction f RESET
PacketPlayOutWorldBorder$EnumWorldBorderAction a SET_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction b LERP_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction c SET_CENTER
PacketPlayOutWorldBorder$EnumWorldBorderAction d INITIALIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction e SET_WARNING_TIME
PacketPlayOutWorldBorder$EnumWorldBorderAction f SET_WARNING_BLOCKS
PacketStatusListener b minecraftServer
PacketStatusListener c networkManager
Paintings a ()I getWidth
Paintings b ()I getHeight
ParticleParam b ()LParticle; getParticle
Particles A FISHING
Particles B FLAME
Particles C SOUL_FIRE_FLAME
Particles D SOUL
Particles E FLASH
Particles F HAPPY_VILLAGER
Particles G COMPOSTER
Particles H HEART
Particles I INSTANT_EFFECT
Particles J ITEM
Particles L ITEM_SLIME
Particles M ITEM_SNOWBALL
Particles N LARGE_SMOKE
Particles O LAVA
Particles P MYCELIUM
Particles Q NOTE
Particles R POOF
Particles S PORTAL
Particles T RAIN
Particles U SMOKE
Particles V SNEEZE
Particles W SPIT
Particles X SQUID_INK
Particles Y SWEEP_ATTACK
Particles Z TOTEM_OF_UNDYING
Particles a AMBIENT_ENTITY_EFFECT
Particles aa UNDERWATER
Particles ab SPLASH
Particles ac WITCH
Particles ad BUBBLE_POP
Particles ae CURRENT_DOWN
Particles af BUBBLE_COLUMN_UP
Particles ag NAUTILUS
Particles ah DOLPHIN
Particles ai CAMPFIRE_COSY_SMOKE
Particles aj CAMPFIRE_SIGNAL_SMOKE
Particles ak DRIPPING_HONEY
Particles al FALLING_HONEY
Particles am LANDING_HONEY
Particles an FALLING_NECTAR
Particles ap ASH
Particles aq CRIMSON_SPORE
Particles ar WARPED_SPORE
Particles at DRIPPING_OBSIDIAN_TEAR
Particles au FALLING_OBSIDIAN_TEAR
Particles av LANDING_OBSIDIAN_TEAR
Particles aw REVERSE_PORTAL
Particles ax WHITE_ASH
Particles b ANGRY_VILLAGER
Particles c BARRIER
Particles d BLOCK
Particles e BUBBLE
Particles f CLOUD
Particles g CRIT
Particles h DAMAGE_INDICATOR
Particles i DRAGON_BREATH
Particles j DRIPPING_LAVA
Particles k FALLING_LAVA
Particles l LANDING_LAVA
Particles m DRIPPING_WATER
Particles n FALLING_WATER
Particles o DUST
Particles q EFFECT
Particles r ELDER_GUARDIAN
Particles s ENCHANTED_HIT
Particles t ENCHANT
Particles u END_ROD
Particles v ENTITY_EFFECT
Particles w EXPLOSION_EMITTER
Particles x EXPLOSION
Particles y FALLING_DUST
Particles z FIREWORK
PathMode a LAND
PathMode b WATER
PathMode c AIR
PathType a BLOCKED
PathType b OPEN
PathType c WALKABLE
PathType d WALKABLE_DOOR
PathType e TRAPDOOR
PathType f FENCE
PathType g LAVA
PathType h WATER
PathType i WATER_BORDER
PathType j RAIL
PathType k UNPASSABLE_RAIL
PathType l DANGER_FIRE
PathType m DAMAGE_FIRE
PathType n DANGER_CACTUS
PathType o DAMAGE_CACTUS
PathType p DANGER_OTHER
PathType q DAMAGE_OTHER
PathType r DOOR_OPEN
PathType s DOOR_WOOD_CLOSED
PathType t DOOR_IRON_CLOSED
PathType u BREACH
PathType v LEAVES
PathType w STICKY_HONEY
PathType x COCOA
PathfinderGoal$Type a MOVE
PathfinderGoal$Type b LOOK
PathfinderGoal$Type c JUMP
PathfinderGoal$Type d TARGET
PathfinderGoalBoat a GO_TO_BOAT
PathfinderGoalBoat b GO_IN_BOAT_DIRECTION
PathfinderGoalBreed a animal
PathfinderGoalBreed c partner
PathfinderGoalCrossbowAttack$State a UNCHARGED
PathfinderGoalCrossbowAttack$State b CHARGING
PathfinderGoalCrossbowAttack$State c CHARGED
PathfinderGoalCrossbowAttack$State d READY_TO_ATTACK
PathfinderGoalDoorInteract d entity
PathfinderGoalDoorInteract e door
PathfinderGoalRandomStroll a (I)V setTimeBetweenMovement
PathfinderGoalRemoveBlock h entity
PathfinderGoalSelector b ()V doTick
PathfinderGoalSit a entity
PathfinderGoalTame a entity
PathfinderGoalTempt b target
PersistentBase b id
PersistentRaid a (LBlockPosition;I)LRaid; getNearbyRaid
PersistentRaid a raids
PistonExtendsChecker c ()Ljava/util/List; getMovedBlocks
PistonExtendsChecker d ()Ljava/util/List; getBrokenBlocks
PlayerAbilities a isInvulnerable
PlayerAbilities b isFlying
PlayerAbilities c canFly
PlayerAbilities d canInstantlyBuild
PlayerAbilities e mayBuild
PlayerAbilities f flySpeed
PlayerAbilities g walkSpeed
PlayerChunk a (LChunkStatus;)Ljava/util/concurrent/CompletableFuture; getStatusFutureUnchecked
PlayerChunk a UNLOADED_CHUNK_ACCESS
PlayerChunk b (I)LChunkStatus; getChunkStatus
PlayerChunk b UNLOADED_CHUNK_ACCESS_FUTURE
PlayerChunk c (I)LPlayerChunk$State; getChunkState
PlayerChunk c UNLOADED_CHUNK
PlayerChunk d ()LChunk; getChunk
PlayerChunk d UNLOADED_CHUNK_FUTURE
PlayerChunk e CHUNK_STATUSES
PlayerChunk f CHUNK_STATES
PlayerChunk g ()Ljava/util/concurrent/CompletableFuture; getChunkSave
PlayerChunk g statusFutures
PlayerChunk i fullChunkFuture
PlayerChunk j ()I getTicketLevel
PlayerChunk j tickingFuture
PlayerChunk k entityTickingFuture
PlayerChunk l ()Z hasBeenLoaded
PlayerChunk l chunkSave
PlayerChunk n oldTicketLevel
PlayerChunk o ticketLevel
PlayerChunk q location
PlayerChunk s dirtyBlocks
PlayerChunk v lightEngine
PlayerChunk x players
PlayerChunk y hasBeenLoaded
PlayerChunk$State a (LPlayerChunk$State;)Z isAtLeast
PlayerChunk$State a INACCESSIBLE
PlayerChunk$State b BORDER
PlayerChunk$State c TICKING
PlayerChunk$State d ENTITY_TICKING
PlayerChunkMap C viewDistance
PlayerChunkMap a (I)V setViewDistance
PlayerChunkMap a (J)LPlayerChunk; getUpdatingChunk
PlayerChunkMap a (LEntity;)V addEntity
PlayerChunkMap a (LEntity;LPacket;)V broadcast
PlayerChunkMap a (LEntityPlayer;)V movePlayer
PlayerChunkMap a (LEntityPlayer;LChunkCoordIntPair;[LPacket;ZZ)V sendChunk
PlayerChunkMap a (LIChunkAccess;)Z saveChunk
PlayerChunkMap a (Ljava/util/function/BooleanSupplier;)V unloadChunks
PlayerChunkMap a (Z)V save
PlayerChunkMap a GOLDEN_TICKET
PlayerChunkMap b (J)LPlayerChunk; getVisibleChunk
PlayerChunkMap b (LEntity;)V removeEntity
PlayerChunkMap b (LEntity;LPacket;)V broadcastIncludingSelf
PlayerChunkMap d (LChunkCoordIntPair;)Z isOutsideOfRange
PlayerChunkMap d updatingChunks
PlayerChunkMap e visibleChunks
PlayerChunkMap f pendingUnload
PlayerChunkMap g loadedChunks
PlayerChunkMap h world
PlayerChunkMap i (LChunkCoordIntPair;)LNBTTagCompound; readChunkData
PlayerChunkMap i lightEngine
PlayerChunkMap j executor
PlayerChunkMap k chunkGenerator
PlayerChunkMap n unloadQueue
PlayerChunkMap o updatingChunksModified
PlayerChunkMap q mailboxWorldGen
PlayerChunkMap r mailboxMain
PlayerChunkMap s worldLoadListener
PlayerChunkMap u chunkDistanceManager
PlayerChunkMap w definedStructureManager
PlayerChunkMap y playerMap
PlayerChunkMap z trackedEntities
PlayerChunkMap$EntityTracker a (LEntityPlayer;)V clear
PlayerChunkMap$EntityTracker a (LPacket;)V broadcast
PlayerChunkMap$EntityTracker a (Ljava/util/List;)V track
PlayerChunkMap$EntityTracker b (LEntityPlayer;)V updatePlayer
PlayerChunkMap$EntityTracker b (LPacket;)V broadcastIncludingSelf
PlayerChunkMap$EntityTracker b trackerEntry
PlayerChunkMap$EntityTracker c tracker
PlayerChunkMap$EntityTracker d trackingDistance
PlayerChunkMap$EntityTracker f trackedPlayers
PlayerConnection F receivedMovePackets
PlayerConnection G processedMovePackets
PlayerConnection a (LPacket;)V sendPacket
PlayerConnection a (Ljava/lang/String;)V handleCommand
PlayerConnection a networkManager
PlayerConnection b ()V tick
PlayerConnection b (LIChatBaseComponent;)V disconnect
PlayerConnection b player
PlayerConnection c ()V syncPosition
PlayerConnection d minecraftServer
PlayerConnection e ()Z isExemptPlayer
PlayerConnection f lastKeepAlive
PlayerConnection g awaitingKeepAlive
PlayerConnection i chatThrottle
PlayerConnection y teleportPos
PlayerConnection z teleportAwait
PlayerConnectionUtils a (LPacket;LPacketListener;LIAsyncTaskHandler;)V ensureMainThread
PlayerConnectionUtils a (LPacket;LPacketListener;LWorldServer;)V ensureMainThread
PlayerInteractManager a (LBlockPosition;)Z breakBlock
PlayerInteractManager a world
PlayerInteractManager b ()LEnumGamemode; getGameMode
PlayerInteractManager b player
PlayerInteractManager d gamemode
PlayerInteractManager e ()Z isCreative
PlayerInteractManager g lastDigTick
PlayerInteractManager i currentTick
PlayerInventory a (LItemStack;LItemStack;)Z isSimilarAndNotFull
PlayerInventory a items
PlayerInventory b armor
PlayerInventory c extraSlots
PlayerInventory d (LItemStack;)I firstPartial
PlayerInventory d itemInHandIndex
PlayerInventory e (LItemStack;)Z pickup
PlayerInventory e player
PlayerInventory f ()LItemStack; getItemInHand
PlayerInventory g ()I getHotbarSize
PlayerInventory g carried
PlayerInventory h ()I getFirstEmptySlotIndex
PlayerInventory h (LItemStack;)V setCarried
PlayerInventory k ()V dropContents
PlayerInventory m ()LItemStack; getCarried
PlayerList a ()V reloadWhitelist
PlayerList a (LEntityHuman;)LServerStatisticManager; getStatisticManager
PlayerList a (LEntityHuman;DDDDLResourceKey;LPacket;)V sendPacketNearby
PlayerList a (LEntityPlayer;Z)LEntityPlayer; moveToWorld
PlayerList a (LIChatBaseComponent;LChatMessageType;Ljava/util/UUID;)V sendMessage
PlayerList a (LPacket;)V sendAll
PlayerList a (LScoreboardServer;LEntityPlayer;)V sendScoreboard
PlayerList a (LWorldServer;)V setPlayerFileData
PlayerList a (Lcom/mojang/authlib/GameProfile;)V addOp
PlayerList a (Ljava/lang/String;)LEntityPlayer; getPlayer
PlayerList a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)LIChatBaseComponent; attemptLogin
PlayerList a (Ljava/util/UUID;)LEntityPlayer; getPlayer
PlayerList a (Z)V setHasWhitelist
PlayerList b (LEntityPlayer;)V savePlayerFile
PlayerList b (Lcom/mojang/authlib/GameProfile;)V removeOp
PlayerList c ()Lnet/minecraft/server/MinecraftServer; getServer
PlayerList c (LEntityPlayer;)V disconnect
PlayerList c (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
PlayerList d ()V tick
PlayerList e (LEntityPlayer;)V updateClient
PlayerList e (Lcom/mojang/authlib/GameProfile;)LEntityPlayer; processLogin
PlayerList f ()LGameProfileBanList; getProfileBans
PlayerList f (Lcom/mojang/authlib/GameProfile;)Z isOp
PlayerList f maxPlayers
PlayerList g ()LIpBanList; getIPBans
PlayerList h ()V savePlayers
PlayerList h server
PlayerList i ()LWhiteList; getWhitelist
PlayerList i players
PlayerList j ()[Ljava/lang/String; getWhitelisted
PlayerList k ()LOpList; getOPs
PlayerList m ()I getPlayerCount
PlayerList m operators
PlayerList n ()I getMaxPlayers
PlayerList n whitelist
PlayerList o ()Z getHasWhitelist
PlayerList p ()I getViewDistance
PlayerList q ()LNBTTagCompound; save
PlayerList q playerFileData
PlayerList r ()V shutdown
PlayerList r hasWhitelist
PlayerList s ()Ljava/util/List; getPlayers
PlayerList t ()V reload
PlayerList t viewDistance
PlayerListBox a ()V tick
PointGroupO A INVERT_Y
PointGroupO B INVERT_Z
PointGroupO C ROT_60_REF_NNN
PointGroupO D ROT_60_REF_NNP
PointGroupO E ROT_60_REF_NPN
PointGroupO F ROT_60_REF_NPP
PointGroupO G ROT_60_REF_PNN
PointGroupO H ROT_60_REF_PNP
PointGroupO I ROT_60_REF_PPN
PointGroupO J ROT_60_REF_PPP
PointGroupO K SWAP_XY
PointGroupO L SWAP_YZ
PointGroupO M SWAP_XZ
PointGroupO N SWAP_NEG_XY
PointGroupO O SWAP_NEG_YZ
PointGroupO P SWAP_NEG_XZ
PointGroupO Q ROT_90_REF_X_NEG
PointGroupO R ROT_90_REF_X_POS
PointGroupO S ROT_90_REF_Y_NEG
PointGroupO T ROT_90_REF_Y_POS
PointGroupO U ROT_90_REF_Z_NEG
PointGroupO V ROT_90_REF_Z_POS
PointGroupO a IDENTITY
PointGroupO b ROT_180_FACE_XY
PointGroupO c ROT_180_FACE_XZ
PointGroupO d ROT_180_FACE_YZ
PointGroupO e ROT_120_NNN
PointGroupO f ROT_120_NNP
PointGroupO g ROT_120_NPN
PointGroupO h ROT_120_NPP
PointGroupO i ROT_120_PNN
PointGroupO j ROT_120_PNP
PointGroupO k ROT_120_PPN
PointGroupO l ROT_120_PPP
PointGroupO m ROT_180_EDGE_XY_NEG
PointGroupO n ROT_180_EDGE_XY_POS
PointGroupO o ROT_180_EDGE_XZ_NEG
PointGroupO p ROT_180_EDGE_XZ_POS
PointGroupO q ROT_180_EDGE_YZ_NEG
PointGroupO r ROT_180_EDGE_YZ_POS
PointGroupO s ROT_90_X_NEG
PointGroupO t ROT_90_X_POS
PointGroupO u ROT_90_Y_NEG
PointGroupO v ROT_90_Y_POS
PointGroupO w ROT_90_Z_NEG
PointGroupO x ROT_90_Z_POS
PointGroupO y INVERSION
PointGroupO z INVERT_X
PointGroupS a P123
PointGroupS b P213
PointGroupS c P132
PointGroupS d P231
PointGroupS e P312
PointGroupS f P321
PortalTravelAgent a (LBlockPosition;LEnumDirection$EnumAxis;)Ljava/util/Optional; createPortal
PortalTravelAgent a (LBlockPosition;Z)Ljava/util/Optional; findPortal
PortalTravelAgent a world
PotionUtil a (LItemStack;)Ljava/util/List; getEffects
Potions A STRONG_HEALING
Potions B HARMING
Potions C STRONG_HARMING
Potions D POISON
Potions E LONG_POISON
Potions F STRONG_POISON
Potions G REGENERATION
Potions H LONG_REGENERATION
Potions I STRONG_REGENERATION
Potions J STRENGTH
Potions K LONG_STRENGTH
Potions L STRONG_STRENGTH
Potions M WEAKNESS
Potions N LONG_WEAKNESS
Potions O LUCK
Potions P SLOW_FALLING
Potions Q LONG_SLOW_FALLING
Potions a EMPTY
Potions b WATER
Potions c MUNDANE
Potions d THICK
Potions e AWKWARD
Potions f NIGHT_VISION
Potions g LONG_NIGHT_VISION
Potions h INVISIBILITY
Potions i LONG_INVISIBILITY
Potions j LEAPING
Potions k LONG_LEAPING
Potions l STRONG_LEAPING
Potions m FIRE_RESISTANCE
Potions n LONG_FIRE_RESISTANCE
Potions o SWIFTNESS
Potions p LONG_SWIFTNESS
Potions q STRONG_SWIFTNESS
Potions r SLOWNESS
Potions s LONG_SLOWNESS
Potions t STRONG_SLOWNESS
Potions u TURTLE_MASTER
Potions v LONG_TURTLE_MASTER
Potions w STRONG_TURTLE_MASTER
Potions x WATER_BREATHING
Potions y LONG_WATER_BREATHING
Potions z HEALING
PropertyManager a (Ljava/lang/String;I)I getInt
PropertyManager a (Ljava/lang/String;J)J getLong
PropertyManager a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getString
PropertyManager a (Ljava/lang/String;Z)Z getBoolean
PropertyManager a (Ljava/nio/file/Path;)Ljava/util/Properties; loadPropertiesFile
PropertyManager b (LIRegistryCustom;Ljava/util/Properties;)LPropertyManager; reload
PropertyManager b (Ljava/nio/file/Path;)V savePropertiesFile
PropertyManager b properties
PropertyManager$EditableProperty a (LIRegistryCustom;Ljava/lang/Object;)LPropertyManager; set
Raid d ()Z isStopped
Raid e ()Z isVictory
Raid f ()Z isLoss
Raid g raiders
Raid h heroes
Raid i ()LWorld; getWorld
Raid i ticksActive
Raid j ()Z isStarted
Raid j center
Raid k ()I getGroupsSpawned
Raid k world
Raid l ()I getMaxBadOmenLevel
Raid l started
Raid m ()I getBadOmenLevel
Raid m id
Raid n ()V stop
Raid n totalHealth
Raid o badOmenLevel
Raid p ()V updateProgress
Raid p active
Raid q ()F sumMobHealth
Raid q groupsSpawned
Raid r bossBattle
Raid s postRaidTicks
Raid t ()LBlockPosition; getCenter
Raid t preRaidTicks
Raid u ()I getId
Raid u random
Raid v numGroups
Raid w status
Raid$Status a ONGOING
Raid$Status b VICTORY
Raid$Status c LOSS
Raid$Status d STOPPED
Raid$Wave a VINDICATOR
Raid$Wave b EVOKER
Raid$Wave c PILLAGER
Raid$Wave d WITCH
Raid$Wave e RAVAGER
RayTrace$BlockCollisionOption a COLLIDER
RayTrace$BlockCollisionOption b OUTLINE
RayTrace$BlockCollisionOption c VISUAL
RayTrace$FluidCollisionOption a NONE
RayTrace$FluidCollisionOption b SOURCE_ONLY
RayTrace$FluidCollisionOption c ANY
RayTrace$FluidCollisionOption d predicate
RecipeBook a recipes
RecipeBook b (LMinecraftKey;)Z hasDiscoveredRecipe
RecipeBook b toBeDisplayed
RecipeBookServer b ()LNBTTagCompound; save
RecipeBookType a CRAFTING
RecipeBookType b FURNACE
RecipeBookType c BLAST_FURNACE
RecipeBookType d SMOKER
RecipeCooking b ()F getExperience
RecipeCooking b key
RecipeCooking c group
RecipeCooking d ingredient
RecipeCooking e ()I getCookingTime
RecipeCooking e result
RecipeCooking f experience
RecipeCooking g cookingTime
RecipeItemStack c choices
RecipeItemStack f ()V buildChoices
RecipeSingleItem a ingredient
RecipeSingleItem b result
RecipeSingleItem c key
RecipeSingleItem d group
Recipes a CRAFTING
Recipes b SMELTING
Recipes c BLASTING
Recipes d SMOKING
Recipes e CAMPFIRE_COOKING
Recipes f STONECUTTING
Recipes g SMITHING
RegionFile a freeSectors
RegionFile close ()V close
RegionFile d dataFile
RegionFile e (LChunkCoordIntPair;)Z chunkExists
RegionFile g (LChunkCoordIntPair;)I getOffset
RegionFileCache a (LChunkCoordIntPair;)LNBTTagCompound; read
RegionFileCache a (LChunkCoordIntPair;LNBTTagCompound;)V write
RegionFileCache a cache
RegionFileCache b (LChunkCoordIntPair;)LRegionFile; getFile
Registry a (I)Ljava/lang/Object; fromId
RegistryBlockID a (I)Ljava/lang/Object; fromId
RegistryBlockID a (Ljava/lang/Object;)I getId
RegistryGeneration i WORLDGEN_BIOME
RegistryID a (I)Ljava/lang/Object; fromId
RegistryID a (Ljava/lang/Object;)I getId
RemoteControlCommandListener c buffer
RemoteControlCommandListener d ()V clearMessages
RemoteControlCommandListener d server
RemoteControlCommandListener e ()Ljava/lang/String; getMessages
RemoteControlCommandListener f ()LCommandListenerWrapper; getWrapper
RemoteStatusListener$RemoteStatusChallenge a time
RemoteStatusListener$RemoteStatusChallenge b token
RemoteStatusListener$RemoteStatusChallenge c identity
ReputationType a MAJOR_NEGATIVE
ReputationType b MINOR_NEGATIVE
ReputationType c MINOR_POSITIVE
ReputationType d MAJOR_POSITIVE
ReputationType e TRADING
ResourcePackLoader$Position a TOP
ResourcePackLoader$Position b BOTTOM
ResourcePackSourceFolder b file
SaddleStorage a (Z)V setSaddle
SaddleStorage a boosting
SaddleStorage b ()Z hasSaddle
SaddleStorage b currentBoostTicks
SaddleStorage c boostTicks
SaddleStorage d dataWatcher
SaddleStorage e dataWatcherBoostTicks
SaveData A ()LGeneratorSettings; getGeneratorSettings
SaveData E ()LNBTTagCompound; getCustomBossEvents
SaveData a (LEnumDifficulty;)V setDifficulty
SaveData a (LEnumGamemode;)V setGameType
SaveData b (LNBTTagCompound;)V setCustomBossEvents
SaveData g ()Ljava/lang/String; getName
SaveData m ()LEnumGamemode; getGameType
SaveData n ()Z isHardcore
SaveData s ()LEnumDifficulty; getDifficulty
SaveData t ()Z isDifficultyLocked
SavedFile a ADVANCEMENTS
SavedFile b STATS
SavedFile c PLAYERDATA
SavedFile d PLAYERS
SavedFile e LEVEL_DAT
SavedFile f GENERATED
SavedFile g DATAPACKS
SavedFile h RESOURCES_ZIP
SavedFile i ROOT
Schedule a EMPTY
Schedule b SIMPLE
Schedule c VILLAGER_BABY
Schedule d VILLAGER_DEFAULT
Scoreboard a (I)LScoreboardObjective; getObjectiveForSlot
Scoreboard a (ILScoreboardObjective;)V setDisplaySlot
Scoreboard a (LIScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V getObjectivesForCriteria
Scoreboard a (LScoreboardObjective;)V handleObjectiveAdded
Scoreboard a (LScoreboardScore;)V handleScoreChanged
Scoreboard a (LScoreboardTeam;)V handleTeamAdded
Scoreboard a (Ljava/lang/String;)V handlePlayerRemoved
Scoreboard a (Ljava/lang/String;LIScoreboardCriteria;LIChatBaseComponent;LIScoreboardCriteria$EnumScoreboardHealthDisplay;)LScoreboardObjective; registerObjective
Scoreboard a (Ljava/lang/String;LScoreboardTeam;)Z addPlayerToTeam
Scoreboard a objectivesByName
Scoreboard b (I)Ljava/lang/String; getSlotName
Scoreboard b (LScoreboardObjective;)V handleObjectiveChanged
Scoreboard b (LScoreboardTeam;)V handleTeamChanged
Scoreboard b (Ljava/lang/String;LScoreboardTeam;)V removePlayerFromTeam
Scoreboard b objectivesByCriteria
Scoreboard c ()Ljava/util/Collection; getObjectives
Scoreboard c (LScoreboardObjective;)V handleObjectiveRemoved
Scoreboard c (LScoreboardTeam;)V handleTeamRemoved
Scoreboard c (Ljava/lang/String;LScoreboardObjective;)LScoreboardScore; getPlayerScoreForObjective
Scoreboard c playerScores
Scoreboard d (LScoreboardTeam;)V removeTeam
Scoreboard d (Ljava/lang/String;)LScoreboardObjective; getObjective
Scoreboard d (Ljava/lang/String;LScoreboardObjective;)V resetPlayerScores
Scoreboard d displaySlots
Scoreboard e ()Ljava/util/Collection; getPlayers
Scoreboard e (Ljava/lang/String;)Ljava/util/Map; getPlayerObjectives
Scoreboard e teamsByName
Scoreboard f (Ljava/lang/String;)LScoreboardTeam; getTeam
Scoreboard f teamsByPlayer
Scoreboard g ()Ljava/util/Collection; getTeams
Scoreboard g (Ljava/lang/String;)LScoreboardTeam; createTeam
Scoreboard h (Ljava/lang/String;)Z removePlayerFromTeam
Scoreboard i (LScoreboardObjective;)Ljava/util/Collection; getScoresForObjective
Scoreboard i (Ljava/lang/String;)LScoreboardTeam; getPlayerTeam
Scoreboard j (LScoreboardObjective;)V unregisterObjective
Scoreboard j (Ljava/lang/String;)I getSlotForName
ScoreboardObjective a (LIChatBaseComponent;)V setDisplayName
ScoreboardObjective a (LIScoreboardCriteria$EnumScoreboardHealthDisplay;)V setRenderType
ScoreboardObjective b ()Ljava/lang/String; getName
ScoreboardObjective c ()LIScoreboardCriteria; getCriteria
ScoreboardObjective d ()LIChatBaseComponent; getDisplayName
ScoreboardObjective d displayName
ScoreboardObjective f ()LIScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
ScoreboardScore a ()V incrementScore
ScoreboardScore a (I)V addScore
ScoreboardScore b ()I getScore
ScoreboardScore b (I)V setScore
ScoreboardScore d ()LScoreboardObjective; getObjective
ScoreboardScore d playerName
ScoreboardScore e ()Ljava/lang/String; getPlayerName
ScoreboardScore e score
ScoreboardServer d (LScoreboardObjective;)Ljava/util/List; getScoreboardScorePacketsForObjective
ScoreboardServer$Action a CHANGE
ScoreboardServer$Action b REMOVE
ScoreboardTeam a (LEnumChatFormat;)V setColor
ScoreboardTeam a (LIChatBaseComponent;)V setDisplayName
ScoreboardTeam a (LScoreboardTeamBase$EnumNameTagVisibility;)V setNameTagVisibility
ScoreboardTeam a (LScoreboardTeamBase$EnumTeamPush;)V setCollisionRule
ScoreboardTeam a (Z)V setAllowFriendlyFire
ScoreboardTeam b (LIChatBaseComponent;)V setPrefix
ScoreboardTeam b (LScoreboardTeamBase$EnumNameTagVisibility;)V setDeathMessageVisibility
ScoreboardTeam b (Z)V setCanSeeFriendlyInvisibles
ScoreboardTeam c ()LIChatBaseComponent; getDisplayName
ScoreboardTeam c (LIChatBaseComponent;)V setSuffix
ScoreboardTeam e ()LIChatBaseComponent; getPrefix
ScoreboardTeam f ()LIChatBaseComponent; getSuffix
ScoreboardTeam i ()Z canSeeFriendlyInvisibles
ScoreboardTeam j ()LScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
ScoreboardTeam m ()I packOptionData
ScoreboardTeam n ()LEnumChatFormat; getColor
ScoreboardTeamBase a (LScoreboardTeamBase;)Z isAlly
ScoreboardTeamBase b ()Ljava/lang/String; getName
ScoreboardTeamBase d (LIChatBaseComponent;)LIChatMutableComponent; getFormattedName
ScoreboardTeamBase g ()Ljava/util/Collection; getPlayerNameSet
ScoreboardTeamBase h ()Z allowFriendlyFire
ScoreboardTeamBase k ()LScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
ScoreboardTeamBase l ()LScoreboardTeamBase$EnumTeamPush; getCollisionRule
ScoreboardTeamBase$EnumNameTagVisibility a ALWAYS
ScoreboardTeamBase$EnumNameTagVisibility b NEVER
ScoreboardTeamBase$EnumNameTagVisibility c HIDE_FOR_OTHER_TEAMS
ScoreboardTeamBase$EnumNameTagVisibility d HIDE_FOR_OWN_TEAM
ScoreboardTeamBase$EnumTeamPush a ALWAYS
ScoreboardTeamBase$EnumTeamPush b NEVER
ScoreboardTeamBase$EnumTeamPush c PUSH_OTHER_TEAMS
ScoreboardTeamBase$EnumTeamPush d PUSH_OWN_TEAM
ServerCommand a command
ServerCommand b source
ServerConnection f listeningChannels
ServerConnection g connectedChannels
ServerPing a (LIChatBaseComponent;)V setMOTD
ServerPing a (LServerPing$ServerData;)V setServerInfo
ServerPing a (LServerPing$ServerPingPlayerSample;)V setPlayerSample
ServerPing a (Ljava/lang/String;)V setFavicon
ServerPing c ()LServerPing$ServerData; getServerData
ServerPing$ServerData b ()I getProtocolVersion
ServerStatisticManager a ()V save
ShapeDetector$ShapeDetectorCollection b ()LEnumDirection; getFacing
ShapeDetectorBlock d ()LBlockPosition; getPosition
ShapeDetectorShape a position
ShapeDetectorShape b velocity
ShapeDetectorShape c yaw
ShapeDetectorShape d pitch
ShapedRecipes a width
ShapedRecipes b height
ShapedRecipes c items
ShapedRecipes d result
ShapedRecipes e key
ShapedRecipes f group
ShapelessRecipes a key
ShapelessRecipes b group
ShapelessRecipes c result
ShapelessRecipes d ingredients
SharedConstants a ()Lcom/mojang/bridge/game/GameVersion; getGameVersion
SharedConstants a (C)Z isAllowedChatCharacter
SharedConstants e allowedCharacters
Slot a ()I getMaxStackSize
Slot a (LEntityHuman;)Z isAllowed
Slot a (LItemStack;)Z isAllowed
Slot a index
Slot b (LItemStack;)I getMaxStackSize
Slot c inventory
Slot d (LItemStack;)V set
Slot d rawSlotIndex
Slot e ()LItemStack; getItem
Slot f ()Z hasItem
SoundCategory a MASTER
SoundCategory b MUSIC
SoundCategory c RECORDS
SoundCategory d WEATHER
SoundCategory e BLOCKS
SoundCategory f HOSTILE
SoundCategory g NEUTRAL
SoundCategory h PLAYERS
SoundCategory i AMBIENT
SoundCategory j VOICE
SoundEffectType a ()F getVolume
SoundEffectType aA fallSound
SoundEffectType au volume
SoundEffectType av pitch
SoundEffectType aw breakSound
SoundEffectType ax stepSound
SoundEffectType ay placeSound
SoundEffectType az hitSound
SoundEffectType b ()F getPitch
SoundEffectType d ()LSoundEffect; getStepSound
SoundEffectType e ()LSoundEffect; getPlaceSound
SoundEffectType g ()LSoundEffect; getFallSound
SoundEffects H BLOCK_ANCIENT_DEBRIS_BREAK
SoundEffects I BLOCK_ANCIENT_DEBRIS_STEP
SoundEffects J BLOCK_ANCIENT_DEBRIS_PLACE
SoundEffects K BLOCK_ANCIENT_DEBRIS_HIT
SoundEffects L BLOCK_ANCIENT_DEBRIS_FALL
SoundEffects M BLOCK_ANVIL_BREAK
SoundEffects N BLOCK_ANVIL_DESTROY
SoundEffects O BLOCK_ANVIL_FALL
SoundEffects P BLOCK_ANVIL_HIT
SoundEffects Q BLOCK_ANVIL_LAND
SoundEffects R BLOCK_ANVIL_PLACE
SoundEffects S BLOCK_ANVIL_STEP
SoundEffects T BLOCK_ANVIL_USE
SoundEffects U ITEM_ARMOR_EQUIP_CHAIN
SoundEffects V ITEM_ARMOR_EQUIP_DIAMOND
SoundEffects W ITEM_ARMOR_EQUIP_ELYTRA
SoundEffects X ITEM_ARMOR_EQUIP_GENERIC
SoundEffects Y ITEM_ARMOR_EQUIP_GOLD
SoundEffects Z ITEM_ARMOR_EQUIP_IRON
SoundEffects a AMBIENT_CAVE
SoundEffects aC BLOCK_BAMBOO_BREAK
SoundEffects aD BLOCK_BAMBOO_FALL
SoundEffects aE BLOCK_BAMBOO_HIT
SoundEffects aF BLOCK_BAMBOO_PLACE
SoundEffects aG BLOCK_BAMBOO_STEP
SoundEffects aH BLOCK_BAMBOO_SAPLING_BREAK
SoundEffects aI BLOCK_BAMBOO_SAPLING_HIT
SoundEffects aJ BLOCK_BAMBOO_SAPLING_PLACE
SoundEffects aK BLOCK_BARREL_CLOSE
SoundEffects aL BLOCK_BARREL_OPEN
SoundEffects aM BLOCK_BASALT_BREAK
SoundEffects aN BLOCK_BASALT_STEP
SoundEffects aO BLOCK_BASALT_PLACE
SoundEffects aP BLOCK_BASALT_HIT
SoundEffects aQ BLOCK_BASALT_FALL
SoundEffects aR ENTITY_BAT_AMBIENT
SoundEffects aS ENTITY_BAT_DEATH
SoundEffects aT ENTITY_BAT_HURT
SoundEffects aU ENTITY_BAT_LOOP
SoundEffects aV ENTITY_BAT_TAKEOFF
SoundEffects aW BLOCK_BEACON_ACTIVATE
SoundEffects aX BLOCK_BEACON_AMBIENT
SoundEffects aY BLOCK_BEACON_DEACTIVATE
SoundEffects aZ BLOCK_BEACON_POWER_SELECT
SoundEffects aa ITEM_ARMOR_EQUIP_LEATHER
SoundEffects ab ITEM_ARMOR_EQUIP_NETHERITE
SoundEffects ac ITEM_ARMOR_EQUIP_TURTLE
SoundEffects ad ENTITY_ARMOR_STAND_BREAK
SoundEffects ae ENTITY_ARMOR_STAND_FALL
SoundEffects af ENTITY_ARMOR_STAND_HIT
SoundEffects ag ENTITY_ARMOR_STAND_PLACE
SoundEffects ah ENTITY_ARROW_HIT
SoundEffects ai ENTITY_ARROW_HIT_PLAYER
SoundEffects aj ENTITY_ARROW_SHOOT
SoundEffects ak ITEM_AXE_STRIP
SoundEffects b AMBIENT_BASALT_DELTAS_ADDITIONS
SoundEffects bA BLOCK_BONE_BLOCK_FALL
SoundEffects bB BLOCK_BONE_BLOCK_HIT
SoundEffects bC BLOCK_BONE_BLOCK_PLACE
SoundEffects bD BLOCK_BONE_BLOCK_STEP
SoundEffects bE ITEM_BOOK_PAGE_TURN
SoundEffects bF ITEM_BOOK_PUT
SoundEffects bG BLOCK_BLASTFURNACE_FIRE_CRACKLE
SoundEffects bH ITEM_BOTTLE_EMPTY
SoundEffects bI ITEM_BOTTLE_FILL
SoundEffects bJ ITEM_BOTTLE_FILL_DRAGONBREATH
SoundEffects bK BLOCK_BREWING_STAND_BREW
SoundEffects bL BLOCK_BUBBLE_COLUMN_BUBBLE_POP
SoundEffects bM BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT
SoundEffects bN BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE
SoundEffects bO BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
SoundEffects bP BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE
SoundEffects bQ ITEM_BUCKET_EMPTY
SoundEffects bS ITEM_BUCKET_EMPTY_FISH
SoundEffects bT ITEM_BUCKET_EMPTY_LAVA
SoundEffects bV ITEM_BUCKET_FILL
SoundEffects bX ITEM_BUCKET_FILL_FISH
SoundEffects bY ITEM_BUCKET_FILL_LAVA
SoundEffects ba ENTITY_BEE_DEATH
SoundEffects bb ENTITY_BEE_HURT
SoundEffects bc ENTITY_BEE_LOOP_AGGRESSIVE
SoundEffects bd ENTITY_BEE_LOOP
SoundEffects be ENTITY_BEE_STING
SoundEffects bf ENTITY_BEE_POLLINATE
SoundEffects bg BLOCK_BEEHIVE_DRIP
SoundEffects bh BLOCK_BEEHIVE_ENTER
SoundEffects bi BLOCK_BEEHIVE_EXIT
SoundEffects bj BLOCK_BEEHIVE_SHEAR
SoundEffects bk BLOCK_BEEHIVE_WORK
SoundEffects bl BLOCK_BELL_USE
SoundEffects bm BLOCK_BELL_RESONATE
SoundEffects bs ENTITY_BLAZE_AMBIENT
SoundEffects bt ENTITY_BLAZE_BURN
SoundEffects bu ENTITY_BLAZE_DEATH
SoundEffects bv ENTITY_BLAZE_HURT
SoundEffects bw ENTITY_BLAZE_SHOOT
SoundEffects bx ENTITY_BOAT_PADDLE_LAND
SoundEffects by ENTITY_BOAT_PADDLE_WATER
SoundEffects bz BLOCK_BONE_BLOCK_BREAK
SoundEffects c AMBIENT_BASALT_DELTAS_LOOP
SoundEffects cD BLOCK_CHAIN_BREAK
SoundEffects cE BLOCK_CHAIN_FALL
SoundEffects cF BLOCK_CHAIN_HIT
SoundEffects cG BLOCK_CHAIN_PLACE
SoundEffects cH BLOCK_CHAIN_STEP
SoundEffects cI BLOCK_CHEST_CLOSE
SoundEffects cJ BLOCK_CHEST_LOCKED
SoundEffects cK BLOCK_CHEST_OPEN
SoundEffects cL ENTITY_CHICKEN_AMBIENT
SoundEffects cM ENTITY_CHICKEN_DEATH
SoundEffects cN ENTITY_CHICKEN_EGG
SoundEffects cO ENTITY_CHICKEN_HURT
SoundEffects cP ENTITY_CHICKEN_STEP
SoundEffects cQ BLOCK_CHORUS_FLOWER_DEATH
SoundEffects cR BLOCK_CHORUS_FLOWER_GROW
SoundEffects cS ITEM_CHORUS_FRUIT_TELEPORT
SoundEffects cT ENTITY_COD_AMBIENT
SoundEffects cU ENTITY_COD_DEATH
SoundEffects cV ENTITY_COD_FLOP
SoundEffects cW ENTITY_COD_HURT
SoundEffects cX BLOCK_COMPARATOR_CLICK
SoundEffects cY BLOCK_COMPOSTER_EMPTY
SoundEffects cZ BLOCK_COMPOSTER_FILL
SoundEffects cg BLOCK_CAMPFIRE_CRACKLE
SoundEffects co ENTITY_CAT_AMBIENT
SoundEffects cp ENTITY_CAT_STRAY_AMBIENT
SoundEffects cq ENTITY_CAT_DEATH
SoundEffects cr ENTITY_CAT_EAT
SoundEffects cs ENTITY_CAT_HISS
SoundEffects ct ENTITY_CAT_BEG_FOR_FOOD
SoundEffects cu ENTITY_CAT_HURT
SoundEffects cv ENTITY_CAT_PURR
SoundEffects cw ENTITY_CAT_PURREOW
SoundEffects d AMBIENT_BASALT_DELTAS_MOOD
SoundEffects dA ITEM_CROP_PLANT
SoundEffects dB ITEM_CROSSBOW_HIT
SoundEffects dC ITEM_CROSSBOW_LOADING_END
SoundEffects dD ITEM_CROSSBOW_LOADING_MIDDLE
SoundEffects dE ITEM_CROSSBOW_LOADING_START
SoundEffects dF ITEM_CROSSBOW_QUICK_CHARGE_1
SoundEffects dG ITEM_CROSSBOW_QUICK_CHARGE_2
SoundEffects dH ITEM_CROSSBOW_QUICK_CHARGE_3
SoundEffects dI ITEM_CROSSBOW_SHOOT
SoundEffects dJ BLOCK_DISPENSER_DISPENSE
SoundEffects dK BLOCK_DISPENSER_FAIL
SoundEffects dL BLOCK_DISPENSER_LAUNCH
SoundEffects dM ENTITY_DOLPHIN_AMBIENT
SoundEffects dN ENTITY_DOLPHIN_AMBIENT_WATER
SoundEffects dO ENTITY_DOLPHIN_ATTACK
SoundEffects dP ENTITY_DOLPHIN_DEATH
SoundEffects dQ ENTITY_DOLPHIN_EAT
SoundEffects dR ENTITY_DOLPHIN_HURT
SoundEffects dS ENTITY_DOLPHIN_JUMP
SoundEffects dT ENTITY_DOLPHIN_PLAY
SoundEffects dU ENTITY_DOLPHIN_SPLASH
SoundEffects dV ENTITY_DOLPHIN_SWIM
SoundEffects dW ENTITY_DONKEY_AMBIENT
SoundEffects dX ENTITY_DONKEY_ANGRY
SoundEffects dY ENTITY_DONKEY_CHEST
SoundEffects dZ ENTITY_DONKEY_DEATH
SoundEffects da BLOCK_COMPOSTER_FILL_SUCCESS
SoundEffects db BLOCK_COMPOSTER_READY
SoundEffects dc BLOCK_CONDUIT_ACTIVATE
SoundEffects dd BLOCK_CONDUIT_AMBIENT
SoundEffects de BLOCK_CONDUIT_AMBIENT_SHORT
SoundEffects df BLOCK_CONDUIT_ATTACK_TARGET
SoundEffects dg BLOCK_CONDUIT_DEACTIVATE
SoundEffects dm BLOCK_CORAL_BLOCK_BREAK
SoundEffects dn BLOCK_CORAL_BLOCK_FALL
SoundEffects do BLOCK_CORAL_BLOCK_HIT
SoundEffects dp BLOCK_CORAL_BLOCK_PLACE
SoundEffects dq BLOCK_CORAL_BLOCK_STEP
SoundEffects dr ENTITY_COW_AMBIENT
SoundEffects ds ENTITY_COW_DEATH
SoundEffects dt ENTITY_COW_HURT
SoundEffects du ENTITY_COW_MILK
SoundEffects dv ENTITY_COW_STEP
SoundEffects dw ENTITY_CREEPER_DEATH
SoundEffects dx ENTITY_CREEPER_HURT
SoundEffects dy ENTITY_CREEPER_PRIMED
SoundEffects dz BLOCK_CROP_BREAK
SoundEffects e AMBIENT_CRIMSON_FOREST_ADDITIONS
SoundEffects eA ENTITY_DROWNED_STEP
SoundEffects eB ENTITY_DROWNED_SWIM
SoundEffects eD ENTITY_EGG_THROW
SoundEffects eE ENTITY_ELDER_GUARDIAN_AMBIENT
SoundEffects eF ENTITY_ELDER_GUARDIAN_AMBIENT_LAND
SoundEffects eG ENTITY_ELDER_GUARDIAN_CURSE
SoundEffects eH ENTITY_ELDER_GUARDIAN_DEATH
SoundEffects eI ENTITY_ELDER_GUARDIAN_DEATH_LAND
SoundEffects eJ ENTITY_ELDER_GUARDIAN_FLOP
SoundEffects eK ENTITY_ELDER_GUARDIAN_HURT
SoundEffects eL ENTITY_ELDER_GUARDIAN_HURT_LAND
SoundEffects eM ITEM_ELYTRA_FLYING
SoundEffects eN BLOCK_ENCHANTMENT_TABLE_USE
SoundEffects eO BLOCK_ENDER_CHEST_CLOSE
SoundEffects eP BLOCK_ENDER_CHEST_OPEN
SoundEffects eQ ENTITY_ENDER_DRAGON_AMBIENT
SoundEffects eR ENTITY_ENDER_DRAGON_DEATH
SoundEffects eS ENTITY_DRAGON_FIREBALL_EXPLODE
SoundEffects eT ENTITY_ENDER_DRAGON_FLAP
SoundEffects eU ENTITY_ENDER_DRAGON_GROWL
SoundEffects eV ENTITY_ENDER_DRAGON_HURT
SoundEffects eW ENTITY_ENDER_DRAGON_SHOOT
SoundEffects eX ENTITY_ENDER_EYE_DEATH
SoundEffects eY ENTITY_ENDER_EYE_LAUNCH
SoundEffects eZ ENTITY_ENDERMAN_AMBIENT
SoundEffects ea ENTITY_DONKEY_EAT
SoundEffects eb ENTITY_DONKEY_HURT
SoundEffects et ENTITY_DROWNED_AMBIENT
SoundEffects eu ENTITY_DROWNED_AMBIENT_WATER
SoundEffects ev ENTITY_DROWNED_DEATH
SoundEffects ew ENTITY_DROWNED_DEATH_WATER
SoundEffects ex ENTITY_DROWNED_HURT
SoundEffects ey ENTITY_DROWNED_HURT_WATER
SoundEffects ez ENTITY_DROWNED_SHOOT
SoundEffects f AMBIENT_CRIMSON_FOREST_LOOP
SoundEffects fA ITEM_FIRECHARGE_USE
SoundEffects fB ENTITY_FIREWORK_ROCKET_BLAST
SoundEffects fC ENTITY_FIREWORK_ROCKET_BLAST_FAR
SoundEffects fD ENTITY_FIREWORK_ROCKET_LARGE_BLAST
SoundEffects fE ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR
SoundEffects fF ENTITY_FIREWORK_ROCKET_LAUNCH
SoundEffects fG ENTITY_FIREWORK_ROCKET_SHOOT
SoundEffects fH ENTITY_FIREWORK_ROCKET_TWINKLE
SoundEffects fI ENTITY_FIREWORK_ROCKET_TWINKLE_FAR
SoundEffects fJ BLOCK_FIRE_AMBIENT
SoundEffects fK BLOCK_FIRE_EXTINGUISH
SoundEffects fL ENTITY_FISH_SWIM
SoundEffects fM ENTITY_FISHING_BOBBER_RETRIEVE
SoundEffects fN ENTITY_FISHING_BOBBER_SPLASH
SoundEffects fO ENTITY_FISHING_BOBBER_THROW
SoundEffects fP ITEM_FLINTANDSTEEL_USE
SoundEffects fV ENTITY_FOX_AGGRO
SoundEffects fW ENTITY_FOX_AMBIENT
SoundEffects fX ENTITY_FOX_BITE
SoundEffects fY ENTITY_FOX_DEATH
SoundEffects fZ ENTITY_FOX_EAT
SoundEffects fa ENTITY_ENDERMAN_DEATH
SoundEffects fb ENTITY_ENDERMAN_HURT
SoundEffects fc ENTITY_ENDERMAN_SCREAM
SoundEffects fd ENTITY_ENDERMAN_STARE
SoundEffects fe ENTITY_ENDERMAN_TELEPORT
SoundEffects ff ENTITY_ENDERMITE_AMBIENT
SoundEffects fg ENTITY_ENDERMITE_DEATH
SoundEffects fh ENTITY_ENDERMITE_HURT
SoundEffects fi ENTITY_ENDERMITE_STEP
SoundEffects fj ENTITY_ENDER_PEARL_THROW
SoundEffects fk BLOCK_END_GATEWAY_SPAWN
SoundEffects fl BLOCK_END_PORTAL_FRAME_FILL
SoundEffects fm BLOCK_END_PORTAL_SPAWN
SoundEffects fn ENTITY_EVOKER_AMBIENT
SoundEffects fo ENTITY_EVOKER_CAST_SPELL
SoundEffects fp ENTITY_EVOKER_CELEBRATE
SoundEffects fq ENTITY_EVOKER_DEATH
SoundEffects fr ENTITY_EVOKER_FANGS_ATTACK
SoundEffects fs ENTITY_EVOKER_HURT
SoundEffects ft ENTITY_EVOKER_PREPARE_ATTACK
SoundEffects fu ENTITY_EVOKER_PREPARE_SUMMON
SoundEffects fv ENTITY_EVOKER_PREPARE_WOLOLO
SoundEffects fw ENTITY_EXPERIENCE_BOTTLE_THROW
SoundEffects fx ENTITY_EXPERIENCE_ORB_PICKUP
SoundEffects fy BLOCK_FENCE_GATE_CLOSE
SoundEffects fz BLOCK_FENCE_GATE_OPEN
SoundEffects g AMBIENT_CRIMSON_FOREST_MOOD
SoundEffects gA ENTITY_GHAST_SCREAM
SoundEffects gB ENTITY_GHAST_SHOOT
SoundEffects gC ENTITY_GHAST_WARN
SoundEffects gD BLOCK_GILDED_BLACKSTONE_BREAK
SoundEffects gE BLOCK_GILDED_BLACKSTONE_FALL
SoundEffects gF BLOCK_GILDED_BLACKSTONE_HIT
SoundEffects gG BLOCK_GILDED_BLACKSTONE_PLACE
SoundEffects gH BLOCK_GILDED_BLACKSTONE_STEP
SoundEffects gI BLOCK_GLASS_BREAK
SoundEffects gJ BLOCK_GLASS_FALL
SoundEffects gK BLOCK_GLASS_HIT
SoundEffects gL BLOCK_GLASS_PLACE
SoundEffects gM BLOCK_GLASS_STEP
SoundEffects gS BLOCK_GRASS_BREAK
SoundEffects gT BLOCK_GRASS_FALL
SoundEffects gU BLOCK_GRASS_HIT
SoundEffects gV BLOCK_GRASS_PLACE
SoundEffects gW BLOCK_GRASS_STEP
SoundEffects gX BLOCK_GRAVEL_BREAK
SoundEffects gY BLOCK_GRAVEL_FALL
SoundEffects gZ BLOCK_GRAVEL_HIT
SoundEffects ga ENTITY_FOX_HURT
SoundEffects gb ENTITY_FOX_SCREECH
SoundEffects gc ENTITY_FOX_SLEEP
SoundEffects gd ENTITY_FOX_SNIFF
SoundEffects ge ENTITY_FOX_SPIT
SoundEffects gf ENTITY_FOX_TELEPORT
SoundEffects gg BLOCK_ROOTS_BREAK
SoundEffects gh BLOCK_ROOTS_STEP
SoundEffects gi BLOCK_ROOTS_PLACE
SoundEffects gj BLOCK_ROOTS_HIT
SoundEffects gk BLOCK_ROOTS_FALL
SoundEffects gl BLOCK_FURNACE_FIRE_CRACKLE
SoundEffects gm ENTITY_GENERIC_BIG_FALL
SoundEffects gn ENTITY_GENERIC_BURN
SoundEffects go ENTITY_GENERIC_DEATH
SoundEffects gp ENTITY_GENERIC_DRINK
SoundEffects gq ENTITY_GENERIC_EAT
SoundEffects gr ENTITY_GENERIC_EXPLODE
SoundEffects gs ENTITY_GENERIC_EXTINGUISH_FIRE
SoundEffects gt ENTITY_GENERIC_HURT
SoundEffects gu ENTITY_GENERIC_SMALL_FALL
SoundEffects gv ENTITY_GENERIC_SPLASH
SoundEffects gw ENTITY_GENERIC_SWIM
SoundEffects gx ENTITY_GHAST_AMBIENT
SoundEffects gy ENTITY_GHAST_DEATH
SoundEffects gz ENTITY_GHAST_HURT
SoundEffects h AMBIENT_NETHER_WASTES_ADDITIONS
SoundEffects hA BLOCK_HONEY_BLOCK_FALL
SoundEffects hB BLOCK_HONEY_BLOCK_HIT
SoundEffects hC BLOCK_HONEY_BLOCK_PLACE
SoundEffects hD BLOCK_HONEY_BLOCK_SLIDE
SoundEffects hE BLOCK_HONEY_BLOCK_STEP
SoundEffects hF ITEM_HONEY_BOTTLE_DRINK
SoundEffects hG ENTITY_HORSE_AMBIENT
SoundEffects hH ENTITY_HORSE_ANGRY
SoundEffects hI ENTITY_HORSE_ARMOR
SoundEffects hJ ENTITY_HORSE_BREATHE
SoundEffects hK ENTITY_HORSE_DEATH
SoundEffects hL ENTITY_HORSE_EAT
SoundEffects hM ENTITY_HORSE_GALLOP
SoundEffects hN ENTITY_HORSE_HURT
SoundEffects hO ENTITY_HORSE_JUMP
SoundEffects hP ENTITY_HORSE_LAND
SoundEffects hQ ENTITY_HORSE_SADDLE
SoundEffects hR ENTITY_HORSE_STEP
SoundEffects hS ENTITY_HORSE_STEP_WOOD
SoundEffects hT ENTITY_HOSTILE_BIG_FALL
SoundEffects hU ENTITY_HOSTILE_DEATH
SoundEffects hV ENTITY_HOSTILE_HURT
SoundEffects hW ENTITY_HOSTILE_SMALL_FALL
SoundEffects hX ENTITY_HOSTILE_SPLASH
SoundEffects hY ENTITY_HOSTILE_SWIM
SoundEffects hZ ENTITY_HUSK_AMBIENT
SoundEffects ha BLOCK_GRAVEL_PLACE
SoundEffects hb BLOCK_GRAVEL_STEP
SoundEffects hc BLOCK_GRINDSTONE_USE
SoundEffects hd ENTITY_GUARDIAN_AMBIENT
SoundEffects he ENTITY_GUARDIAN_AMBIENT_LAND
SoundEffects hf ENTITY_GUARDIAN_ATTACK
SoundEffects hg ENTITY_GUARDIAN_DEATH
SoundEffects hh ENTITY_GUARDIAN_DEATH_LAND
SoundEffects hi ENTITY_GUARDIAN_FLOP
SoundEffects hj ENTITY_GUARDIAN_HURT
SoundEffects hk ENTITY_GUARDIAN_HURT_LAND
SoundEffects hq ITEM_HOE_TILL
SoundEffects hr ENTITY_HOGLIN_AMBIENT
SoundEffects hs ENTITY_HOGLIN_ANGRY
SoundEffects ht ENTITY_HOGLIN_ATTACK
SoundEffects hu ENTITY_HOGLIN_CONVERTED_TO_ZOMBIFIED
SoundEffects hv ENTITY_HOGLIN_DEATH
SoundEffects hw ENTITY_HOGLIN_HURT
SoundEffects hx ENTITY_HOGLIN_RETREAT
SoundEffects hy ENTITY_HOGLIN_STEP
SoundEffects hz BLOCK_HONEY_BLOCK_BREAK
SoundEffects i AMBIENT_NETHER_WASTES_LOOP
SoundEffects iA ENTITY_ITEM_FRAME_ROTATE_ITEM
SoundEffects iB ENTITY_ITEM_BREAK
SoundEffects iC ENTITY_ITEM_PICKUP
SoundEffects iD BLOCK_LADDER_BREAK
SoundEffects iE BLOCK_LADDER_FALL
SoundEffects iF BLOCK_LADDER_HIT
SoundEffects iG BLOCK_LADDER_PLACE
SoundEffects iH BLOCK_LADDER_STEP
SoundEffects iI BLOCK_LANTERN_BREAK
SoundEffects iJ BLOCK_LANTERN_FALL
SoundEffects iK BLOCK_LANTERN_HIT
SoundEffects iL BLOCK_LANTERN_PLACE
SoundEffects iM BLOCK_LANTERN_STEP
SoundEffects iP BLOCK_LAVA_AMBIENT
SoundEffects iQ BLOCK_LAVA_EXTINGUISH
SoundEffects iR BLOCK_LAVA_POP
SoundEffects iS ENTITY_LEASH_KNOT_BREAK
SoundEffects iT ENTITY_LEASH_KNOT_PLACE
SoundEffects iU BLOCK_LEVER_CLICK
SoundEffects iV ENTITY_LIGHTNING_BOLT_IMPACT
SoundEffects iW ENTITY_LIGHTNING_BOLT_THUNDER
SoundEffects iX ENTITY_LINGERING_POTION_THROW
SoundEffects iY ENTITY_LLAMA_AMBIENT
SoundEffects iZ ENTITY_LLAMA_ANGRY
SoundEffects ia ENTITY_HUSK_CONVERTED_TO_ZOMBIE
SoundEffects ib ENTITY_HUSK_DEATH
SoundEffects ic ENTITY_HUSK_HURT
SoundEffects id ENTITY_HUSK_STEP
SoundEffects ie ENTITY_ILLUSIONER_AMBIENT
SoundEffects if ENTITY_ILLUSIONER_CAST_SPELL
SoundEffects ig ENTITY_ILLUSIONER_DEATH
SoundEffects ih ENTITY_ILLUSIONER_HURT
SoundEffects ii ENTITY_ILLUSIONER_MIRROR_MOVE
SoundEffects ij ENTITY_ILLUSIONER_PREPARE_BLINDNESS
SoundEffects ik ENTITY_ILLUSIONER_PREPARE_MIRROR
SoundEffects im BLOCK_IRON_DOOR_CLOSE
SoundEffects in BLOCK_IRON_DOOR_OPEN
SoundEffects io ENTITY_IRON_GOLEM_ATTACK
SoundEffects ip ENTITY_IRON_GOLEM_DAMAGE
SoundEffects iq ENTITY_IRON_GOLEM_DEATH
SoundEffects ir ENTITY_IRON_GOLEM_HURT
SoundEffects is ENTITY_IRON_GOLEM_REPAIR
SoundEffects it ENTITY_IRON_GOLEM_STEP
SoundEffects iu BLOCK_IRON_TRAPDOOR_CLOSE
SoundEffects iv BLOCK_IRON_TRAPDOOR_OPEN
SoundEffects iw ENTITY_ITEM_FRAME_ADD_ITEM
SoundEffects ix ENTITY_ITEM_FRAME_BREAK
SoundEffects iy ENTITY_ITEM_FRAME_PLACE
SoundEffects iz ENTITY_ITEM_FRAME_REMOVE_ITEM
SoundEffects j AMBIENT_NETHER_WASTES_MOOD
SoundEffects jA BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF
SoundEffects jB BLOCK_METAL_PRESSURE_PLATE_CLICK_ON
SoundEffects jC BLOCK_METAL_STEP
SoundEffects jE ENTITY_MINECART_INSIDE
SoundEffects jF ENTITY_MINECART_RIDING
SoundEffects jG ENTITY_MOOSHROOM_CONVERT
SoundEffects jH ENTITY_MOOSHROOM_EAT
SoundEffects jI ENTITY_MOOSHROOM_MILK
SoundEffects jJ ENTITY_MOOSHROOM_SUSPICIOUS_MILK
SoundEffects jK ENTITY_MOOSHROOM_SHEAR
SoundEffects jV ENTITY_MULE_AMBIENT
SoundEffects jW ENTITY_MULE_ANGRY
SoundEffects jX ENTITY_MULE_CHEST
SoundEffects jY ENTITY_MULE_DEATH
SoundEffects jZ ENTITY_MULE_EAT
SoundEffects ja ENTITY_LLAMA_CHEST
SoundEffects jb ENTITY_LLAMA_DEATH
SoundEffects jc ENTITY_LLAMA_EAT
SoundEffects jd ENTITY_LLAMA_HURT
SoundEffects je ENTITY_LLAMA_SPIT
SoundEffects jf ENTITY_LLAMA_STEP
SoundEffects jg ENTITY_LLAMA_SWAG
SoundEffects jh ENTITY_MAGMA_CUBE_DEATH_SMALL
SoundEffects ji BLOCK_LODESTONE_BREAK
SoundEffects jj BLOCK_LODESTONE_STEP
SoundEffects jk BLOCK_LODESTONE_PLACE
SoundEffects jl BLOCK_LODESTONE_HIT
SoundEffects jm BLOCK_LODESTONE_FALL
SoundEffects jn ITEM_LODESTONE_COMPASS_LOCK
SoundEffects jo ENTITY_MAGMA_CUBE_DEATH
SoundEffects jp ENTITY_MAGMA_CUBE_HURT
SoundEffects jq ENTITY_MAGMA_CUBE_HURT_SMALL
SoundEffects jr ENTITY_MAGMA_CUBE_JUMP
SoundEffects js ENTITY_MAGMA_CUBE_SQUISH
SoundEffects jt ENTITY_MAGMA_CUBE_SQUISH_SMALL
SoundEffects jw BLOCK_METAL_BREAK
SoundEffects jx BLOCK_METAL_FALL
SoundEffects jy BLOCK_METAL_HIT
SoundEffects jz BLOCK_METAL_PLACE
SoundEffects k AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
SoundEffects kA BLOCK_NETHER_BRICKS_BREAK
SoundEffects kB BLOCK_NETHER_BRICKS_STEP
SoundEffects kC BLOCK_NETHER_BRICKS_PLACE
SoundEffects kD BLOCK_NETHER_BRICKS_HIT
SoundEffects kE BLOCK_NETHER_BRICKS_FALL
SoundEffects kF BLOCK_NETHER_WART_BREAK
SoundEffects kG ITEM_NETHER_WART_PLANT
SoundEffects kH BLOCK_STEM_BREAK
SoundEffects kI BLOCK_STEM_STEP
SoundEffects kJ BLOCK_STEM_PLACE
SoundEffects kK BLOCK_STEM_HIT
SoundEffects kL BLOCK_STEM_FALL
SoundEffects kM BLOCK_NYLIUM_BREAK
SoundEffects kN BLOCK_NYLIUM_STEP
SoundEffects kO BLOCK_NYLIUM_PLACE
SoundEffects kP BLOCK_NYLIUM_HIT
SoundEffects kQ BLOCK_NYLIUM_FALL
SoundEffects kR BLOCK_NETHER_SPROUTS_BREAK
SoundEffects kS BLOCK_NETHER_SPROUTS_STEP
SoundEffects kT BLOCK_NETHER_SPROUTS_PLACE
SoundEffects kU BLOCK_NETHER_SPROUTS_HIT
SoundEffects kV BLOCK_NETHER_SPROUTS_FALL
SoundEffects kW BLOCK_FUNGUS_BREAK
SoundEffects kX BLOCK_FUNGUS_STEP
SoundEffects kY BLOCK_FUNGUS_PLACE
SoundEffects kZ BLOCK_FUNGUS_HIT
SoundEffects ka ENTITY_MULE_HURT
SoundEffects kb MUSIC_CREATIVE
SoundEffects kc MUSIC_CREDITS
SoundEffects kd MUSIC_DISC_11
SoundEffects ke MUSIC_DISC_13
SoundEffects kf MUSIC_DISC_BLOCKS
SoundEffects kg MUSIC_DISC_CAT
SoundEffects kh MUSIC_DISC_CHIRP
SoundEffects ki MUSIC_DISC_FAR
SoundEffects kj MUSIC_DISC_MALL
SoundEffects kk MUSIC_DISC_MELLOHI
SoundEffects kl MUSIC_DISC_PIGSTEP
SoundEffects km MUSIC_DISC_STAL
SoundEffects kn MUSIC_DISC_STRAD
SoundEffects ko MUSIC_DISC_WAIT
SoundEffects kp MUSIC_DISC_WARD
SoundEffects kq MUSIC_DRAGON
SoundEffects kr MUSIC_END
SoundEffects ks MUSIC_GAME
SoundEffects kt MUSIC_MENU
SoundEffects ku MUSIC_NETHER_BASALT_DELTAS
SoundEffects kv MUSIC_NETHER_NETHER_WASTES
SoundEffects kw MUSIC_NETHER_SOUL_SAND_VALLEY
SoundEffects kx MUSIC_NETHER_CRIMSON_FOREST
SoundEffects ky MUSIC_NETHER_WARPED_FOREST
SoundEffects kz MUSIC_UNDER_WATER
SoundEffects l AMBIENT_SOUL_SAND_VALLEY_LOOP
SoundEffects lA BLOCK_NOTE_BLOCK_GUITAR
SoundEffects lB BLOCK_NOTE_BLOCK_HARP
SoundEffects lC BLOCK_NOTE_BLOCK_HAT
SoundEffects lD BLOCK_NOTE_BLOCK_PLING
SoundEffects lE BLOCK_NOTE_BLOCK_SNARE
SoundEffects lF BLOCK_NOTE_BLOCK_XYLOPHONE
SoundEffects lG BLOCK_NOTE_BLOCK_IRON_XYLOPHONE
SoundEffects lH BLOCK_NOTE_BLOCK_COW_BELL
SoundEffects lI BLOCK_NOTE_BLOCK_DIDGERIDOO
SoundEffects lJ BLOCK_NOTE_BLOCK_BIT
SoundEffects lK BLOCK_NOTE_BLOCK_BANJO
SoundEffects lL ENTITY_OCELOT_HURT
SoundEffects lM ENTITY_OCELOT_AMBIENT
SoundEffects lN ENTITY_OCELOT_DEATH
SoundEffects lO ENTITY_PAINTING_BREAK
SoundEffects lP ENTITY_PAINTING_PLACE
SoundEffects lQ ENTITY_PANDA_PRE_SNEEZE
SoundEffects lR ENTITY_PANDA_SNEEZE
SoundEffects lS ENTITY_PANDA_AMBIENT
SoundEffects lT ENTITY_PANDA_DEATH
SoundEffects lU ENTITY_PANDA_EAT
SoundEffects lV ENTITY_PANDA_STEP
SoundEffects lW ENTITY_PANDA_CANT_BREED
SoundEffects lX ENTITY_PANDA_AGGRESSIVE_AMBIENT
SoundEffects lY ENTITY_PANDA_WORRIED_AMBIENT
SoundEffects lZ ENTITY_PANDA_HURT
SoundEffects la BLOCK_FUNGUS_FALL
SoundEffects lb BLOCK_WEEPING_VINES_BREAK
SoundEffects lc BLOCK_WEEPING_VINES_STEP
SoundEffects ld BLOCK_WEEPING_VINES_PLACE
SoundEffects le BLOCK_WEEPING_VINES_HIT
SoundEffects lf BLOCK_WEEPING_VINES_FALL
SoundEffects lg BLOCK_WART_BLOCK_BREAK
SoundEffects lh BLOCK_WART_BLOCK_STEP
SoundEffects li BLOCK_WART_BLOCK_PLACE
SoundEffects lj BLOCK_WART_BLOCK_HIT
SoundEffects lk BLOCK_WART_BLOCK_FALL
SoundEffects ll BLOCK_NETHERITE_BLOCK_BREAK
SoundEffects lm BLOCK_NETHERITE_BLOCK_STEP
SoundEffects ln BLOCK_NETHERITE_BLOCK_PLACE
SoundEffects lo BLOCK_NETHERITE_BLOCK_HIT
SoundEffects lp BLOCK_NETHERITE_BLOCK_FALL
SoundEffects lq BLOCK_NETHERRACK_BREAK
SoundEffects lr BLOCK_NETHERRACK_STEP
SoundEffects ls BLOCK_NETHERRACK_PLACE
SoundEffects lt BLOCK_NETHERRACK_HIT
SoundEffects lu BLOCK_NETHERRACK_FALL
SoundEffects lv BLOCK_NOTE_BLOCK_BASEDRUM
SoundEffects lw BLOCK_NOTE_BLOCK_BASS
SoundEffects lx BLOCK_NOTE_BLOCK_BELL
SoundEffects ly BLOCK_NOTE_BLOCK_CHIME
SoundEffects lz BLOCK_NOTE_BLOCK_FLUTE
SoundEffects m AMBIENT_SOUL_SAND_VALLEY_MOOD
SoundEffects mA ENTITY_PARROT_IMITATE_SKELETON
SoundEffects mB ENTITY_PARROT_IMITATE_SLIME
SoundEffects mC ENTITY_PARROT_IMITATE_SPIDER
SoundEffects mD ENTITY_PARROT_IMITATE_STRAY
SoundEffects mE ENTITY_PARROT_IMITATE_VEX
SoundEffects mF ENTITY_PARROT_IMITATE_VINDICATOR
SoundEffects mG ENTITY_PARROT_IMITATE_WITCH
SoundEffects mH ENTITY_PARROT_IMITATE_WITHER
SoundEffects mI ENTITY_PARROT_IMITATE_WITHER_SKELETON
SoundEffects mJ ENTITY_PARROT_IMITATE_ZOGLIN
SoundEffects mK ENTITY_PARROT_IMITATE_ZOMBIE
SoundEffects mL ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER
SoundEffects mM ENTITY_PARROT_STEP
SoundEffects mN ENTITY_PHANTOM_AMBIENT
SoundEffects mO ENTITY_PHANTOM_BITE
SoundEffects mP ENTITY_PHANTOM_DEATH
SoundEffects mQ ENTITY_PHANTOM_FLAP
SoundEffects mR ENTITY_PHANTOM_HURT
SoundEffects mS ENTITY_PHANTOM_SWOOP
SoundEffects mT ENTITY_PIG_AMBIENT
SoundEffects mU ENTITY_PIG_DEATH
SoundEffects mV ENTITY_PIG_HURT
SoundEffects mW ENTITY_PIG_SADDLE
SoundEffects mX ENTITY_PIG_STEP
SoundEffects mY ENTITY_PIGLIN_ADMIRING_ITEM
SoundEffects mZ ENTITY_PIGLIN_AMBIENT
SoundEffects ma ENTITY_PANDA_BITE
SoundEffects mb ENTITY_PARROT_AMBIENT
SoundEffects mc ENTITY_PARROT_DEATH
SoundEffects md ENTITY_PARROT_EAT
SoundEffects me ENTITY_PARROT_FLY
SoundEffects mf ENTITY_PARROT_HURT
SoundEffects mg ENTITY_PARROT_IMITATE_BLAZE
SoundEffects mh ENTITY_PARROT_IMITATE_CREEPER
SoundEffects mi ENTITY_PARROT_IMITATE_DROWNED
SoundEffects mj ENTITY_PARROT_IMITATE_ELDER_GUARDIAN
SoundEffects mk ENTITY_PARROT_IMITATE_ENDER_DRAGON
SoundEffects ml ENTITY_PARROT_IMITATE_ENDERMITE
SoundEffects mm ENTITY_PARROT_IMITATE_EVOKER
SoundEffects mn ENTITY_PARROT_IMITATE_GHAST
SoundEffects mo ENTITY_PARROT_IMITATE_GUARDIAN
SoundEffects mp ENTITY_PARROT_IMITATE_HOGLIN
SoundEffects mq ENTITY_PARROT_IMITATE_HUSK
SoundEffects mr ENTITY_PARROT_IMITATE_ILLUSIONER
SoundEffects ms ENTITY_PARROT_IMITATE_MAGMA_CUBE
SoundEffects mt ENTITY_PARROT_IMITATE_PHANTOM
SoundEffects mu ENTITY_PARROT_IMITATE_PIGLIN
SoundEffects mv ENTITY_PARROT_IMITATE_PIGLIN_BRUTE
SoundEffects mw ENTITY_PARROT_IMITATE_PILLAGER
SoundEffects mx ENTITY_PARROT_IMITATE_RAVAGER
SoundEffects my ENTITY_PARROT_IMITATE_SHULKER
SoundEffects mz ENTITY_PARROT_IMITATE_SILVERFISH
SoundEffects n AMBIENT_WARPED_FOREST_ADDITIONS
SoundEffects nA ENTITY_PLAYER_BIG_FALL
SoundEffects nB ENTITY_PLAYER_BREATH
SoundEffects nC ENTITY_PLAYER_BURP
SoundEffects nD ENTITY_PLAYER_DEATH
SoundEffects nE ENTITY_PLAYER_HURT
SoundEffects nF ENTITY_PLAYER_HURT_DROWN
SoundEffects nH ENTITY_PLAYER_HURT_ON_FIRE
SoundEffects nI ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH
SoundEffects nJ ENTITY_PLAYER_LEVELUP
SoundEffects nK ENTITY_PLAYER_SMALL_FALL
SoundEffects nL ENTITY_PLAYER_SPLASH
SoundEffects nM ENTITY_PLAYER_SPLASH_HIGH_SPEED
SoundEffects nN ENTITY_PLAYER_SWIM
SoundEffects nO ENTITY_POLAR_BEAR_AMBIENT
SoundEffects nP ENTITY_POLAR_BEAR_AMBIENT_BABY
SoundEffects nQ ENTITY_POLAR_BEAR_DEATH
SoundEffects nR ENTITY_POLAR_BEAR_HURT
SoundEffects nS ENTITY_POLAR_BEAR_STEP
SoundEffects nT ENTITY_POLAR_BEAR_WARNING
SoundEffects nU BLOCK_PORTAL_AMBIENT
SoundEffects nV BLOCK_PORTAL_TRAVEL
SoundEffects nW BLOCK_PORTAL_TRIGGER
SoundEffects na ENTITY_PIGLIN_ANGRY
SoundEffects nb ENTITY_PIGLIN_CELEBRATE
SoundEffects nc ENTITY_PIGLIN_DEATH
SoundEffects nd ENTITY_PIGLIN_JEALOUS
SoundEffects ne ENTITY_PIGLIN_HURT
SoundEffects nf ENTITY_PIGLIN_RETREAT
SoundEffects ng ENTITY_PIGLIN_STEP
SoundEffects nh ENTITY_PIGLIN_CONVERTED_TO_ZOMBIFIED
SoundEffects ni ENTITY_PIGLIN_BRUTE_AMBIENT
SoundEffects nj ENTITY_PIGLIN_BRUTE_ANGRY
SoundEffects nk ENTITY_PIGLIN_BRUTE_DEATH
SoundEffects nl ENTITY_PIGLIN_BRUTE_HURT
SoundEffects nm ENTITY_PIGLIN_BRUTE_STEP
SoundEffects nn ENTITY_PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
SoundEffects no ENTITY_PILLAGER_AMBIENT
SoundEffects np ENTITY_PILLAGER_CELEBRATE
SoundEffects nq ENTITY_PILLAGER_DEATH
SoundEffects nr ENTITY_PILLAGER_HURT
SoundEffects ns BLOCK_PISTON_CONTRACT
SoundEffects nt BLOCK_PISTON_EXTEND
SoundEffects nu ENTITY_PLAYER_ATTACK_CRIT
SoundEffects nv ENTITY_PLAYER_ATTACK_KNOCKBACK
SoundEffects nw ENTITY_PLAYER_ATTACK_NODAMAGE
SoundEffects nx ENTITY_PLAYER_ATTACK_STRONG
SoundEffects ny ENTITY_PLAYER_ATTACK_SWEEP
SoundEffects nz ENTITY_PLAYER_ATTACK_WEAK
SoundEffects o AMBIENT_WARPED_FOREST_LOOP
SoundEffects oA BLOCK_NETHER_GOLD_ORE_HIT
SoundEffects oB BLOCK_NETHER_GOLD_ORE_PLACE
SoundEffects oC BLOCK_NETHER_GOLD_ORE_STEP
SoundEffects oD BLOCK_NETHER_ORE_BREAK
SoundEffects oE BLOCK_NETHER_ORE_FALL
SoundEffects oF BLOCK_NETHER_ORE_HIT
SoundEffects oG BLOCK_NETHER_ORE_PLACE
SoundEffects oH BLOCK_NETHER_ORE_STEP
SoundEffects oI BLOCK_REDSTONE_TORCH_BURNOUT
SoundEffects oJ BLOCK_RESPAWN_ANCHOR_AMBIENT
SoundEffects oK BLOCK_RESPAWN_ANCHOR_CHARGE
SoundEffects oL BLOCK_RESPAWN_ANCHOR_DEPLETE
SoundEffects oM BLOCK_RESPAWN_ANCHOR_SET_SPAWN
SoundEffects oS ENTITY_SALMON_AMBIENT
SoundEffects oT ENTITY_SALMON_DEATH
SoundEffects oU ENTITY_SALMON_FLOP
SoundEffects oV ENTITY_SALMON_HURT
SoundEffects oW BLOCK_SAND_BREAK
SoundEffects oX BLOCK_SAND_FALL
SoundEffects oY BLOCK_SAND_HIT
SoundEffects oZ BLOCK_SAND_PLACE
SoundEffects oc ENTITY_PUFFER_FISH_AMBIENT
SoundEffects od ENTITY_PUFFER_FISH_BLOW_OUT
SoundEffects oe ENTITY_PUFFER_FISH_BLOW_UP
SoundEffects of ENTITY_PUFFER_FISH_DEATH
SoundEffects og ENTITY_PUFFER_FISH_FLOP
SoundEffects oh ENTITY_PUFFER_FISH_HURT
SoundEffects oi ENTITY_PUFFER_FISH_STING
SoundEffects oj BLOCK_PUMPKIN_CARVE
SoundEffects ok ENTITY_RABBIT_AMBIENT
SoundEffects ol ENTITY_RABBIT_ATTACK
SoundEffects om ENTITY_RABBIT_DEATH
SoundEffects on ENTITY_RABBIT_HURT
SoundEffects oo ENTITY_RABBIT_JUMP
SoundEffects op EVENT_RAID_HORN
SoundEffects oq ENTITY_RAVAGER_AMBIENT
SoundEffects or ENTITY_RAVAGER_ATTACK
SoundEffects os ENTITY_RAVAGER_CELEBRATE
SoundEffects ot ENTITY_RAVAGER_DEATH
SoundEffects ou ENTITY_RAVAGER_HURT
SoundEffects ov ENTITY_RAVAGER_STEP
SoundEffects ow ENTITY_RAVAGER_STUNNED
SoundEffects ox ENTITY_RAVAGER_ROAR
SoundEffects oy BLOCK_NETHER_GOLD_ORE_BREAK
SoundEffects oz BLOCK_NETHER_GOLD_ORE_FALL
SoundEffects p AMBIENT_WARPED_FOREST_MOOD
SoundEffects pA ENTITY_SHULKER_AMBIENT
SoundEffects pB BLOCK_SHULKER_BOX_CLOSE
SoundEffects pC BLOCK_SHULKER_BOX_OPEN
SoundEffects pD ENTITY_SHULKER_BULLET_HIT
SoundEffects pE ENTITY_SHULKER_BULLET_HURT
SoundEffects pF ENTITY_SHULKER_CLOSE
SoundEffects pG ENTITY_SHULKER_DEATH
SoundEffects pH ENTITY_SHULKER_HURT
SoundEffects pI ENTITY_SHULKER_HURT_CLOSED
SoundEffects pJ ENTITY_SHULKER_OPEN
SoundEffects pK ENTITY_SHULKER_SHOOT
SoundEffects pL ENTITY_SHULKER_TELEPORT
SoundEffects pM ENTITY_SILVERFISH_AMBIENT
SoundEffects pN ENTITY_SILVERFISH_DEATH
SoundEffects pO ENTITY_SILVERFISH_HURT
SoundEffects pP ENTITY_SILVERFISH_STEP
SoundEffects pQ ENTITY_SKELETON_AMBIENT
SoundEffects pS ENTITY_SKELETON_DEATH
SoundEffects pT ENTITY_SKELETON_HORSE_AMBIENT
SoundEffects pU ENTITY_SKELETON_HORSE_DEATH
SoundEffects pV ENTITY_SKELETON_HORSE_HURT
SoundEffects pW ENTITY_SKELETON_HORSE_SWIM
SoundEffects pX ENTITY_SKELETON_HORSE_AMBIENT_WATER
SoundEffects pY ENTITY_SKELETON_HORSE_GALLOP_WATER
SoundEffects pZ ENTITY_SKELETON_HORSE_JUMP_WATER
SoundEffects pa BLOCK_SAND_STEP
SoundEffects pb BLOCK_SCAFFOLDING_BREAK
SoundEffects pc BLOCK_SCAFFOLDING_FALL
SoundEffects pd BLOCK_SCAFFOLDING_HIT
SoundEffects pe BLOCK_SCAFFOLDING_PLACE
SoundEffects pf BLOCK_SCAFFOLDING_STEP
SoundEffects pn ENTITY_SHEEP_AMBIENT
SoundEffects po ENTITY_SHEEP_DEATH
SoundEffects pp ENTITY_SHEEP_HURT
SoundEffects pq ENTITY_SHEEP_SHEAR
SoundEffects pr ENTITY_SHEEP_STEP
SoundEffects ps ITEM_SHIELD_BLOCK
SoundEffects pt ITEM_SHIELD_BREAK
SoundEffects pu BLOCK_SHROOMLIGHT_BREAK
SoundEffects pv BLOCK_SHROOMLIGHT_STEP
SoundEffects pw BLOCK_SHROOMLIGHT_PLACE
SoundEffects px BLOCK_SHROOMLIGHT_HIT
SoundEffects py BLOCK_SHROOMLIGHT_FALL
SoundEffects pz ITEM_SHOVEL_FLATTEN
SoundEffects q AMBIENT_UNDERWATER_ENTER
SoundEffects qA BLOCK_SOUL_SOIL_BREAK
SoundEffects qB BLOCK_SOUL_SOIL_STEP
SoundEffects qC BLOCK_SOUL_SOIL_PLACE
SoundEffects qD BLOCK_SOUL_SOIL_HIT
SoundEffects qE BLOCK_SOUL_SOIL_FALL
SoundEffects qF PARTICLE_SOUL_ESCAPE
SoundEffects qL ENTITY_STRIDER_AMBIENT
SoundEffects qM ENTITY_STRIDER_HAPPY
SoundEffects qN ENTITY_STRIDER_RETREAT
SoundEffects qO ENTITY_STRIDER_DEATH
SoundEffects qP ENTITY_STRIDER_HURT
SoundEffects qQ ENTITY_STRIDER_STEP
SoundEffects qR ENTITY_STRIDER_STEP_LAVA
SoundEffects qS ENTITY_STRIDER_EAT
SoundEffects qT ENTITY_STRIDER_SADDLE
SoundEffects qU ENTITY_SLIME_DEATH_SMALL
SoundEffects qV ENTITY_SLIME_HURT_SMALL
SoundEffects qW ENTITY_SLIME_JUMP_SMALL
SoundEffects qX ENTITY_SLIME_SQUISH_SMALL
SoundEffects qY BLOCK_SMITHING_TABLE_USE
SoundEffects qZ BLOCK_SMOKER_SMOKE
SoundEffects qa ENTITY_SKELETON_HORSE_STEP_WATER
SoundEffects qb ENTITY_SKELETON_HURT
SoundEffects qc ENTITY_SKELETON_SHOOT
SoundEffects qd ENTITY_SKELETON_STEP
SoundEffects qe ENTITY_SLIME_ATTACK
SoundEffects qf ENTITY_SLIME_DEATH
SoundEffects qg ENTITY_SLIME_HURT
SoundEffects qh ENTITY_SLIME_JUMP
SoundEffects qi ENTITY_SLIME_SQUISH
SoundEffects qj BLOCK_SLIME_BLOCK_BREAK
SoundEffects qk BLOCK_SLIME_BLOCK_FALL
SoundEffects ql BLOCK_SLIME_BLOCK_HIT
SoundEffects qm BLOCK_SLIME_BLOCK_PLACE
SoundEffects qn BLOCK_SLIME_BLOCK_STEP
SoundEffects qv BLOCK_SOUL_SAND_BREAK
SoundEffects qw BLOCK_SOUL_SAND_STEP
SoundEffects qx BLOCK_SOUL_SAND_PLACE
SoundEffects qy BLOCK_SOUL_SAND_HIT
SoundEffects qz BLOCK_SOUL_SAND_FALL
SoundEffects r AMBIENT_UNDERWATER_EXIT
SoundEffects rA BLOCK_STONE_FALL
SoundEffects rB BLOCK_STONE_HIT
SoundEffects rC BLOCK_STONE_PLACE
SoundEffects rD BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF
SoundEffects rE BLOCK_STONE_PRESSURE_PLATE_CLICK_ON
SoundEffects rF BLOCK_STONE_STEP
SoundEffects rG ENTITY_STRAY_AMBIENT
SoundEffects rH ENTITY_STRAY_DEATH
SoundEffects rI ENTITY_STRAY_HURT
SoundEffects rJ ENTITY_STRAY_STEP
SoundEffects rK BLOCK_SWEET_BERRY_BUSH_BREAK
SoundEffects rL BLOCK_SWEET_BERRY_BUSH_PLACE
SoundEffects rM ITEM_SWEET_BERRIES_PICK_FROM_BUSH
SoundEffects rN ENCHANT_THORNS_HIT
SoundEffects rO ENTITY_TNT_PRIMED
SoundEffects rP ITEM_TOTEM_USE
SoundEffects rQ ITEM_TRIDENT_HIT
SoundEffects rR ITEM_TRIDENT_HIT_GROUND
SoundEffects rS ITEM_TRIDENT_RETURN
SoundEffects rT ITEM_TRIDENT_RIPTIDE_1
SoundEffects rU ITEM_TRIDENT_RIPTIDE_2
SoundEffects rV ITEM_TRIDENT_RIPTIDE_3
SoundEffects rW ITEM_TRIDENT_THROW
SoundEffects rX ITEM_TRIDENT_THUNDER
SoundEffects rY BLOCK_TRIPWIRE_ATTACH
SoundEffects rZ BLOCK_TRIPWIRE_CLICK_OFF
SoundEffects ra ENTITY_SNOWBALL_THROW
SoundEffects rb BLOCK_SNOW_BREAK
SoundEffects rc BLOCK_SNOW_FALL
SoundEffects rd ENTITY_SNOW_GOLEM_AMBIENT
SoundEffects re ENTITY_SNOW_GOLEM_DEATH
SoundEffects rf ENTITY_SNOW_GOLEM_HURT
SoundEffects rg ENTITY_SNOW_GOLEM_SHOOT
SoundEffects rh ENTITY_SNOW_GOLEM_SHEAR
SoundEffects ri BLOCK_SNOW_HIT
SoundEffects rj BLOCK_SNOW_PLACE
SoundEffects rk BLOCK_SNOW_STEP
SoundEffects rl ENTITY_SPIDER_AMBIENT
SoundEffects rm ENTITY_SPIDER_DEATH
SoundEffects rn ENTITY_SPIDER_HURT
SoundEffects ro ENTITY_SPIDER_STEP
SoundEffects rp ENTITY_SPLASH_POTION_BREAK
SoundEffects rq ENTITY_SPLASH_POTION_THROW
SoundEffects rt ENTITY_SQUID_AMBIENT
SoundEffects ru ENTITY_SQUID_DEATH
SoundEffects rv ENTITY_SQUID_HURT
SoundEffects rw ENTITY_SQUID_SQUIRT
SoundEffects rx BLOCK_STONE_BREAK
SoundEffects ry BLOCK_STONE_BUTTON_CLICK_OFF
SoundEffects rz BLOCK_STONE_BUTTON_CLICK_ON
SoundEffects s AMBIENT_UNDERWATER_LOOP
SoundEffects sA UI_CARTOGRAPHY_TABLE_TAKE_RESULT
SoundEffects sB UI_STONECUTTER_TAKE_RESULT
SoundEffects sC UI_STONECUTTER_SELECT_RECIPE
SoundEffects sD UI_TOAST_CHALLENGE_COMPLETE
SoundEffects sE UI_TOAST_IN
SoundEffects sF UI_TOAST_OUT
SoundEffects sG ENTITY_VEX_AMBIENT
SoundEffects sH ENTITY_VEX_CHARGE
SoundEffects sI ENTITY_VEX_DEATH
SoundEffects sJ ENTITY_VEX_HURT
SoundEffects sK ENTITY_VILLAGER_AMBIENT
SoundEffects sL ENTITY_VILLAGER_CELEBRATE
SoundEffects sM ENTITY_VILLAGER_DEATH
SoundEffects sN ENTITY_VILLAGER_HURT
SoundEffects sO ENTITY_VILLAGER_NO
SoundEffects sP ENTITY_VILLAGER_TRADE
SoundEffects sQ ENTITY_VILLAGER_YES
SoundEffects sR ENTITY_VILLAGER_WORK_ARMORER
SoundEffects sS ENTITY_VILLAGER_WORK_BUTCHER
SoundEffects sT ENTITY_VILLAGER_WORK_CARTOGRAPHER
SoundEffects sU ENTITY_VILLAGER_WORK_CLERIC
SoundEffects sV ENTITY_VILLAGER_WORK_FARMER
SoundEffects sW ENTITY_VILLAGER_WORK_FISHERMAN
SoundEffects sX ENTITY_VILLAGER_WORK_FLETCHER
SoundEffects sY ENTITY_VILLAGER_WORK_LEATHERWORKER
SoundEffects sZ ENTITY_VILLAGER_WORK_LIBRARIAN
SoundEffects sa BLOCK_TRIPWIRE_CLICK_ON
SoundEffects sb BLOCK_TRIPWIRE_DETACH
SoundEffects sc ENTITY_TROPICAL_FISH_AMBIENT
SoundEffects sd ENTITY_TROPICAL_FISH_DEATH
SoundEffects se ENTITY_TROPICAL_FISH_FLOP
SoundEffects sf ENTITY_TROPICAL_FISH_HURT
SoundEffects sl ENTITY_TURTLE_AMBIENT_LAND
SoundEffects sm ENTITY_TURTLE_DEATH
SoundEffects sn ENTITY_TURTLE_DEATH_BABY
SoundEffects so ENTITY_TURTLE_EGG_BREAK
SoundEffects sp ENTITY_TURTLE_EGG_CRACK
SoundEffects sq ENTITY_TURTLE_EGG_HATCH
SoundEffects sr ENTITY_TURTLE_HURT
SoundEffects ss ENTITY_TURTLE_HURT_BABY
SoundEffects st ENTITY_TURTLE_LAY_EGG
SoundEffects su ENTITY_TURTLE_SHAMBLE
SoundEffects sv ENTITY_TURTLE_SHAMBLE_BABY
SoundEffects sw ENTITY_TURTLE_SWIM
SoundEffects sx UI_BUTTON_CLICK
SoundEffects sy UI_LOOM_SELECT_PATTERN
SoundEffects sz UI_LOOM_TAKE_RESULT
SoundEffects t AMBIENT_UNDERWATER_LOOP_ADDITIONS
SoundEffects tA WEATHER_RAIN_ABOVE
SoundEffects tB BLOCK_WET_GRASS_BREAK
SoundEffects tC BLOCK_WET_GRASS_FALL
SoundEffects tD BLOCK_WET_GRASS_HIT
SoundEffects tE BLOCK_WET_GRASS_PLACE
SoundEffects tF BLOCK_WET_GRASS_STEP
SoundEffects tG ENTITY_WITCH_AMBIENT
SoundEffects tH ENTITY_WITCH_CELEBRATE
SoundEffects tI ENTITY_WITCH_DEATH
SoundEffects tJ ENTITY_WITCH_DRINK
SoundEffects tK ENTITY_WITCH_HURT
SoundEffects tL ENTITY_WITCH_THROW
SoundEffects tM ENTITY_WITHER_AMBIENT
SoundEffects tN ENTITY_WITHER_BREAK_BLOCK
SoundEffects tO ENTITY_WITHER_DEATH
SoundEffects tP ENTITY_WITHER_HURT
SoundEffects tQ ENTITY_WITHER_SHOOT
SoundEffects tR ENTITY_WITHER_SKELETON_AMBIENT
SoundEffects tS ENTITY_WITHER_SKELETON_DEATH
SoundEffects tT ENTITY_WITHER_SKELETON_HURT
SoundEffects tU ENTITY_WITHER_SKELETON_STEP
SoundEffects tV ENTITY_WITHER_SPAWN
SoundEffects tW ENTITY_WOLF_AMBIENT
SoundEffects tX ENTITY_WOLF_DEATH
SoundEffects tY ENTITY_WOLF_GROWL
SoundEffects tZ ENTITY_WOLF_HOWL
SoundEffects ta ENTITY_VILLAGER_WORK_MASON
SoundEffects tb ENTITY_VILLAGER_WORK_SHEPHERD
SoundEffects tc ENTITY_VILLAGER_WORK_TOOLSMITH
SoundEffects td ENTITY_VILLAGER_WORK_WEAPONSMITH
SoundEffects te ENTITY_VINDICATOR_AMBIENT
SoundEffects tf ENTITY_VINDICATOR_CELEBRATE
SoundEffects tg ENTITY_VINDICATOR_DEATH
SoundEffects th ENTITY_VINDICATOR_HURT
SoundEffects tm BLOCK_VINE_STEP
SoundEffects tn BLOCK_LILY_PAD_PLACE
SoundEffects to ENTITY_WANDERING_TRADER_AMBIENT
SoundEffects tp ENTITY_WANDERING_TRADER_DEATH
SoundEffects tq ENTITY_WANDERING_TRADER_DISAPPEARED
SoundEffects tr ENTITY_WANDERING_TRADER_DRINK_MILK
SoundEffects ts ENTITY_WANDERING_TRADER_DRINK_POTION
SoundEffects tt ENTITY_WANDERING_TRADER_HURT
SoundEffects tu ENTITY_WANDERING_TRADER_NO
SoundEffects tv ENTITY_WANDERING_TRADER_REAPPEARED
SoundEffects tw ENTITY_WANDERING_TRADER_TRADE
SoundEffects tx ENTITY_WANDERING_TRADER_YES
SoundEffects ty BLOCK_WATER_AMBIENT
SoundEffects tz WEATHER_RAIN
SoundEffects u AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
SoundEffects uA ENTITY_ZOGLIN_DEATH
SoundEffects uB ENTITY_ZOGLIN_HURT
SoundEffects uC ENTITY_ZOGLIN_STEP
SoundEffects uD ENTITY_ZOMBIE_AMBIENT
SoundEffects uE ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR
SoundEffects uF ENTITY_ZOMBIE_ATTACK_IRON_DOOR
SoundEffects uG ENTITY_ZOMBIE_BREAK_WOODEN_DOOR
SoundEffects uH ENTITY_ZOMBIE_CONVERTED_TO_DROWNED
SoundEffects uI ENTITY_ZOMBIE_DEATH
SoundEffects uJ ENTITY_ZOMBIE_DESTROY_EGG
SoundEffects uK ENTITY_ZOMBIE_HORSE_AMBIENT
SoundEffects uL ENTITY_ZOMBIE_HORSE_DEATH
SoundEffects uM ENTITY_ZOMBIE_HORSE_HURT
SoundEffects uN ENTITY_ZOMBIE_HURT
SoundEffects uO ENTITY_ZOMBIE_INFECT
SoundEffects uP ENTITY_ZOMBIFIED_PIGLIN_AMBIENT
SoundEffects uQ ENTITY_ZOMBIFIED_PIGLIN_ANGRY
SoundEffects uR ENTITY_ZOMBIFIED_PIGLIN_DEATH
SoundEffects uS ENTITY_ZOMBIFIED_PIGLIN_HURT
SoundEffects uT ENTITY_ZOMBIE_STEP
SoundEffects uU ENTITY_ZOMBIE_VILLAGER_AMBIENT
SoundEffects uV ENTITY_ZOMBIE_VILLAGER_CONVERTED
SoundEffects uW ENTITY_ZOMBIE_VILLAGER_CURE
SoundEffects uX ENTITY_ZOMBIE_VILLAGER_DEATH
SoundEffects uY ENTITY_ZOMBIE_VILLAGER_HURT
SoundEffects uZ ENTITY_ZOMBIE_VILLAGER_STEP
SoundEffects ua ENTITY_WOLF_HURT
SoundEffects ub ENTITY_WOLF_PANT
SoundEffects uc ENTITY_WOLF_SHAKE
SoundEffects ud ENTITY_WOLF_STEP
SoundEffects ue ENTITY_WOLF_WHINE
SoundEffects uf BLOCK_WOODEN_DOOR_CLOSE
SoundEffects ug BLOCK_WOODEN_DOOR_OPEN
SoundEffects uh BLOCK_WOODEN_TRAPDOOR_CLOSE
SoundEffects ui BLOCK_WOODEN_TRAPDOOR_OPEN
SoundEffects uj BLOCK_WOOD_BREAK
SoundEffects uk BLOCK_WOODEN_BUTTON_CLICK_OFF
SoundEffects ul BLOCK_WOODEN_BUTTON_CLICK_ON
SoundEffects um BLOCK_WOOD_FALL
SoundEffects un BLOCK_WOOD_HIT
SoundEffects uo BLOCK_WOOD_PLACE
SoundEffects up BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF
SoundEffects uq BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON
SoundEffects ur BLOCK_WOOD_STEP
SoundEffects us BLOCK_WOOL_BREAK
SoundEffects ut BLOCK_WOOL_FALL
SoundEffects uu BLOCK_WOOL_HIT
SoundEffects uv BLOCK_WOOL_PLACE
SoundEffects uw BLOCK_WOOL_STEP
SoundEffects ux ENTITY_ZOGLIN_AMBIENT
SoundEffects uy ENTITY_ZOGLIN_ANGRY
SoundEffects uz ENTITY_ZOGLIN_ATTACK
SoundEffects v AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
SpawnerCreature a (LWorld;LChunk;)LBlockPosition; getRandomPosition
Statistic a ()LStatisticWrapper; getWrapper
StatisticList A AVIATE_ONE_CM
StatisticList B SWIM_ONE_CM
StatisticList C STRIDER_ONE_CM
StatisticList D JUMP
StatisticList E DROP
StatisticList F DAMAGE_DEALT
StatisticList G DAMAGE_DEALT_ABSORBED
StatisticList H DAMAGE_DEALT_RESISTED
StatisticList I DAMAGE_TAKEN
StatisticList J DAMAGE_BLOCKED_BY_SHIELD
StatisticList K DAMAGE_ABSORBED
StatisticList L DAMAGE_RESISTED
StatisticList M DEATHS
StatisticList N MOB_KILLS
StatisticList O ANIMALS_BRED
StatisticList P PLAYER_KILLS
StatisticList Q FISH_CAUGHT
StatisticList R TALKED_TO_VILLAGER
StatisticList S TRADED_WITH_VILLAGER
StatisticList T EAT_CAKE_SLICE
StatisticList U FILL_CAULDRON
StatisticList V USE_CAULDRON
StatisticList W CLEAN_ARMOR
StatisticList X CLEAN_BANNER
StatisticList Y CLEAN_SHULKER_BOX
StatisticList Z INTERACT_WITH_BREWINGSTAND
StatisticList a BLOCK_MINED
StatisticList aA RAID_WIN
StatisticList aB INTERACT_WITH_ANVIL
StatisticList aC INTERACT_WITH_GRINDSTONE
StatisticList aD TARGET_HIT
StatisticList aE INTERACT_WITH_SMITHING_TABLE
StatisticList aa INTERACT_WITH_BEACON
StatisticList ab INSPECT_DROPPER
StatisticList ac INSPECT_HOPPER
StatisticList ad INSPECT_DISPENSER
StatisticList ae PLAY_NOTEBLOCK
StatisticList af TUNE_NOTEBLOCK
StatisticList ag POT_FLOWER
StatisticList ah TRIGGER_TRAPPED_CHEST
StatisticList ai OPEN_ENDERCHEST
StatisticList aj ENCHANT_ITEM
StatisticList ak PLAY_RECORD
StatisticList al INTERACT_WITH_FURNACE
StatisticList am INTERACT_WITH_CRAFTING_TABLE
StatisticList an OPEN_CHEST
StatisticList ao SLEEP_IN_BED
StatisticList ap OPEN_SHULKER_BOX
StatisticList aq OPEN_BARREL
StatisticList ar INTERACT_WITH_BLAST_FURNACE
StatisticList as INTERACT_WITH_SMOKER
StatisticList at INTERACT_WITH_LECTERN
StatisticList au INTERACT_WITH_CAMPFIRE
StatisticList av INTERACT_WITH_CARTOGRAPHY_TABLE
StatisticList aw INTERACT_WITH_LOOM
StatisticList ax INTERACT_WITH_STONECUTTER
StatisticList ay BELL_RING
StatisticList az RAID_TRIGGER
StatisticList b ITEM_CRAFTED
StatisticList c ITEM_USED
StatisticList d ITEM_BROKEN
StatisticList e ITEM_PICKED_UP
StatisticList f ITEM_DROPPED
StatisticList g ENTITY_KILLED
StatisticList h ENTITY_KILLED_BY
StatisticList i CUSTOM
StatisticList j LEAVE_GAME
StatisticList k PLAY_ONE_MINUTE
StatisticList l TIME_SINCE_DEATH
StatisticList m TIME_SINCE_REST
StatisticList n SNEAK_TIME
StatisticList o WALK_ONE_CM
StatisticList p CROUCH_ONE_CM
StatisticList q SPRINT_ONE_CM
StatisticList r WALK_ON_WATER_ONE_CM
StatisticList s FALL_ONE_CM
StatisticList t CLIMB_ONE_CM
StatisticList u FLY_ONE_CM
StatisticList v WALK_UNDER_WATER_ONE_CM
StatisticList w MINECART_ONE_CM
StatisticList x BOAT_ONE_CM
StatisticList y PIG_ONE_CM
StatisticList z HORSE_ONE_CM
StatisticManager a (LEntityHuman;LStatistic;I)V setStatistic
StatisticManager a (LStatistic;)I getStatisticValue
StatisticWrapper a ()LIRegistry; getRegistry
StructureGenerator a (LIWorldReader;LStructureManager;LBlockPosition;IZJLStructureSettingsFeature;)LBlockPosition; getNearestGeneratedFeature
StructureGenerator b PILLAGER_OUTPOST
StructureGenerator c MINESHAFT
StructureGenerator d MANSION
StructureGenerator e JUNGLE_PYRAMID
StructureGenerator f DESERT_PYRAMID
StructureGenerator g IGLOO
StructureGenerator h RUINED_PORTAL
StructureGenerator i SHIPWRECK
StructureGenerator j SWAMP_HUT
StructureGenerator k STRONGHOLD
StructureGenerator l MONUMENT
StructureGenerator m OCEAN_RUIN
StructureGenerator n FORTRESS
StructureGenerator o ENDCITY
StructureGenerator p BURIED_TREASURE
StructureGenerator q VILLAGE
StructureGenerator r NETHER_FOSSIL
StructureGenerator s BASTION_REMNANT
SystemUtils b ()J getMonotonicMillis
SystemUtils c ()J getMonotonicNanos
SystemUtils d ()J getTimeMillis
SystemUtils$IdentityHashingStrategy a INSTANCE
SystemUtils$OS a LINUX
SystemUtils$OS b SOLARIS
SystemUtils$OS c WINDOWS
SystemUtils$OS d OSX
SystemUtils$OS e UNKNOWN
Tag a (Ljava/lang/Object;)Z isTagged
Tag b ()Ljava/util/List; getTagged
TagsBlock A WARPED_STEMS
TagsBlock B BANNERS
TagsBlock C SAND
TagsBlock D STAIRS
TagsBlock E SLABS
TagsBlock F WALLS
TagsBlock G ANVIL
TagsBlock H RAILS
TagsBlock I LEAVES
TagsBlock J TRAPDOORS
TagsBlock K SMALL_FLOWERS
TagsBlock L BEDS
TagsBlock M FENCES
TagsBlock N TALL_FLOWERS
TagsBlock O FLOWERS
TagsBlock P PIGLIN_REPELLENTS
TagsBlock Q GOLD_ORES
TagsBlock R NON_FLAMMABLE_WOOD
TagsBlock T FLOWER_POTS
TagsBlock U ENDERMAN_HOLDABLE
TagsBlock V ICE
TagsBlock W VALID_SPAWN
TagsBlock X IMPERMEABLE
TagsBlock Y UNDERWATER_BONEMEALS
TagsBlock Z CORAL_BLOCKS
TagsBlock aA GUARDED_BY_PIGLINS
TagsBlock aB PREVENT_MOB_SPAWNING_INSIDE
TagsBlock aa WALL_CORALS
TagsBlock ab CORAL_PLANTS
TagsBlock ac CORALS
TagsBlock ad BAMBOO_PLANTABLE_ON
TagsBlock ae STANDING_SIGNS
TagsBlock af WALL_SIGNS
TagsBlock ag SIGNS
TagsBlock ah DRAGON_IMMUNE
TagsBlock ai WITHER_IMMUNE
TagsBlock aj WITHER_SUMMON_BASE_BLOCKS
TagsBlock ak BEEHIVES
TagsBlock al CROPS
TagsBlock am BEE_GROWABLES
TagsBlock an PORTALS
TagsBlock ao FIRE
TagsBlock ap NYLIUM
TagsBlock aq WART_BLOCKS
TagsBlock ar BEACON_BASE_BLOCKS
TagsBlock as SOUL_SPEED_BLOCKS
TagsBlock at WALL_POST_OVERRIDE
TagsBlock au CLIMBABLE
TagsBlock av SHULKER_BOXES
TagsBlock aw HOGLIN_REPELLENTS
TagsBlock ax SOUL_FIRE_BASE_BLOCKS
TagsBlock ay STRIDER_WARM_BLOCKS
TagsBlock az CAMPFIRES
TagsBlock b WOOL
TagsBlock c PLANKS
TagsBlock d STONE_BRICKS
TagsBlock e WOODEN_BUTTONS
TagsBlock f BUTTONS
TagsBlock g CARPETS
TagsBlock h WOODEN_DOORS
TagsBlock i WOODEN_STAIRS
TagsBlock j WOODEN_SLABS
TagsBlock k WOODEN_FENCES
TagsBlock l PRESSURE_PLATES
TagsBlock m WOODEN_PRESSURE_PLATES
TagsBlock n STONE_PRESSURE_PLATES
TagsBlock o WOODEN_TRAPDOORS
TagsBlock p DOORS
TagsBlock q SAPLINGS
TagsBlock r LOGS_THAT_BURN
TagsBlock s LOGS
TagsBlock t DARK_OAK_LOGS
TagsBlock u OAK_LOGS
TagsBlock v BIRCH_LOGS
TagsBlock w ACACIA_LOGS
TagsBlock x JUNGLE_LOGS
TagsBlock y SPRUCE_LOGS
TagsBlock z CRIMSON_STEMS
TagsEntity b SKELETONS
TagsEntity c RADIERS
TagsEntity d BEEHIVE_INHABITORS
TagsEntity e ARROWS
TagsEntity f IMPACT_PROJECTILES
TagsFluid b WATER
TagsFluid c LAVA
TagsItem A SAND
TagsItem B STAIRS
TagsItem C SLABS
TagsItem D WALLS
TagsItem E ANVIL
TagsItem F RAILS
TagsItem G LEAVES
TagsItem H TRAPDOORS
TagsItem I SMALL_FLOWERS
TagsItem J BEDS
TagsItem K FENCES
TagsItem L TALL_FLOWERS
TagsItem M FLOWERS
TagsItem N PIGLIN_REPELLENTS
TagsItem O PIGLIN_LOVED
TagsItem S GOLD_ORES
TagsItem T NON_FLAMMABLE_WOOD
TagsItem U SOUL_FIRE_BASE_BLOCKS
TagsItem W BOATS
TagsItem X FISHES
TagsItem Y SIGNS
TagsItem Z MUSIC_DISCS
TagsItem aa CREEPER_DROP_MUSIC_DISCS
TagsItem ab COALS
TagsItem ac ARROWS
TagsItem ad LECTERN_BOOKS
TagsItem ae BEACON_PAYMENT_ITEMS
TagsItem af STONE_TOOL_MATERIALS
TagsItem ag STONE_CRAFTING_MATERIALS
TagsItem b WOOL
TagsItem c PLANKS
TagsItem d STONE_BRICKS
TagsItem e WOODEN_BUTTONS
TagsItem f BUTTONS
TagsItem g CARPETS
TagsItem h WOODEN_DOORS
TagsItem i WOODEN_STAIRS
TagsItem j WOODEN_SLABS
TagsItem k WOODEN_FENCES
TagsItem l WOODEN_PRESSURE_PLATES
TagsItem m WOODEN_TRAPDOORS
TagsItem n DOORS
TagsItem o SAPLINGS
TagsItem p LOGS_THAT_BURN
TagsItem q LOGS
TagsItem r DARK_OAK_LOGS
TagsItem s OAK_LOGS
TagsItem t BIRCH_LOGS
TagsItem u ACACIA_LOGS
TagsItem v JUNGLE_LOGS
TagsItem w SPRUCE_LOGS
TagsItem x CRIMSON_STEMS
TagsItem y WARPED_STEMS
TagsItem z BANNERS
TickListPriority a EXTREMELY_HIGH
TickListPriority b VERY_HIGH
TickListPriority c HIGH
TickListPriority d NORMAL
TickListPriority e LOW
TickListPriority f VERY_LOW
TickListPriority g EXTREMELY_LOW
TickListServer c nextTickListHash
Ticket a ()LTicketType; getTicketType
Ticket c identifier
TicketType a START
TicketType b DRAGON
TicketType c PLAYER
TicketType d FORCED
TicketType e LIGHT
TicketType f PORTAL
TicketType g POST_TELEPORT
TicketType h UNKNOWN
TicketType k loadPeriod
TileEntity Y_ ()V update
TileEntity a ()LPacketPlayOutTileEntityData; getUpdatePacket
TileEntity a_ (II)Z setProperty
TileEntity b (LNBTTagCompound;)LNBTTagCompound; save
TileEntity b tileType
TileEntity d world
TileEntity e position
TileEntity k ()LWorld; getWorld
TileEntity l ()Z hasWorld
TileEntity m ()LBlockPosition; getPosition
TileEntity n ()LIBlockData; getBlock
TileEntity o ()Z isRemoved
TileEntity q ()Z isFilteredNBT
TileEntity r ()LTileEntityTypes; getTileType
TileEntityBanner b color
TileEntityBanner c patterns
TileEntityBarrel a (LIBlockData;LSoundEffect;)V playOpenSound
TileEntityBarrel a (LIBlockData;Z)V setOpenFlag
TileEntityBarrel c items
TileEntityBeacon a (LIChatBaseComponent;)V setCustomName
TileEntityBeacon h levels
TileEntityBeacon j primaryEffect
TileEntityBeacon k secondaryEffect
TileEntityBeacon l customName
TileEntityBeacon m chestLock
TileEntityBeacon n containerProperties
TileEntityBed a color
TileEntityBeehive a (LEntity;Z)V addBee
TileEntityBeehive a (LIBlockData;LTileEntityBeehive$ReleaseStatus;)Ljava/util/List; releaseBees
TileEntityBeehive a bees
TileEntityBeehive b flowerPos
TileEntityBeehive f ()Z isEmpty
TileEntityBeehive g ()Z isFull
TileEntityBeehive h ()I getBeeCount
TileEntityBeehive i ()Z isSedated
TileEntityBeehive$HiveBee a entityData
TileEntityBeehive$HiveBee b ticksInHive
TileEntityBeehive$HiveBee c minOccupationTicks
TileEntityBeehive$ReleaseStatus a HONEY_DELIVERED
TileEntityBeehive$ReleaseStatus b BEE_RELEASED
TileEntityBeehive$ReleaseStatus c EMERGENCY
TileEntityBrewingStand h items
TileEntityBrewingStand i brewTime
TileEntityBrewingStand l fuelLevel
TileEntityCampfire a items
TileEntityCampfire b cookingTimes
TileEntityCampfire c cookingTotalTimes
TileEntityCampfire d ()LNonNullList; getItems
TileEntityChest c items
TileEntityCommand d ()LCommandBlockListenerAbstract; getCommandBlock
TileEntityCommand$Type a SEQUENCE
TileEntityCommand$Type b AUTO
TileEntityCommand$Type c REDSTONE
TileEntityConduit j target
TileEntityContainer a (ILPlayerInventory;)LContainer; createContainer
TileEntityContainer a (LIChatBaseComponent;)V setCustomName
TileEntityContainer a chestLock
TileEntityContainer b customName
TileEntityContainer g ()LIChatBaseComponent; getContainerName
TileEntityDispenser a (LItemStack;)I addItem
TileEntityDispenser g items
TileEntityEnchantTable a (LIChatBaseComponent;)V setCustomName
TileEntityEndGateway b age
TileEntityEndGateway g exitPortal
TileEntityEndGateway h exactTeleport
TileEntityFurnace a (LItemStack;)I fuelTime
TileEntityFurnace a items
TileEntityFurnace b (LItemStack;)Z isFuel
TileEntityFurnace h ()Z isBurning
TileEntityFurnace i burnTime
TileEntityFurnace j ticksForCurrentFuel
TileEntityFurnace k cookTime
TileEntityFurnace l cookTimeTotal
TileEntityHopper a (LIInventory;LIInventory;LItemStack;LEnumDirection;)LItemStack; addItem
TileEntityHopper c (I)V setCooldown
TileEntityHopper g items
TileEntityJigsaw$JointType a ROLLABLE
TileEntityJigsaw$JointType b ALIGNED
TileEntityJukeBox a (LItemStack;)V setRecord
TileEntityJukeBox d ()LItemStack; getRecord
TileEntityLectern a (I)V setPage
TileEntityLectern a (LItemStack;)V setBook
TileEntityLectern a inventory
TileEntityLectern b containerProperties
TileEntityLectern c book
TileEntityLectern f ()LItemStack; getBook
TileEntityLectern g ()Z hasBook
TileEntityLectern g page
TileEntityLectern h ()I getPage
TileEntityLectern h maxPage
TileEntityLootable a (LMinecraftKey;J)V setLootTable
TileEntityLootable d_ lootTable
TileEntityLootable e_ lootTableSeed
TileEntityMobSpawner d ()LMobSpawnerAbstract; getSpawner
TileEntityShulkerBox g contents
TileEntityShulkerBox h viewingCount
TileEntityShulkerBox$AnimationPhase a CLOSED
TileEntityShulkerBox$AnimationPhase b OPENING
TileEntityShulkerBox$AnimationPhase c OPENED
TileEntityShulkerBox$AnimationPhase d CLOSING
TileEntitySign a (LEnumColor;)Z setColor
TileEntitySign c lines
TileEntitySign g ()LEnumColor; getColor
TileEntitySign h isEditable
TileEntitySign l color
TileEntitySkull a (Lcom/mojang/authlib/GameProfile;)V setGameProfile
TileEntitySkull a userCache
TileEntitySkull b sessionService
TileEntitySkull c gameProfile
TileEntityStructure a (LBlockPropertyStructureMode;)V setUsageMode
TileEntityStructure a (LEntityLiving;)V setAuthor
TileEntityStructure a (Ljava/lang/String;)V setStructureName
TileEntityStructure a structureName
TileEntityStructure b author
TileEntityStructure c metadata
TileEntityStructure d ()Ljava/lang/String; getStructureName
TileEntityStructure g relativePosition
TileEntityStructure h size
TileEntityStructure i mirror
TileEntityStructure j rotation
TileEntityStructure k usageMode
TileEntityStructure l ignoreEntities
TileEntityStructure m powered
TileEntityStructure n showAir
TileEntityStructure o showBoundingBox
TileEntityStructure p integrity
TileEntityStructure q seed
TileEntityStructure u ()LBlockPropertyStructureMode; getUsageMode
TileEntityStructure$UpdateType a UPDATE_DATA
TileEntityStructure$UpdateType b SAVE_AREA
TileEntityStructure$UpdateType c LOAD_AREA
TileEntityStructure$UpdateType d SCAN_AREA
TileEntityTypes A SMOKER
TileEntityTypes B BLAST_FURNACE
TileEntityTypes C LECTERN
TileEntityTypes D BELL
TileEntityTypes E JIGSAW
TileEntityTypes F CAMPFIRE
TileEntityTypes G BEEHIVE
TileEntityTypes a FURNACE
TileEntityTypes b CHEST
TileEntityTypes c TRAPPED_CHEST
TileEntityTypes d ENDER_CHEST
TileEntityTypes e JUKEBOX
TileEntityTypes f DISPENSER
TileEntityTypes g DROPPER
TileEntityTypes h SIGN
TileEntityTypes i MOB_SPAWNER
TileEntityTypes j PISTON
TileEntityTypes k BREWING_STAND
TileEntityTypes l ENCHANTING_TABLE
TileEntityTypes m END_PORTAL
TileEntityTypes n BEACON
TileEntityTypes o SKULL
TileEntityTypes p DAYLIGHT_DETECTOR
TileEntityTypes q HOPPER
TileEntityTypes r COMPARATOR
TileEntityTypes s BANNER
TileEntityTypes t STRUCTURE_BLOCK
TileEntityTypes u END_GATEWAY
TileEntityTypes v COMMAND_BLOCK
TileEntityTypes w SHULKER_BOX
TileEntityTypes x BED
TileEntityTypes y CONDUIT
TileEntityTypes z BARREL
Unit a INSTANCE
UserCache a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; getProfile
UserCache a (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; getProfile
Vec3D b (DDD)LVec3D; add
Vec3D b ORIGIN
Vec3D c x
Vec3D d y
Vec3D e z
Vec3D g (LVec3D;)D distanceSquared
Vector3f a x
Vector3f b ()F getX
Vector3f b y
Vector3f c ()F getY
Vector3f c z
Vector3f d ()F getZ
VillagePlace$Occupancy a HAS_SPACE
VillagePlace$Occupancy b IS_OCCUPIED
VillagePlace$Occupancy c ANY
VillageSiege$State a SIEGE_CAN_ACTIVATE
VillageSiege$State b SIEGE_TONIGHT
VillageSiege$State c SIEGE_DONE
VillagerData a ()LVillagerType; getType
VillagerData a (I)LVillagerData; withLevel
VillagerData a (LVillagerProfession;)LVillagerData; withProfession
VillagerData a (LVillagerType;)LVillagerData; withType
VillagerData b ()LVillagerProfession; getProfession
VillagerData c ()I getLevel
VillagerDataHolder fx ()LVillagerData; getVillagerData
VillagerProfession a NONE
VillagerProfession b ARMORER
VillagerProfession c BUTCHER
VillagerProfession d CARTOGRAPHER
VillagerProfession e CLERIC
VillagerProfession f FARMER
VillagerProfession g FISHERMAN
VillagerProfession h FLETCHER
VillagerProfession i LEATHERWORKER
VillagerProfession j LIBRARIAN
VillagerProfession k MASON
VillagerProfession l NITWIT
VillagerProfession m SHEPHERD
VillagerProfession n TOOLSMITH
VillagerProfession o WEAPONSMITH
VillagerType a DESERT
VillagerType b JUNGLE
VillagerType c PLAINS
VillagerType d SAVANNA
VillagerType e SNOW
VillagerType f SWAMP
VillagerType g TAIGA
VirtualLevelReadable a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
VoxelShape a ()LAxisAlignedBB; getBoundingBox
VoxelShape a (LVec3D;LVec3D;LBlockPosition;)LMovingObjectPositionBlock; rayTrace
VoxelShape b ()Z isEmpty
VoxelShapes a (DDDDDD)LVoxelShape; create
WeightedRandomEnchant b enchantment
WeightedRandomEnchant c level
WhiteList a (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
World K ()LScoreboard; getScoreboard
World P ()Z isDay
World Q ()Z isNight
World R ()V tickBlockEntities
World V ()J getTime
World W ()J getDayTime
World X ()LGameRules; getGameRules
World Z ()Z isRaining
World a (I)LEntity; getEntity
World a (LBlockPosition;LBlock;II)V playBlockAction
World a (LBlockPosition;LEnumDirection;)Z isBlockFacePowered
World a (LBlockPosition;LIBlockData;LIBlockData;I)V notify
World a (LEntity;B)V broadcastEntityEffect
World a (LEntity;DDDFLExplosion$Effect;)LExplosion; explode
World a (LEntity;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
World a (LEntity;LDamageSource;LExplosionDamageCalculator;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntityHuman;DDDLSoundEffect;LSoundCategory;FF)V playSound
World a (LEntityHuman;LEntity;LSoundEffect;LSoundCategory;FF)V playSound
World aa ()LResourceKey; getDimensionKey
World ab ()LGameProfilerFiller; getMethodProfiler
World ac ()Ljava/util/function/Supplier; getMethodProfilerSupplier
World ad ()Z isDebugWorld
World b (LBlockPosition;LBlock;)V applyPhysics
World b (LBlockPosition;LEnumDirection;)I getBlockFacePower
World b (LBlockPosition;LIBlockData;)Z setTypeUpdate
World b (ZZ)V setSpawnFlags
World c (LBlockPosition;LBlock;)V updateAdjacentComparators
World f OVERWORLD
World g THE_NETHER
World h THE_END
World i (LBlockPosition;)Z isValidLocation
World k (LBlockPosition;)LChunk; getChunkAtWorldCoords
World l (LBlockPosition;)V removeTileEntity
World l lastRainLevel
World m rainLevel
World n ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
World n lastThunderLevel
World o (LBlockPosition;)I getBlockPower
World o thunderLevel
World p (LBlockPosition;)Z isBlockIndirectlyPowered
World p random
World q ()LCraftingManager; getCraftingManager
World q worldData
World r (LBlockPosition;)Z isRainingAt
World r isClientSide
World s ()Z isSavingDisabled
World s serverThread
World t debugWorld
World v ()I getWorldMapCount
World w methodProfiler
World x worldBorder
World y biomeManager
World z dimensionKey
WorldAccess G ()LWorldServer; getMinecraftWorld
WorldAccess h (LEntity;)V addAllEntities
WorldBorder a ()D getCenterX
WorldBorder a (D)V setSize
WorldBorder a (DDJ)V transitionSizeBetween
WorldBorder a (LChunkCoordIntPair;)Z isInBounds
WorldBorder b ()D getCenterZ
WorldBorder b (D)V setDamageBuffer
WorldBorder b (I)V setWarningTime
WorldBorder c (D)V setDamageAmount
WorldBorder c (DD)V setCenter
WorldBorder c (I)V setWarningDistance
WorldBorder i ()D getSize
WorldBorder n ()D getDamageBuffer
WorldBorder o ()D getDamageAmount
WorldBorder q ()I getWarningTime
WorldBorder r ()I getWarningDistance
WorldData b (Z)V setStorm
WorldData e ()J getTime
WorldData f ()J getDayTime
WorldData i ()Z isThundering
WorldData k ()Z hasStorm
WorldData n ()Z isHardcore
WorldData s ()LEnumDifficulty; getDifficulty
WorldData t ()Z isDifficultyLocked
WorldDataMutable a (LBlockPosition;F)V setSpawn
WorldDataServer p clearWeatherTime
WorldDataServer q raining
WorldDataServer r rainTime
WorldDataServer s thundering
WorldDataServer t thunderTime
WorldDataServer y customBossEvents
WorldDimension b OVERWORLD
WorldDimension c THE_NETHER
WorldDimension d THE_END
WorldGenFeatureDefinedStructurePoolTemplate$Matching a TERRAIN_MATCHING
WorldGenFeatureDefinedStructurePoolTemplate$Matching b RIGID
WorldGenFeatureHugeFungiConfiguration b CRIMSON_FUNGUS
WorldGenFeatureHugeFungiConfiguration d WARPED_FUNGUS
WorldGenFeatureOceanRuin$Temperature a WARM
WorldGenFeatureOceanRuin$Temperature b COLD
WorldGenFeatureOreConfiguration$Target a NATURAL_STONE
WorldGenFeatureOreConfiguration$Target b NETHERRACK
WorldGenFeatureOreConfiguration$Target c NETHER_ORE_REPLACEABLES
WorldGenFeatureRuinedPortal$Type a STANDARD
WorldGenFeatureRuinedPortal$Type b DESERT
WorldGenFeatureRuinedPortal$Type c JUNGLE
WorldGenFeatureRuinedPortal$Type d SWAMP
WorldGenFeatureRuinedPortal$Type e MOUNTAIN
WorldGenFeatureRuinedPortal$Type f OCEAN
WorldGenFeatureRuinedPortal$Type g NETHER
WorldGenFeatureRuinedPortalPieces$Position a ON_LAND_SURFACE
WorldGenFeatureRuinedPortalPieces$Position b PARTLY_BURIED
WorldGenFeatureRuinedPortalPieces$Position c ON_OCEAN_FLOOR
WorldGenFeatureRuinedPortalPieces$Position d IN_MOUNTAIN
WorldGenFeatureRuinedPortalPieces$Position e UNDERGROUND
WorldGenFeatureRuinedPortalPieces$Position f IN_NETHER
WorldGenMineshaft$Type a NORMAL
WorldGenMineshaft$Type b MESA
WorldGenStage$Decoration a RAW_GENERATION
WorldGenStage$Decoration b LAKES
WorldGenStage$Decoration c LOCAL_MODIFICATIONS
WorldGenStage$Decoration d UNDERGROUND_STRUCTURES
WorldGenStage$Decoration e SURFACE_STRUCTURES
WorldGenStage$Decoration f STRONGHOLDS
WorldGenStage$Decoration g UNDERGROUND_ORES
WorldGenStage$Decoration h UNDERGROUND_DECORATION
WorldGenStage$Decoration i VEGETAL_DECORATION
WorldGenStage$Decoration j TOP_LAYER_MODIFICATION
WorldGenStage$Features a AIR
WorldGenStage$Features b LIQUID
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType a OPENING
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType b WOOD_DOOR
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType c GRATES
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType d IRON_DOOR
WorldGenerator A ICE_PATCH
WorldGenerator B LAKE
WorldGenerator C ORE
WorldGenerator D END_SPIKE
WorldGenerator E END_ISLAND
WorldGenerator F END_GATEWAY
WorldGenerator G SEAGRASS
WorldGenerator H KELP
WorldGenerator I CORAL_TREE
WorldGenerator J CORAL_MUSHROOM
WorldGenerator K CORAL_CLAW
WorldGenerator L SEA_PICKLE
WorldGenerator M SIMPLE_BLOCK
WorldGenerator N BAMBOO
WorldGenerator O HUGE_FUNGUS
WorldGenerator P NETHER_FOREST_VEGETATION
WorldGenerator Q WEEPING_VINES
WorldGenerator R TWISTING_VINES
WorldGenerator S BASALT_COLUMNS
WorldGenerator T DELTA_FEATURE
WorldGenerator U NETHERRACK_REPLACE_BLOBS
WorldGenerator V FILL_LAYER
WorldGenerator W BONUS_CHEST
WorldGenerator X BASALT_PILLAR
WorldGenerator Y NO_SURFACE_ORE
WorldGenerator Z RANDOM_SELECTOR
WorldGenerator aa SIMPLE_RANDOM_SELECTOR
WorldGenerator ab RANDOM_BOOLEAN_SELECTOR
WorldGenerator ac DECORATED
WorldGenerator b NO_OP
WorldGenerator c TREE
WorldGenerator d FLOWER
WorldGenerator e NO_BONEMEAL_FLOWER
WorldGenerator f RANDOM_PATCH
WorldGenerator g BLOCK_PILE
WorldGenerator h SPRING_FEATURE
WorldGenerator i CHORUS_PLANT
WorldGenerator j EMERALD_ORE
WorldGenerator k VOID_START_PLATFORM
WorldGenerator l DESERT_WELL
WorldGenerator m FOSSIL
WorldGenerator n HUGE_RED_MUSHROOM
WorldGenerator o HUGE_BROWN_MUSHROOM
WorldGenerator p ICE_SPIKE
WorldGenerator q GLOWSTONE_BLOB
WorldGenerator r FREEZE_TOP_LAYER
WorldGenerator s VINES
WorldGenerator v MONSTER_ROOM
WorldGenerator w BLUE_ICE
WorldGenerator x ICEBERG
WorldGenerator y FOREST_ROCK
WorldGenerator z DISK
WorldMap a (LItemStack;LBlockPosition;Ljava/lang/String;LMapIcon$Type;)V decorateMap
WorldMap a centerX
WorldMap b centerZ
WorldMap c map
WorldMap d scale
WorldMap e colors
WorldMap f locked
WorldMap h track
WorldMap i unlimitedTracking
WorldMap k humans
WorldMap m decorations
WorldMap$WorldMapHumanTracker a trackee
WorldMap$WorldMapHumanTracker c worldMap
WorldNBTStorage a ()[Ljava/lang/String; getSeenPlayers
WorldNBTStorage a (LEntityHuman;)V save
WorldNBTStorage b (LEntityHuman;)LNBTTagCompound; load
WorldNBTStorage c playerDir
WorldPersistentData b data
WorldServer A emptyTime
WorldServer B ()LPersistentRaid; getPersistentRaid
WorldServer B portalTravelAgent
WorldServer C nextTickListBlock
WorldServer D ()Z isFlatWorld
WorldServer D nextTickListFluid
WorldServer F ()LEnderDragonBattle; getDragonBattle
WorldServer G ticking
WorldServer H mobSpawners
WorldServer I dragonBattle
WorldServer K structureManager
WorldServer a ()LStructureManager; getStructureManager
WorldServer a (IIZ)Z setForceLoaded
WorldServer a (J)V setDayTime
WorldServer a (LChunk;)V unloadChunk
WorldServer a (LEntity;)V entityJoinedWorld
WorldServer a (LEntityPlayer;)V addPlayerCommand
WorldServer a (LIProgressUpdate;ZZ)V save
WorldServer a (Ljava/util/UUID;)LEntity; getEntity
WorldServer a (Ljava/util/function/BooleanSupplier;)V doTick
WorldServer a (ZZ)V doMobSpawning
WorldServer am ()V wakeupPlayers
WorldServer ao ()V clearWeather
WorldServer b (LEntityPlayer;)V addPlayerPortal
WorldServer b savingDisabled
WorldServer c (LEntity;)Z addEntitySerialized
WorldServer c (LEntityPlayer;)V addPlayerJoin
WorldServer c persistentRaid
WorldServer d (LEntityPlayer;)V addPlayerRespawn
WorldServer e (LEntity;)Z addAllEntitiesSafely
WorldServer e (LEntityPlayer;)V addPlayer0
WorldServer j (LEntity;)Z addEntity0
WorldServer o ()LPortalTravelAgent; getTravelAgent
WorldServer o_ ()V everyoneSleeping
WorldServer p_ ()V resetEmptyTime
WorldServer t players
WorldServer u ()LWorldPersistentData; getWorldPersistentData
WorldServer u chunkProvider
WorldServer v server
WorldServer w ()LBlockPosition; getSpawn
WorldServer w worldDataServer
WorldServer y ()Lit/unimi/dsi/fastutil/longs/LongSet; getForceLoadedChunks
WorldSettings a ()Ljava/lang/String; getLevelName
WorldSettings a levelName
WorldSettings b ()LEnumGamemode; getGameType
WorldSettings b gameType
WorldSettings c ()Z isHardcore
WorldSettings c hardcore
WorldSettings d ()LEnumDifficulty; getDifficulty
WorldSettings d difficulty
WorldSettings e allowCommands
WorldSettings f ()LGameRules; getGameRules
WorldSettings f gameRules
net/minecraft/server/Main a (LConvertable$ConversionSession;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lcom/google/common/collect/ImmutableSet;)V convertWorld
net/minecraft/server/MinecraftServer A onlineMode
net/minecraft/server/MinecraftServer C ()Z getAllowNether
net/minecraft/server/MinecraftServer C pvpMode
net/minecraft/server/MinecraftServer D allowFlight
net/minecraft/server/MinecraftServer E motd
net/minecraft/server/MinecraftServer G ()Ljava/lang/Iterable; getWorlds
net/minecraft/server/MinecraftServer H ()Ljava/lang/String; getVersion
net/minecraft/server/MinecraftServer I ()I getPlayerCount
net/minecraft/server/MinecraftServer I demoMode
net/minecraft/server/MinecraftServer J ()I getMaxPlayers
net/minecraft/server/MinecraftServer K ()[Ljava/lang/String; getPlayers
net/minecraft/server/MinecraftServer L ()Ljava/security/KeyPair; getKeyPair
net/minecraft/server/MinecraftServer L hasTicked
net/minecraft/server/MinecraftServer M ()I getPort
net/minecraft/server/MinecraftServer M lastOverloadTime
net/minecraft/server/MinecraftServer N ()Ljava/lang/String; getSinglePlayerName
net/minecraft/server/MinecraftServer O ()Z isEmbeddedServer
net/minecraft/server/MinecraftServer O minecraftSessionService
net/minecraft/server/MinecraftServer P gameProfileRepository
net/minecraft/server/MinecraftServer Q ()Z getSpawnMonsters
net/minecraft/server/MinecraftServer Q userCache
net/minecraft/server/MinecraftServer R ()Z isDemoMode
net/minecraft/server/MinecraftServer S ()Ljava/lang/String; getResourcePack
net/minecraft/server/MinecraftServer S serverThread
net/minecraft/server/MinecraftServer T ()Ljava/lang/String; getResourcePackHash
net/minecraft/server/MinecraftServer T nextTick
net/minecraft/server/MinecraftServer V ()Z getOnlineMode
net/minecraft/server/MinecraftServer X ()Z getSpawnAnimals
net/minecraft/server/MinecraftServer X resourcePackRepository
net/minecraft/server/MinecraftServer Y ()Z getSpawnNPCs
net/minecraft/server/MinecraftServer Y scoreboardServer
net/minecraft/server/MinecraftServer Z ()Z getPVP
net/minecraft/server/MinecraftServer Z persistentCommandStorage
net/minecraft/server/MinecraftServer a (I)V setPort
net/minecraft/server/MinecraftServer a (LConvertable$ConversionSession;)V convertWorld
net/minecraft/server/MinecraftServer a (LResourceKey;)LWorldServer; getWorldServer
net/minecraft/server/MinecraftServer a (LWorldPersistentData;)V initializeScoreboards
net/minecraft/server/MinecraftServer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
net/minecraft/server/MinecraftServer a (Z)V safeShutdown
net/minecraft/server/MinecraftServer a (ZZZ)Z saveChunks
net/minecraft/server/MinecraftServer aA ()LResourcePackRepository; getResourcePackRepository
net/minecraft/server/MinecraftServer aB ()LCommandDispatcher; getCommandDispatcher
net/minecraft/server/MinecraftServer aC ()LCommandListenerWrapper; getServerCommandListener
net/minecraft/server/MinecraftServer aD ()LCraftingManager; getCraftingManager
net/minecraft/server/MinecraftServer aE ()LITagRegistry; getTagRegistry
net/minecraft/server/MinecraftServer aF ()LScoreboardServer; getScoreboard
net/minecraft/server/MinecraftServer aH ()LLootTableRegistry; getLootTableRegistry
net/minecraft/server/MinecraftServer aI ()LLootPredicateManager; getLootPredicateManager
net/minecraft/server/MinecraftServer aK ()LGameRules; getGameRules
net/minecraft/server/MinecraftServer aL ()LBossBattleCustomData; getBossBattleCustomData
net/minecraft/server/MinecraftServer aP ()LGameProfilerFiller; getMethodProfiler
net/minecraft/server/MinecraftServer aT ()Z isSyncChunkWrites
net/minecraft/server/MinecraftServer aU ()LDefinedStructureManager; getDefinedStructureManager
net/minecraft/server/MinecraftServer aV ()LSaveData; getSaveData
net/minecraft/server/MinecraftServer aW ()LIRegistryCustom; getCustomRegistry
net/minecraft/server/MinecraftServer aZ ()Lorg/apache/logging/log4j/Logger; getLogger
net/minecraft/server/MinecraftServer aa ()Z getAllowFlight
net/minecraft/server/MinecraftServer aa bossBattleCustomData
net/minecraft/server/MinecraftServer ab ()Ljava/lang/String; getMotd
net/minecraft/server/MinecraftServer ab customFunctionData
net/minecraft/server/MinecraftServer ac ()Z isStopped
net/minecraft/server/MinecraftServer ac circularTimer
net/minecraft/server/MinecraftServer ad ()LPlayerList; getPlayerList
net/minecraft/server/MinecraftServer ae ()LServerConnection; getServerConnection
net/minecraft/server/MinecraftServer af executorService
net/minecraft/server/MinecraftServer ah dataPackResources
net/minecraft/server/MinecraftServer aj ()I getSpawnProtection
net/minecraft/server/MinecraftServer am ()I getIdleTimeout
net/minecraft/server/MinecraftServer an ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
net/minecraft/server/MinecraftServer ao ()Lcom/mojang/authlib/GameProfileRepository; getGameProfileRepository
net/minecraft/server/MinecraftServer ap ()LUserCache; getUserCache
net/minecraft/server/MinecraftServer aq ()LServerPing; getServerPing
net/minecraft/server/MinecraftServer ar ()V invalidatePingSample
net/minecraft/server/MinecraftServer ax ()Lcom/mojang/datafixers/DataFixer; getDataFixer
net/minecraft/server/MinecraftServer ay ()LAdvancementDataWorld; getAdvancementData
net/minecraft/server/MinecraftServer az ()LCustomFunctionData; getFunctionData
net/minecraft/server/MinecraftServer b (LWorldLoadListener;)V loadSpawn
net/minecraft/server/MinecraftServer ba ()Z canSleepForTick
net/minecraft/server/MinecraftServer bc ()V updateSpawnFlags
net/minecraft/server/MinecraftServer c (I)V setIdleTimeout
net/minecraft/server/MinecraftServer d ()Z init
net/minecraft/server/MinecraftServer d (Z)V setOnlineMode
net/minecraft/server/MinecraftServer d convertable
net/minecraft/server/MinecraftServer e ()V exit
net/minecraft/server/MinecraftServer e (Ljava/lang/String;)V setMotd
net/minecraft/server/MinecraftServer e worldNBTStorage
net/minecraft/server/MinecraftServer f ()Z isHardcore
net/minecraft/server/MinecraftServer f (Z)V setPVP
net/minecraft/server/MinecraftServer f customRegistry
net/minecraft/server/MinecraftServer g (Z)V setAllowFlight
net/minecraft/server/MinecraftServer g proxy
net/minecraft/server/MinecraftServer i saveData
net/minecraft/server/MinecraftServer k snooper
net/minecraft/server/MinecraftServer l tickables
net/minecraft/server/MinecraftServer l_ ()V loadWorld
net/minecraft/server/MinecraftServer m ()Z getEnableCommandBlock
net/minecraft/server/MinecraftServer n methodProfiler
net/minecraft/server/MinecraftServer o ()Ljava/util/Optional; getModded
net/minecraft/server/MinecraftServer o serverConnection
net/minecraft/server/MinecraftServer p worldLoadListenerFactory
net/minecraft/server/MinecraftServer q ()V updateWorldSettings
net/minecraft/server/MinecraftServer q serverPing
net/minecraft/server/MinecraftServer r ()V loadResourcesZip
net/minecraft/server/MinecraftServer s ()LEnumGamemode; getGamemode
net/minecraft/server/MinecraftServer s dataConverterManager
net/minecraft/server/MinecraftServer t ()V stop
net/minecraft/server/MinecraftServer t serverIp
net/minecraft/server/MinecraftServer u ()Ljava/lang/String; getServerIp
net/minecraft/server/MinecraftServer u serverPort
net/minecraft/server/MinecraftServer v ()Z isRunning
net/minecraft/server/MinecraftServer v worldServer
net/minecraft/server/MinecraftServer w playerList
net/minecraft/server/MinecraftServer x ()V sleepForTick
net/minecraft/server/MinecraftServer x isRunning
net/minecraft/server/MinecraftServer y isStopped
net/minecraft/server/MinecraftServer z ticks
net/minecraft/server/MinecraftServer V hasExecutedTask
net/minecraft/server/MinecraftServer U taskOversleepMaxTime
